

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Mar 22 12:24:50 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           	psect	idataBANK0
    48  00169C                     __pidataBANK0:
    49                           	opt stack 0
    50                           
    51                           ;initializer for _problem
    52  00169C  B2                 	db	low STR_1
    53  00169D  06                 	db	high STR_1
    54                           
    55                           ;initializer for _startup
    56  00169E  A6                 	db	low STR_2
    57  00169F  06                 	db	high STR_2
    58                           
    59                           	psect	smallconst
    60  000600                     __psmallconst:
    61                           	opt stack 0
    62  000600  00                 	db	0
    63  000601                     _lcd_init:
    64                           	opt stack 0
    65  000601  33                 	db	51
    66  000602  32                 	db	50
    67  000603  2C                 	db	44
    68  000604  06                 	db	6
    69  000605  0C                 	db	12
    70  000606                     __end_of_lcd_init:
    71                           	opt stack 0
    72  000606                     _msg_ary:
    73                           	opt stack 0
    74  000606  44                 	db	68
    75  000607  65                 	db	101
    76  000608  73                 	db	115
    77  000609  69                 	db	105
    78  00060A  72                 	db	114
    79  00060B  65                 	db	101
    80  00060C  64                 	db	100
    81  00060D  20                 	db	32
    82  00060E  3E                 	db	62
    83  00060F  20                 	db	32
    84  000610  00                 	db	0
    85  000611  00                 	db	0
    86  000612  00                 	db	0
    87  000613  00                 	db	0
    88  000614  00                 	db	0
    89  000615  00                 	db	0
    90  000616  41                 	db	65
    91  000617  63                 	db	99
    92  000618  74                 	db	116
    93  000619  75                 	db	117
    94  00061A  61                 	db	97
    95  00061B  6C                 	db	108
    96  00061C  20                 	db	32
    97  00061D  20                 	db	32
    98  00061E  3E                 	db	62
    99  00061F  20                 	db	32
   100  000620  00                 	db	0
   101  000621  00                 	db	0
   102  000622  00                 	db	0
   103  000623  00                 	db	0
   104  000624  00                 	db	0
   105  000625  00                 	db	0
   106  000626  50                 	db	80
   107  000627  4F                 	db	79
   108  000628  54                 	db	84
   109  000629  20                 	db	32
   110  00062A  56                 	db	86
   111  00062B  61                 	db	97
   112  00062C  6C                 	db	108
   113  00062D  75                 	db	117
   114  00062E  65                 	db	101
   115  00062F  20                 	db	32
   116  000630  3E                 	db	62
   117  000631  20                 	db	32
   118  000632  00                 	db	0
   119  000633  00                 	db	0
   120  000634  00                 	db	0
   121  000635  00                 	db	0
   122  000636  50                 	db	80
   123  000637  72                 	db	114
   124  000638  65                 	db	101
   125  000639  73                 	db	115
   126  00063A  73                 	db	115
   127  00063B  20                 	db	32
   128  00063C  45                 	db	69
   129  00063D  6E                 	db	110
   130  00063E  74                 	db	116
   131  00063F  65                 	db	101
   132  000640  72                 	db	114
   133  000641  00                 	db	0
   134  000642  00                 	db	0
   135  000643  00                 	db	0
   136  000644  00                 	db	0
   137  000645  00                 	db	0
   138  000646  00                 	db	0
   139  000647  00                 	db	0
   140  000648  00                 	db	0
   141  000649  00                 	db	0
   142  00064A  00                 	db	0
   143  00064B  00                 	db	0
   144  00064C  00                 	db	0
   145  00064D  00                 	db	0
   146  00064E  00                 	db	0
   147  00064F  00                 	db	0
   148  000650  00                 	db	0
   149  000651  00                 	db	0
   150  000652  00                 	db	0
   151  000653  00                 	db	0
   152  000654  00                 	db	0
   153  000655  00                 	db	0
   154  000656  00                 	db	0
   155  000657  00                 	db	0
   156  000658  00                 	db	0
   157  000659  00                 	db	0
   158  00065A  00                 	db	0
   159  00065B  00                 	db	0
   160  00065C  00                 	db	0
   161  00065D  00                 	db	0
   162  00065E  00                 	db	0
   163  00065F  00                 	db	0
   164  000660  00                 	db	0
   165  000661  00                 	db	0
   166  000662  00                 	db	0
   167  000663  00                 	db	0
   168  000664  00                 	db	0
   169  000665  00                 	db	0
   170  000666  00                 	db	0
   171  000667  00                 	db	0
   172  000668  00                 	db	0
   173  000669  00                 	db	0
   174  00066A  00                 	db	0
   175  00066B  00                 	db	0
   176  00066C  00                 	db	0
   177  00066D  00                 	db	0
   178  00066E  00                 	db	0
   179  00066F  00                 	db	0
   180  000670  00                 	db	0
   181  000671  00                 	db	0
   182  000672  00                 	db	0
   183  000673  00                 	db	0
   184  000674  00                 	db	0
   185  000675  00                 	db	0
   186  000676  00                 	db	0
   187  000677  00                 	db	0
   188  000678  00                 	db	0
   189  000679  00                 	db	0
   190  00067A  00                 	db	0
   191  00067B  00                 	db	0
   192  00067C  00                 	db	0
   193  00067D  00                 	db	0
   194  00067E  00                 	db	0
   195  00067F  00                 	db	0
   196  000680  00                 	db	0
   197  000681  00                 	db	0
   198  000682  00                 	db	0
   199  000683  00                 	db	0
   200  000684  00                 	db	0
   201  000685  00                 	db	0
   202  000686  00                 	db	0
   203  000687  00                 	db	0
   204  000688  00                 	db	0
   205  000689  00                 	db	0
   206  00068A  00                 	db	0
   207  00068B  00                 	db	0
   208  00068C  00                 	db	0
   209  00068D  00                 	db	0
   210  00068E  00                 	db	0
   211  00068F  00                 	db	0
   212  000690  00                 	db	0
   213  000691  00                 	db	0
   214  000692  00                 	db	0
   215  000693  00                 	db	0
   216  000694  00                 	db	0
   217  000695  00                 	db	0
   218  000696  00                 	db	0
   219  000697  00                 	db	0
   220  000698  00                 	db	0
   221  000699  00                 	db	0
   222  00069A  00                 	db	0
   223  00069B  00                 	db	0
   224  00069C  00                 	db	0
   225  00069D  00                 	db	0
   226  00069E  00                 	db	0
   227  00069F  00                 	db	0
   228  0006A0  00                 	db	0
   229  0006A1  00                 	db	0
   230  0006A2  00                 	db	0
   231  0006A3  00                 	db	0
   232  0006A4  00                 	db	0
   233  0006A5  00                 	db	0
   234  0006A6                     __end_of_msg_ary:
   235                           	opt stack 0
   236  0000                     _ADCON0	set	4034
   237  0000                     _ADCON0bits	set	4034
   238  0000                     _ADCON1	set	4033
   239  0000                     _ADCON2	set	4032
   240  0000                     _ADRESH	set	4036
   241  0000                     _CCP1CONbits	set	4029
   242  0000                     _CCP2CONbits	set	4026
   243  0000                     _CCPR1H	set	4031
   244  0000                     _CCPR1L	set	4030
   245  0000                     _CCPR2L	set	4027
   246  0000                     _INTCONbits	set	4082
   247  0000                     _LATDbits	set	3980
   248  0000                     _LATEbits	set	3981
   249  0000                     _OSCCONbits	set	4051
   250  0000                     _PIE1bits	set	3997
   251  0000                     _PIR1bits	set	3998
   252  0000                     _PORTB	set	3969
   253  0000                     _PORTEbits	set	3972
   254  0000                     _PR2	set	4043
   255  0000                     _RCONbits	set	4048
   256  0000                     _T0CON	set	4053
   257  0000                     _T0CONbits	set	4053
   258  0000                     _T1CONbits	set	4045
   259  0000                     _T2CONbits	set	4042
   260  0000                     _TMR0H	set	4055
   261  0000                     _TMR0L	set	4054
   262  0000                     _TMR1H	set	4047
   263  0000                     _TMR1L	set	4046
   264  0000                     _TRISA	set	3986
   265  0000                     _TRISB	set	3987
   266  0000                     _TRISCbits	set	3988
   267  0000                     _TRISD	set	3989
   268  0000                     _TRISE	set	3990
   269  0006A6                     STR_2:
   270  0006A6  52                 	db	82	;'R'
   271  0006A7  65                 	db	101	;'e'
   272  0006A8  61                 	db	97	;'a'
   273  0006A9  64                 	db	100	;'d'
   274  0006AA  79                 	db	121	;'y'
   275  0006AB  20                 	db	32
   276  0006AC  74                 	db	116	;'t'
   277  0006AD  6F                 	db	111	;'o'
   278  0006AE  20                 	db	32
   279  0006AF  67                 	db	103	;'g'
   280  0006B0  6F                 	db	111	;'o'
   281  0006B1  00                 	db	0
   282  0006B2                     STR_1:
   283  0006B2  50                 	db	80	;'P'
   284  0006B3  72                 	db	114	;'r'
   285  0006B4  6F                 	db	111	;'o'
   286  0006B5  62                 	db	98	;'b'
   287  0006B6  6C                 	db	108	;'l'
   288  0006B7  65                 	db	101	;'e'
   289  0006B8  6D                 	db	109	;'m'
   290  0006B9  00                 	db	0
   291                           
   292                           ; #config settings
   293  0006BA  00                 	db	0	; dummy byte at the end
   294  0000                     
   295                           	psect	cinit
   296  0014C2                     __pcinit:
   297                           	opt stack 0
   298  0014C2                     start_initialization:
   299                           	opt stack 0
   300  0014C2                     __initialization:
   301                           	opt stack 0
   302                           
   303                           ; Clear objects allocated to BANK0 (7 bytes)
   304  0014C2  EE00  F092         	lfsr	0,__pbssBANK0
   305  0014C6  0E07               	movlw	7
   306  0014C8                     clear_0:
   307  0014C8  6AEE               	clrf	postinc0,c
   308  0014CA  06E8               	decf	wreg,f,c
   309  0014CC  E1FD               	bnz	clear_0
   310                           
   311                           ; Clear objects allocated to COMRAM (22 bytes)
   312  0014CE  EE00  F04E         	lfsr	0,__pbssCOMRAM
   313  0014D2  0E16               	movlw	22
   314  0014D4                     clear_1:
   315  0014D4  6AEE               	clrf	postinc0,c
   316  0014D6  06E8               	decf	wreg,f,c
   317  0014D8  E1FD               	bnz	clear_1
   318                           
   319                           ; Initialize objects allocated to BANK0 (4 bytes)
   320                           ; load TBLPTR registers with __pidataBANK0
   321  0014DA  0E9C               	movlw	low __pidataBANK0
   322  0014DC  6EF6               	movwf	tblptrl,c
   323  0014DE  0E16               	movlw	high __pidataBANK0
   324  0014E0  6EF7               	movwf	tblptrh,c
   325  0014E2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   326  0014E4  6EF8               	movwf	tblptru,c
   327  0014E6  EE00  F099         	lfsr	0,__pdataBANK0
   328  0014EA  EE10 F004          	lfsr	1,4
   329  0014EE                     copy_data0:
   330  0014EE  0009               	tblrd		*+
   331  0014F0  CFF5 FFEE          	movff	tablat,postinc0
   332  0014F4  50E5               	movf	postdec1,w,c
   333  0014F6  50E1               	movf	fsr1l,w,c
   334  0014F8  E1FA               	bnz	copy_data0
   335  0014FA                     end_of_initialization:
   336                           	opt stack 0
   337  0014FA                     __end_of__initialization:
   338                           	opt stack 0
   339  0014FA  9064               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   340  0014FC  9264               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   341  0014FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   342  001500  6EF8               	movwf	tblptru,c
   343  001502  0100               	movlb	0
   344  001504  EF5E  F003         	goto	_main	;jump to C main() function
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	bssCOMRAM
   355  00004E                     __pbssCOMRAM:
   356                           	opt stack 0
   357  00004E                     _control1:
   358                           	opt stack 0
   359  00004E                     	ds	13
   360  00005B                     Find_Button_Press@Button_Count:
   361                           	opt stack 0
   362  00005B                     	ds	1
   363  00005C                     Find_Button_Press@Button_State:
   364                           	opt stack 0
   365  00005C                     	ds	1
   366  00005D                     Find_Button_Press@Temp_Press:
   367                           	opt stack 0
   368  00005D                     	ds	1
   369  00005E                     _Actual:
   370                           	opt stack 0
   371  00005E                     	ds	1
   372  00005F                     _count:
   373                           	opt stack 0
   374  00005F                     	ds	1
   375  000060                     _count_test:
   376                           	opt stack 0
   377  000060                     	ds	1
   378  000061                     _rev:
   379                           	opt stack 0
   380  000061                     	ds	1
   381  000062                     _rev1:
   382                           	opt stack 0
   383  000062                     	ds	1
   384  000063                     _sample_time:
   385                           	opt stack 0
   386  000063                     	ds	1
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           postdec1	equ	0xFE5
   394                           fsr1l	equ	0xFE1
   395                           
   396                           	psect	bssBANK0
   397  000092                     __pbssBANK0:
   398                           	opt stack 0
   399  000092                     _Motor1:
   400                           	opt stack 0
   401  000092                     	ds	3
   402  000095                     _capture:
   403                           	opt stack 0
   404  000095                     	ds	2
   405  000097                     _Button_Press:
   406                           	opt stack 0
   407  000097                     	ds	1
   408  000098                     _TICK_E:
   409                           	opt stack 0
   410  000098                     	ds	1
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           postdec1	equ	0xFE5
   418                           fsr1l	equ	0xFE1
   419                           
   420                           	psect	dataBANK0
   421  000099                     __pdataBANK0:
   422                           	opt stack 0
   423  000099                     _problem:
   424                           	opt stack 0
   425  000099                     	ds	2
   426  00009B                     _startup:
   427                           	opt stack 0
   428  00009B                     	ds	2
   429                           tblptru	equ	0xFF8
   430                           tblptrh	equ	0xFF7
   431                           tblptrl	equ	0xFF6
   432                           tablat	equ	0xFF5
   433                           postinc0	equ	0xFEE
   434                           wreg	equ	0xFE8
   435                           postdec1	equ	0xFE5
   436                           fsr1l	equ	0xFE1
   437                           
   438                           	psect	cstackBANK0
   439  000080                     __pcstackBANK0:
   440                           	opt stack 0
   441  000080                     ??_delay_s:
   442  000080                     ?___awdiv:
   443                           	opt stack 0
   444  000080                     ?___awmod:
   445                           	opt stack 0
   446  000080                     ?___ltdiv:
   447                           	opt stack 0
   448  000080                     lcd_raw_send@RS:
   449                           	opt stack 0
   450  000080                     OpenTimer0@config:
   451                           	opt stack 0
   452  000080                     WriteTimer0@timer0:
   453                           	opt stack 0
   454  000080                     ___awdiv@dividend:
   455                           	opt stack 0
   456  000080                     ___awmod@dividend:
   457                           	opt stack 0
   458  000080                     ___ltdiv@dividend:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0x0
   462  000080                     	ds	1
   463  000081                     ??_lcd_raw_send:
   464  000081                     delay_s@secs:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x1
   468  000081                     	ds	1
   469  000082                     delay_s@j:
   470                           	opt stack 0
   471  000082                     WriteTimer0@timer:
   472                           	opt stack 0
   473  000082                     ___awdiv@divisor:
   474                           	opt stack 0
   475  000082                     ___awmod@divisor:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x2
   479  000082                     	ds	1
   480  000083                     lcd_raw_send@in:
   481                           	opt stack 0
   482  000083                     delay_s@i:
   483                           	opt stack 0
   484  000083                     ___ltdiv@divisor:
   485                           	opt stack 0
   486                           
   487                           ; 3 bytes @ 0x3
   488  000083                     	ds	1
   489  000084                     lcd_print_ch@in:
   490                           	opt stack 0
   491  000084                     lcd_command@in:
   492                           	opt stack 0
   493  000084                     ___awdiv@counter:
   494                           	opt stack 0
   495  000084                     ___awmod@counter:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x4
   499  000084                     	ds	1
   500  000085                     ??_lcd_clear:
   501  000085                     lcd_cursor@y:
   502                           	opt stack 0
   503  000085                     ___awdiv@sign:
   504                           	opt stack 0
   505  000085                     ___awmod@sign:
   506                           	opt stack 0
   507  000085                     lcd_print@mess:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x5
   511  000085                     	ds	1
   512  000086                     ??_lcd_start:
   513  000086                     lcd_cursor@x:
   514                           	opt stack 0
   515  000086                     ___awdiv@quotient:
   516                           	opt stack 0
   517  000086                     ___ltdiv@quotient:
   518                           	opt stack 0
   519                           
   520                           ; 3 bytes @ 0x6
   521  000086                     	ds	1
   522  000087                     ??_lcd_print:
   523  000087                     lcd_start@i:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x7
   527  000087                     	ds	1
   528  000088                     lcd_display_value@hunds:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x8
   532  000088                     	ds	1
   533  000089                     lcd_print@i:
   534                           	opt stack 0
   535  000089                     lcd_display_value@tens:
   536                           	opt stack 0
   537  000089                     ___ltdiv@counter:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x9
   541  000089                     	ds	1
   542  00008A                     ??_Window:
   543  00008A                     lcd_display_value@units:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0xA
   547  00008A                     	ds	1
   548  00008B                     lcd_display_value@value:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0xB
   552  00008B                     	ds	1
   553  00008C                     Window@num:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0xC
   557  00008C                     	ds	1
   558  00008D                     main@t1clk:
   559                           	opt stack 0
   560                           
   561                           ; 3 bytes @ 0xD
   562  00008D                     	ds	3
   563  000090                     main@my_mch_state:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x10
   567  000090                     	ds	1
   568  000091                     main@ADC_Result:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x11
   572  000091                     	ds	1
   573                           tblptru	equ	0xFF8
   574                           tblptrh	equ	0xFF7
   575                           tblptrl	equ	0xFF6
   576                           tablat	equ	0xFF5
   577                           postinc0	equ	0xFEE
   578                           wreg	equ	0xFE8
   579                           postdec1	equ	0xFE5
   580                           fsr1l	equ	0xFE1
   581                           
   582                           	psect	cstackCOMRAM
   583  000001                     __pcstackCOMRAM:
   584                           	opt stack 0
   585  000001                     ?___ftpack:
   586                           	opt stack 0
   587  000001                     i2WriteTimer0@timer0:
   588                           	opt stack 0
   589  000001                     ___ftpack@arg:
   590                           	opt stack 0
   591                           
   592                           ; 3 bytes @ 0x0
   593  000001                     	ds	2
   594  000003                     i2WriteTimer0@timer:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x2
   598  000003                     	ds	1
   599  000004                     ___ftpack@exp:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x3
   603  000004                     	ds	1
   604  000005                     ___ftpack@sign:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x4
   608  000005                     	ds	1
   609  000006                     ??___ftpack:
   610                           
   611                           ; 0 bytes @ 0x5
   612  000006                     	ds	3
   613  000009                     ?___abtoft:
   614                           	opt stack 0
   615  000009                     ?___lbtoft:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x8
   619  000009                     	ds	3
   620  00000C                     ___abtoft@sign:
   621                           	opt stack 0
   622  00000C                     ___lbtoft@c:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0xB
   626  00000C                     	ds	1
   627  00000D                     ___abtoft@c:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0xC
   631  00000D                     	ds	1
   632  00000E                     ?___ftmul:
   633                           	opt stack 0
   634  00000E                     ___ftmul@f1:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0xD
   638  00000E                     	ds	3
   639  000011                     ___ftmul@f2:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x10
   643  000011                     	ds	3
   644  000014                     ??___ftmul:
   645                           
   646                           ; 0 bytes @ 0x13
   647  000014                     	ds	3
   648  000017                     ___ftmul@exp:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x16
   652  000017                     	ds	1
   653  000018                     ___ftmul@f3_as_product:
   654                           	opt stack 0
   655                           
   656                           ; 3 bytes @ 0x17
   657  000018                     	ds	3
   658  00001B                     ___ftmul@cntr:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x1A
   662  00001B                     	ds	1
   663  00001C                     ___ftmul@sign:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x1B
   667  00001C                     	ds	1
   668  00001D                     ?___ftneg:
   669                           	opt stack 0
   670  00001D                     ___ftneg@f1:
   671                           	opt stack 0
   672                           
   673                           ; 3 bytes @ 0x1C
   674  00001D                     	ds	3
   675  000020                     ?___ftadd:
   676                           	opt stack 0
   677  000020                     ___ftadd@f1:
   678                           	opt stack 0
   679                           
   680                           ; 3 bytes @ 0x1F
   681  000020                     	ds	3
   682  000023                     ___ftadd@f2:
   683                           	opt stack 0
   684                           
   685                           ; 3 bytes @ 0x22
   686  000023                     	ds	3
   687  000026                     ??___ftadd:
   688                           
   689                           ; 0 bytes @ 0x25
   690  000026                     	ds	3
   691  000029                     ___ftadd@sign:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x28
   695  000029                     	ds	1
   696  00002A                     ___ftadd@exp2:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x29
   700  00002A                     	ds	1
   701  00002B                     ___ftadd@exp1:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x2A
   705  00002B                     	ds	1
   706  00002C                     ?___fttol:
   707                           	opt stack 0
   708  00002C                     ___fttol@f1:
   709                           	opt stack 0
   710                           
   711                           ; 3 bytes @ 0x2B
   712  00002C                     	ds	4
   713  000030                     ??___fttol:
   714                           
   715                           ; 0 bytes @ 0x2F
   716  000030                     	ds	5
   717  000035                     ___fttol@sign1:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x34
   721  000035                     	ds	1
   722  000036                     ___fttol@lval:
   723                           	opt stack 0
   724                           
   725                           ; 4 bytes @ 0x35
   726  000036                     	ds	4
   727  00003A                     ___fttol@exp1:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x39
   731  00003A                     	ds	1
   732  00003B                     controller_funct@temp:
   733                           	opt stack 0
   734                           
   735                           ; 3 bytes @ 0x3A
   736  00003B                     	ds	3
   737  00003E                     ??_myIsr:
   738                           
   739                           ; 0 bytes @ 0x3D
   740  00003E                     	ds	16
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           tblptrl	equ	0xFF6
   744                           tablat	equ	0xFF5
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           postdec1	equ	0xFE5
   748                           fsr1l	equ	0xFE1
   749                           
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   752 ;;
   753 ;; *************** function _main *****************
   754 ;; Defined at:
   755 ;;		line 131 in file "menu_proj.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  t1clk           3   13[BANK0 ] unsigned um
   760 ;;  ADC_Result      1   17[BANK0 ] unsigned char 
   761 ;;  my_mch_state    1   16[BANK0 ] enum E4367
   762 ;; Return value:  Size  Location     Type
   763 ;;		None               void
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   771 ;;      Params:         0       0       0       0       0       0       0
   772 ;;      Locals:         0       5       0       0       0       0       0
   773 ;;      Temps:          0       0       0       0       0       0       0
   774 ;;      Totals:         0       5       0       0       0       0       0
   775 ;;Total ram usage:        5 bytes
   776 ;; Hardware stack levels required when called:    8
   777 ;; This function calls:
   778 ;;		_Initial
   779 ;;		_Window
   780 ;;		___ltdiv
   781 ;;		_delay_s
   782 ;;		_lcd_clear
   783 ;;		_lcd_cursor
   784 ;;		_lcd_display_value
   785 ;;		_lcd_print
   786 ;;		_lcd_start
   787 ;;		_timer
   788 ;; This function is called by:
   789 ;;		Startup code after reset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text0
   794  0006BC                     __ptext0:
   795                           	opt stack 0
   796  0006BC                     _main:
   797                           	opt stack 23
   798                           
   799                           ;menu_proj.c: 133: unsigned char ADC_Result = 0;
   800                           
   801                           ;incstack = 0
   802  0006BC  0E00               	movlw	0
   803  0006BE  0100               	movlb	0	; () banked
   804  0006C0  6F91               	movwf	main@ADC_Result& (0+255),b
   805                           
   806                           ;menu_proj.c: 134: unsigned short long t1clk = 250000;
   807  0006C2  0E90               	movlw	144
   808  0006C4  0100               	movlb	0	; () banked
   809  0006C6  6F8D               	movwf	main@t1clk& (0+255),b
   810  0006C8  0ED0               	movlw	208
   811  0006CA  0100               	movlb	0	; () banked
   812  0006CC  6F8E               	movwf	(main@t1clk+1)& (0+255),b
   813  0006CE  0E03               	movlw	3
   814  0006D0  0100               	movlb	0	; () banked
   815  0006D2  6F8F               	movwf	(main@t1clk+2)& (0+255),b
   816                           
   817                           ;menu_proj.c: 136: typedef enum {RUN = 0,Update_Desired} states;
   818                           ;menu_proj.c: 137: states my_mch_state = Update_Desired;
   819  0006D4  0E01               	movlw	1
   820  0006D6  0100               	movlb	0	; () banked
   821  0006D8  6F90               	movwf	main@my_mch_state& (0+255),b
   822                           
   823                           ; BSR set to: 0
   824                           ;menu_proj.c: 139: Initial();
   825  0006DA  EC3D  F009         	call	_Initial	;wreg free
   826                           
   827                           ;menu_proj.c: 140: timer();
   828  0006DE  EC49  F00B         	call	_timer	;wreg free
   829                           
   830                           ;menu_proj.c: 141: lcd_start ();
   831  0006E2  EC3B  F00A         	call	_lcd_start	;wreg free
   832                           
   833                           ;menu_proj.c: 142: lcd_cursor ( 0, 0 ) ;
   834  0006E6  0E00               	movlw	0
   835  0006E8  0100               	movlb	0	; () banked
   836  0006EA  6F85               	movwf	lcd_cursor@y& (0+255),b
   837  0006EC  0E00               	movlw	0
   838  0006EE  ECD9  F00A         	call	_lcd_cursor
   839                           
   840                           ;menu_proj.c: 143: lcd_print ( startup ) ;
   841  0006F2  C09B  F085         	movff	_startup,lcd_print@mess
   842  0006F6  C09C  F086         	movff	_startup+1,lcd_print@mess+1
   843  0006FA  EC09  F00A         	call	_lcd_print	;wreg free
   844                           
   845                           ;menu_proj.c: 145: delay_s(2);
   846  0006FE  0E02               	movlw	2
   847  000700  EC84  F00A         	call	_delay_s
   848                           
   849                           ;menu_proj.c: 147: Window(0);
   850  000704  0E00               	movlw	0
   851  000706  EC87  F009         	call	_Window
   852                           
   853                           ;menu_proj.c: 148: lcd_cursor ( 12, 0 ) ;
   854  00070A  0E00               	movlw	0
   855  00070C  0100               	movlb	0	; () banked
   856  00070E  6F85               	movwf	lcd_cursor@y& (0+255),b
   857  000710  0E0C               	movlw	12
   858  000712  ECD9  F00A         	call	_lcd_cursor
   859                           
   860                           ;menu_proj.c: 149: lcd_display_value(Motor1.Desired);
   861  000716  0100               	movlb	0	; () banked
   862  000718  5192               	movf	_Motor1& (0+255),w,b
   863  00071A  ECE9  F007         	call	_lcd_display_value
   864                           
   865                           ;menu_proj.c: 150: lcd_cursor ( 12, 1 ) ;
   866  00071E  0E01               	movlw	1
   867  000720  0100               	movlb	0	; () banked
   868  000722  6F85               	movwf	lcd_cursor@y& (0+255),b
   869  000724  0E0C               	movlw	12
   870  000726  ECD9  F00A         	call	_lcd_cursor
   871                           
   872                           ;menu_proj.c: 151: lcd_display_value(Motor1.Actual);
   873  00072A  0100               	movlb	0	; () banked
   874  00072C  5193               	movf	(_Motor1+1)& (0+255),w,b
   875  00072E  ECE9  F007         	call	_lcd_display_value
   876                           
   877                           ;menu_proj.c: 153: PIE1bits.CCP1IE = 1;
   878  000732  849D               	bsf	3997,2,c	;volatile
   879                           
   880                           ;menu_proj.c: 155: (INTCONbits.GIE = 1);
   881  000734  8EF2               	bsf	intcon,7,c	;volatile
   882  000736                     l2219:
   883  000736  0100               	movlb	0	; () banked
   884  000738  5197               	movf	_Button_Press& (0+255),w,b
   885  00073A  A4D8               	btfss	status,2,c
   886  00073C  D026               	goto	l2243
   887                           
   888                           ; BSR set to: 0
   889  00073E  0100               	movlb	0	; () banked
   890  000740  5198               	movf	_TICK_E& (0+255),w,b
   891  000742  A4D8               	btfss	status,2,c
   892  000744  D022               	goto	l2243
   893  000746  D7F7               	goto	l2219
   894  000748                     l173:
   895                           
   896                           ; BSR set to: 0
   897                           ;menu_proj.c: 165: if (Button_Press.B0){
   898  000748  0100               	movlb	0	; () banked
   899  00074A  A197               	btfss	_Button_Press& (0+255),0,b
   900  00074C  D08A               	goto	l2275
   901                           
   902                           ; BSR set to: 0
   903                           ;menu_proj.c: 166: my_mch_state = Update_Desired;
   904  00074E  0E01               	movlw	1
   905  000750  0100               	movlb	0	; () banked
   906  000752  6F90               	movwf	main@my_mch_state& (0+255),b
   907                           
   908                           ; BSR set to: 0
   909                           ;menu_proj.c: 167: Window(1);
   910  000754  0E01               	movlw	1
   911  000756  EC87  F009         	call	_Window
   912                           
   913                           ;menu_proj.c: 168: ADCON0bits.ADON=1;
   914  00075A  80C2               	bsf	4034,0,c	;volatile
   915                           
   916                           ;menu_proj.c: 169: PIR1bits.ADIF=0;
   917  00075C  9C9E               	bcf	3998,6,c	;volatile
   918                           
   919                           ;menu_proj.c: 171: }
   920                           ;menu_proj.c: 173: break;
   921  00075E  D081               	goto	l2275
   922  000760                     l176:
   923                           
   924                           ; BSR set to: 0
   925                           ;menu_proj.c: 175: if (Button_Press.B0){
   926  000760  0100               	movlb	0	; () banked
   927  000762  A197               	btfss	_Button_Press& (0+255),0,b
   928  000764  D07E               	goto	l2275
   929                           
   930                           ; BSR set to: 0
   931                           ;menu_proj.c: 176: my_mch_state = RUN;
   932  000766  0E00               	movlw	0
   933  000768  0100               	movlb	0	; () banked
   934  00076A  6F90               	movwf	main@my_mch_state& (0+255),b
   935                           
   936                           ; BSR set to: 0
   937                           ;menu_proj.c: 177: Window(0);
   938  00076C  0E00               	movlw	0
   939  00076E  EC87  F009         	call	_Window
   940                           
   941                           ;menu_proj.c: 178: ADCON0bits.ADON=0;
   942  000772  90C2               	bcf	4034,0,c	;volatile
   943                           
   944                           ;menu_proj.c: 179: }
   945                           ;menu_proj.c: 180: break;
   946  000774  D076               	goto	l2275
   947  000776                     l178:
   948                           
   949                           ; BSR set to: 0
   950                           ;menu_proj.c: 182: if (Button_Press.B0){
   951  000776  0100               	movlb	0	; () banked
   952  000778  A197               	btfss	_Button_Press& (0+255),0,b
   953  00077A  D073               	goto	l2275
   954                           
   955                           ; BSR set to: 0
   956                           ;menu_proj.c: 183: my_mch_state = RUN;
   957  00077C  0E00               	movlw	0
   958  00077E  0100               	movlb	0	; () banked
   959  000780  6F90               	movwf	main@my_mch_state& (0+255),b
   960                           
   961                           ; BSR set to: 0
   962                           ;menu_proj.c: 184: Window(0);
   963  000782  0E00               	movlw	0
   964  000784  EC87  F009         	call	_Window
   965                           
   966                           ;menu_proj.c: 187: }
   967                           
   968                           ;menu_proj.c: 185: }
   969                           ;menu_proj.c: 186: break;
   970  000788  D06C               	goto	l2275
   971  00078A                     l2243:
   972  00078A  0100               	movlb	0	; () banked
   973  00078C  5190               	movf	main@my_mch_state& (0+255),w,b
   974                           
   975                           ; Switch size 1, requested type "space"
   976                           ; Number of cases is 2, Range of values is 0 to 1
   977                           ; switch strategies available:
   978                           ; Name         Instructions Cycles
   979                           ; simple_byte            7     4 (average)
   980                           ;	Chosen strategy is simple_byte
   981  00078E  0A00               	xorlw	0	; case 0
   982  000790  B4D8               	btfsc	status,2,c
   983  000792  D7DA               	goto	l173
   984  000794  0A01               	xorlw	1	; case 1
   985  000796  B4D8               	btfsc	status,2,c
   986  000798  D7E3               	goto	l176
   987  00079A  D7ED               	goto	l178
   988  00079C                     l2245:
   989                           
   990                           ; BSR set to: 0
   991                           ;menu_proj.c: 192: lcd_cursor ( 12, 0 ) ;
   992  00079C  0E00               	movlw	0
   993  00079E  0100               	movlb	0	; () banked
   994  0007A0  6F85               	movwf	lcd_cursor@y& (0+255),b
   995  0007A2  0E0C               	movlw	12
   996  0007A4  ECD9  F00A         	call	_lcd_cursor
   997                           
   998                           ;menu_proj.c: 193: lcd_display_value(Motor1.Desired);
   999  0007A8  0100               	movlb	0	; () banked
  1000  0007AA  5192               	movf	_Motor1& (0+255),w,b
  1001  0007AC  ECE9  F007         	call	_lcd_display_value
  1002                           
  1003                           ;menu_proj.c: 194: lcd_cursor ( 12, 1 ) ;
  1004  0007B0  0E01               	movlw	1
  1005  0007B2  0100               	movlb	0	; () banked
  1006  0007B4  6F85               	movwf	lcd_cursor@y& (0+255),b
  1007  0007B6  0E0C               	movlw	12
  1008  0007B8  ECD9  F00A         	call	_lcd_cursor
  1009                           
  1010                           ;menu_proj.c: 197: if (capture !=0)
  1011  0007BC  0100               	movlb	0	; () banked
  1012  0007BE  5195               	movf	_capture& (0+255),w,b
  1013  0007C0  0100               	movlb	0	; () banked
  1014  0007C2  1196               	iorwf	(_capture+1)& (0+255),w,b
  1015  0007C4  B4D8               	btfsc	status,2,c
  1016  0007C6  D017               	goto	l2253
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;menu_proj.c: 198: {
  1020                           ;menu_proj.c: 199: Motor1.Actual = t1clk/capture;
  1021  0007C8  C08D  F080         	movff	main@t1clk,___ltdiv@dividend
  1022  0007CC  C08E  F081         	movff	main@t1clk+1,___ltdiv@dividend+1
  1023  0007D0  C08F  F082         	movff	main@t1clk+2,___ltdiv@dividend+2
  1024  0007D4  C095  F083         	movff	_capture,___ltdiv@divisor
  1025  0007D8  C096  F084         	movff	_capture+1,___ltdiv@divisor+1
  1026  0007DC  0100               	movlb	0	; () banked
  1027  0007DE  6B85               	clrf	(___ltdiv@divisor+2)& (0+255),b
  1028  0007E0  ECEE  F008         	call	___ltdiv	;wreg free
  1029  0007E4  0100               	movlb	0	; () banked
  1030  0007E6  5180               	movf	?___ltdiv& (0+255),w,b
  1031  0007E8  0100               	movlb	0	; () banked
  1032  0007EA  6F93               	movwf	(_Motor1+1)& (0+255),b
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;menu_proj.c: 200: capture = 0;
  1036  0007EC  0E00               	movlw	0
  1037  0007EE  0100               	movlb	0	; () banked
  1038  0007F0  6F96               	movwf	(_capture+1)& (0+255),b
  1039  0007F2  0E00               	movlw	0
  1040  0007F4  6F95               	movwf	_capture& (0+255),b
  1041  0007F6                     l2253:
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;menu_proj.c: 202: }
  1045                           ;menu_proj.c: 203: lcd_display_value(Motor1.Actual);
  1046  0007F6  0100               	movlb	0	; () banked
  1047  0007F8  5193               	movf	(_Motor1+1)& (0+255),w,b
  1048  0007FA  ECE9  F007         	call	_lcd_display_value
  1049                           
  1050                           ;menu_proj.c: 205: LATEbits.LATE0 = 1;
  1051  0007FE  808D               	bsf	3981,0,c	;volatile
  1052                           
  1053                           ;menu_proj.c: 208: break;
  1054  000800  D039               	goto	l2277
  1055  000802                     l184:
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;menu_proj.c: 211: LATEbits.LATE1 = 1;;
  1059  000802  828D               	bsf	3981,1,c	;volatile
  1060                           
  1061                           ;menu_proj.c: 212: PIR1bits.ADIF=0;
  1062  000804  9C9E               	bcf	3998,6,c	;volatile
  1063                           
  1064                           ;menu_proj.c: 213: if (Button_Press.B1)
  1065  000806  0100               	movlb	0	; () banked
  1066  000808  B397               	btfsc	_Button_Press& (0+255),1,b
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;menu_proj.c: 214: {
  1070                           ;menu_proj.c: 215: Motor1.Desired = ADC_Result;
  1071  00080A  C091  F092         	movff	main@ADC_Result,_Motor1
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;menu_proj.c: 216: }
  1075                           ;menu_proj.c: 217: ADC_Result=ADRESH;
  1076  00080E  CFC4 F091          	movff	4036,main@ADC_Result	;volatile
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;menu_proj.c: 218: ADC_Result=ADC_Result>>2;
  1080  000812  0100               	movlb	0	; () banked
  1081  000814  4191               	rrncf	main@ADC_Result& (0+255),w,b
  1082  000816  42E8               	rrncf	wreg,f,c
  1083  000818  0B3F               	andlw	63
  1084  00081A  0100               	movlb	0	; () banked
  1085  00081C  6F91               	movwf	main@ADC_Result& (0+255),b
  1086                           
  1087                           ;menu_proj.c: 219: if (ADC_Result > 50)
  1088  00081E  0E32               	movlw	50
  1089  000820  0100               	movlb	0	; () banked
  1090  000822  6591               	cpfsgt	main@ADC_Result& (0+255),b
  1091  000824  D003               	goto	l2263
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;menu_proj.c: 220: ADC_Result=50;
  1095  000826  0E32               	movlw	50
  1096  000828  0100               	movlb	0	; () banked
  1097  00082A  6F91               	movwf	main@ADC_Result& (0+255),b
  1098  00082C                     l2263:
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;menu_proj.c: 221: lcd_cursor ( 12, 0 ) ;
  1102  00082C  0E00               	movlw	0
  1103  00082E  0100               	movlb	0	; () banked
  1104  000830  6F85               	movwf	lcd_cursor@y& (0+255),b
  1105  000832  0E0C               	movlw	12
  1106  000834  ECD9  F00A         	call	_lcd_cursor
  1107                           
  1108                           ;menu_proj.c: 222: lcd_display_value(ADC_Result);
  1109  000838  0100               	movlb	0	; () banked
  1110  00083A  5191               	movf	main@ADC_Result& (0+255),w,b
  1111  00083C  ECE9  F007         	call	_lcd_display_value
  1112                           
  1113                           ;menu_proj.c: 223: ADCON0bits.GO_DONE=1;
  1114  000840  82C2               	bsf	4034,1,c	;volatile
  1115                           
  1116                           ;menu_proj.c: 227: break;
  1117  000842  D018               	goto	l2277
  1118  000844                     l2269:
  1119                           
  1120                           ;menu_proj.c: 229: lcd_cursor ( 0, 0 ) ;
  1121  000844  0E00               	movlw	0
  1122  000846  0100               	movlb	0	; () banked
  1123  000848  6F85               	movwf	lcd_cursor@y& (0+255),b
  1124  00084A  0E00               	movlw	0
  1125  00084C  ECD9  F00A         	call	_lcd_cursor
  1126                           
  1127                           ;menu_proj.c: 230: lcd_clear();
  1128  000850  ECA7  F00A         	call	_lcd_clear	;wreg free
  1129                           
  1130                           ;menu_proj.c: 231: lcd_print ( problem );
  1131  000854  C099  F085         	movff	_problem,lcd_print@mess
  1132  000858  C09A  F086         	movff	_problem+1,lcd_print@mess+1
  1133  00085C  EC09  F00A         	call	_lcd_print	;wreg free
  1134                           
  1135                           ;menu_proj.c: 234: }
  1136                           
  1137                           ;menu_proj.c: 233: break;
  1138  000860  D009               	goto	l2277
  1139  000862                     l2275:
  1140  000862  0100               	movlb	0	; () banked
  1141  000864  5190               	movf	main@my_mch_state& (0+255),w,b
  1142                           
  1143                           ; Switch size 1, requested type "space"
  1144                           ; Number of cases is 2, Range of values is 0 to 1
  1145                           ; switch strategies available:
  1146                           ; Name         Instructions Cycles
  1147                           ; simple_byte            7     4 (average)
  1148                           ;	Chosen strategy is simple_byte
  1149  000866  0A00               	xorlw	0	; case 0
  1150  000868  B4D8               	btfsc	status,2,c
  1151  00086A  D798               	goto	l2245
  1152  00086C  0A01               	xorlw	1	; case 1
  1153  00086E  B4D8               	btfsc	status,2,c
  1154  000870  D7C8               	goto	l184
  1155  000872  D7E8               	goto	l2269
  1156  000874                     l2277:
  1157                           
  1158                           ;menu_proj.c: 236: Button_Press.Full = 0;
  1159  000874  0E00               	movlw	0
  1160  000876  0100               	movlb	0	; () banked
  1161  000878  6F97               	movwf	_Button_Press& (0+255),b
  1162                           
  1163                           ;menu_proj.c: 237: TICK_E=0;
  1164  00087A  0E00               	movlw	0
  1165  00087C  0100               	movlb	0	; () banked
  1166  00087E  6F98               	movwf	_TICK_E& (0+255),b
  1167                           
  1168                           ; BSR set to: 0
  1169  000880  D75A               	goto	l2219
  1170  000882                     __end_of_main:
  1171                           	opt stack 0
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           intcon	equ	0xFF2
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           postdec1	equ	0xFE5
  1180                           fsr1l	equ	0xFE1
  1181                           status	equ	0xFD8
  1182                           
  1183 ;; *************** function _timer *****************
  1184 ;; Defined at:
  1185 ;;		line 304 in file "menu_proj.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;		None               void
  1192 ;; Registers used:
  1193 ;;		None
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1199 ;;      Params:         0       0       0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0
  1202 ;;      Totals:         0       0       0       0       0       0       0
  1203 ;;Total ram usage:        0 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    4
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text1
  1214  001692                     __ptext1:
  1215                           	opt stack 0
  1216  001692                     _timer:
  1217                           	opt stack 26
  1218                           
  1219                           ;menu_proj.c: 307: OSCCONbits.IRCF0 = 1;
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;incstack = 0
  1223  001692  88D3               	bsf	4051,4,c	;volatile
  1224                           
  1225                           ;menu_proj.c: 308: OSCCONbits.IRCF1 = 1;
  1226  001694  8AD3               	bsf	4051,5,c	;volatile
  1227                           
  1228                           ;menu_proj.c: 309: OSCCONbits.IRCF2 = 1;
  1229  001696  8CD3               	bsf	4051,6,c	;volatile
  1230                           
  1231                           ;menu_proj.c: 310: OSCCONbits.SCS1 = 1;
  1232  001698  82D3               	bsf	4051,1,c	;volatile
  1233  00169A  0012               	return		;funcret
  1234  00169C                     __end_of_timer:
  1235                           	opt stack 0
  1236                           tblptru	equ	0xFF8
  1237                           tblptrh	equ	0xFF7
  1238                           tblptrl	equ	0xFF6
  1239                           tablat	equ	0xFF5
  1240                           intcon	equ	0xFF2
  1241                           postinc0	equ	0xFEE
  1242                           wreg	equ	0xFE8
  1243                           postdec1	equ	0xFE5
  1244                           fsr1l	equ	0xFE1
  1245                           status	equ	0xFD8
  1246                           
  1247 ;; *************** function _lcd_start *****************
  1248 ;; Defined at:
  1249 ;;		line 189 in file "../LCD_library/lcdlib_2016.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  i               1    7[BANK0 ] unsigned char 
  1254 ;;  t               1    0        unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      unsigned char 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1264 ;;      Params:         0       0       0       0       0       0       0
  1265 ;;      Locals:         0       1       0       0       0       0       0
  1266 ;;      Temps:          0       1       0       0       0       0       0
  1267 ;;      Totals:         0       2       0       0       0       0       0
  1268 ;;Total ram usage:        2 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    7
  1271 ;; This function calls:
  1272 ;;		_lcd_clear
  1273 ;;		_lcd_command
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text2
  1280  001476                     __ptext2:
  1281                           	opt stack 0
  1282  001476                     _lcd_start:
  1283                           	opt stack 23
  1284                           
  1285                           ;lcdlib_2016.c: 191: unsigned char i, t ;
  1286                           ;lcdlib_2016.c: 197: TRISD = (TRISD & 0xc0) ;
  1287                           
  1288                           ;incstack = 0
  1289  001476  5095               	movf	3989,w,c	;volatile
  1290  001478  0BC0               	andlw	192
  1291  00147A  6E95               	movwf	3989,c	;volatile
  1292                           
  1293                           ;lcdlib_2016.c: 202: _delay((unsigned long)((35)*(19660800/4000.0)));
  1294  00147C  0EE0               	movlw	224
  1295  00147E  0100               	movlb	0	; () banked
  1296  001480  6F86               	movwf	??_lcd_start& (0+255),b
  1297  001482  0E6A               	movlw	106
  1298  001484                     u1857:
  1299  001484  2EE8               	decfsz	wreg,f,c
  1300  001486  D7FE               	goto	u1857
  1301  001488  2F86               	decfsz	??_lcd_start& (0+255),f,b
  1302  00148A  D7FC               	goto	u1857
  1303                           
  1304                           ;lcdlib_2016.c: 203: for ( i=0 ; i < 5 ; i++ )
  1305  00148C  0E00               	movlw	0
  1306  00148E  0100               	movlb	0	; () banked
  1307  001490  6F87               	movwf	lcd_start@i& (0+255),b
  1308  001492                     l1957:
  1309                           
  1310                           ; BSR set to: 0
  1311  001492  0E04               	movlw	4
  1312  001494  0100               	movlb	0	; () banked
  1313  001496  6587               	cpfsgt	lcd_start@i& (0+255),b
  1314  001498  D001               	goto	l1961
  1315  00149A  D010               	goto	l1967
  1316  00149C                     l1961:
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;lcdlib_2016.c: 204: {
  1320                           ;lcdlib_2016.c: 205: lcd_command ( lcd_init [i] ) ;
  1321  00149C  0100               	movlb	0	; () banked
  1322  00149E  5187               	movf	lcd_start@i& (0+255),w,b
  1323  0014A0  0D01               	mullw	1
  1324  0014A2  0E01               	movlw	low _lcd_init
  1325  0014A4  24F3               	addwf	prodl,w,c
  1326  0014A6  6EF6               	movwf	tblptrl,c
  1327  0014A8  0E06               	movlw	high _lcd_init
  1328  0014AA  20F4               	addwfc	prodh,w,c
  1329  0014AC  6EF7               	movwf	tblptrh,c
  1330  0014AE                     	if	0	;There are less than 3 active tblptr bytes
  1331  0014AE                     	endif
  1332  0014AE  0008               	tblrd		*
  1333  0014B0  50F5               	movf	tablat,w,c
  1334  0014B2  EC2D  F00B         	call	_lcd_command
  1335  0014B6  0100               	movlb	0	; () banked
  1336  0014B8  2B87               	incf	lcd_start@i& (0+255),f,b
  1337  0014BA  D7EB               	goto	l1957
  1338  0014BC                     l1967:
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;lcdlib_2016.c: 206: }
  1342                           ;lcdlib_2016.c: 207: lcd_clear () ;
  1343  0014BC  ECA7  F00A         	call	_lcd_clear	;wreg free
  1344  0014C0  0012               	return	
  1345  0014C2                     __end_of_lcd_start:
  1346                           	opt stack 0
  1347                           tblptru	equ	0xFF8
  1348                           tblptrh	equ	0xFF7
  1349                           tblptrl	equ	0xFF6
  1350                           tablat	equ	0xFF5
  1351                           prodh	equ	0xFF4
  1352                           prodl	equ	0xFF3
  1353                           intcon	equ	0xFF2
  1354                           postinc0	equ	0xFEE
  1355                           wreg	equ	0xFE8
  1356                           postdec1	equ	0xFE5
  1357                           fsr1l	equ	0xFE1
  1358                           status	equ	0xFD8
  1359                           
  1360 ;; *************** function _lcd_display_value *****************
  1361 ;; Defined at:
  1362 ;;		line 244 in file "../LCD_library/lcdlib_2016.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  value           1    wreg     unsigned char 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  value           1   11[BANK0 ] unsigned char 
  1367 ;;  units           1   10[BANK0 ] unsigned char 
  1368 ;;  tens            1    9[BANK0 ] unsigned char 
  1369 ;;  hunds           1    8[BANK0 ] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;		None               void
  1372 ;; Registers used:
  1373 ;;		wreg, status,2, status,0, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1379 ;;      Params:         0       0       0       0       0       0       0
  1380 ;;      Locals:         0       4       0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0
  1382 ;;      Totals:         0       4       0       0       0       0       0
  1383 ;;Total ram usage:        4 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    6
  1386 ;; This function calls:
  1387 ;;		___awdiv
  1388 ;;		___awmod
  1389 ;;		_lcd_print_ch
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text3
  1396  000FD2                     __ptext3:
  1397                           	opt stack 0
  1398  000FD2                     _lcd_display_value:
  1399                           	opt stack 24
  1400                           
  1401                           ;incstack = 0
  1402                           ;lcd_display_value@value stored from wreg
  1403  000FD2  0100               	movlb	0	; () banked
  1404  000FD4  6F8B               	movwf	lcd_display_value@value& (0+255),b
  1405                           
  1406                           ;lcdlib_2016.c: 246: unsigned char hunds, tens, units ;
  1407                           ;lcdlib_2016.c: 250: units = value % 10 ;
  1408  000FD6  C08B  F080         	movff	lcd_display_value@value,___awmod@dividend
  1409  000FDA  0100               	movlb	0	; () banked
  1410  000FDC  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  1411  000FDE  0E00               	movlw	0
  1412  000FE0  0100               	movlb	0	; () banked
  1413  000FE2  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  1414  000FE4  0E0A               	movlw	10
  1415  000FE6  6F82               	movwf	___awmod@divisor& (0+255),b
  1416  000FE8  EC9D  F008         	call	___awmod	;wreg free
  1417  000FEC  0100               	movlb	0	; () banked
  1418  000FEE  5180               	movf	?___awmod& (0+255),w,b
  1419  000FF0  0100               	movlb	0	; () banked
  1420  000FF2  6F8A               	movwf	lcd_display_value@units& (0+255),b
  1421                           
  1422                           ;lcdlib_2016.c: 251: value = value / 10 ;
  1423  000FF4  C08B  F080         	movff	lcd_display_value@value,___awdiv@dividend
  1424  000FF8  0100               	movlb	0	; () banked
  1425  000FFA  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
  1426  000FFC  0E00               	movlw	0
  1427  000FFE  0100               	movlb	0	; () banked
  1428  001000  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  1429  001002  0E0A               	movlw	10
  1430  001004  6F82               	movwf	___awdiv@divisor& (0+255),b
  1431  001006  EC8A  F007         	call	___awdiv	;wreg free
  1432  00100A  0100               	movlb	0	; () banked
  1433  00100C  5180               	movf	?___awdiv& (0+255),w,b
  1434  00100E  0100               	movlb	0	; () banked
  1435  001010  6F8B               	movwf	lcd_display_value@value& (0+255),b
  1436                           
  1437                           ;lcdlib_2016.c: 252: tens = value % 10 ;
  1438  001012  C08B  F080         	movff	lcd_display_value@value,___awmod@dividend
  1439  001016  0100               	movlb	0	; () banked
  1440  001018  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  1441  00101A  0E00               	movlw	0
  1442  00101C  0100               	movlb	0	; () banked
  1443  00101E  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  1444  001020  0E0A               	movlw	10
  1445  001022  6F82               	movwf	___awmod@divisor& (0+255),b
  1446  001024  EC9D  F008         	call	___awmod	;wreg free
  1447  001028  0100               	movlb	0	; () banked
  1448  00102A  5180               	movf	?___awmod& (0+255),w,b
  1449  00102C  0100               	movlb	0	; () banked
  1450  00102E  6F89               	movwf	lcd_display_value@tens& (0+255),b
  1451                           
  1452                           ;lcdlib_2016.c: 253: value = value / 10 ;
  1453  001030  C08B  F080         	movff	lcd_display_value@value,___awdiv@dividend
  1454  001034  0100               	movlb	0	; () banked
  1455  001036  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
  1456  001038  0E00               	movlw	0
  1457  00103A  0100               	movlb	0	; () banked
  1458  00103C  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  1459  00103E  0E0A               	movlw	10
  1460  001040  6F82               	movwf	___awdiv@divisor& (0+255),b
  1461  001042  EC8A  F007         	call	___awdiv	;wreg free
  1462  001046  0100               	movlb	0	; () banked
  1463  001048  5180               	movf	?___awdiv& (0+255),w,b
  1464  00104A  0100               	movlb	0	; () banked
  1465  00104C  6F8B               	movwf	lcd_display_value@value& (0+255),b
  1466                           
  1467                           ;lcdlib_2016.c: 254: hunds = value % 10 ;
  1468  00104E  C08B  F080         	movff	lcd_display_value@value,___awmod@dividend
  1469  001052  0100               	movlb	0	; () banked
  1470  001054  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  1471  001056  0E00               	movlw	0
  1472  001058  0100               	movlb	0	; () banked
  1473  00105A  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  1474  00105C  0E0A               	movlw	10
  1475  00105E  6F82               	movwf	___awmod@divisor& (0+255),b
  1476  001060  EC9D  F008         	call	___awmod	;wreg free
  1477  001064  0100               	movlb	0	; () banked
  1478  001066  5180               	movf	?___awmod& (0+255),w,b
  1479  001068  0100               	movlb	0	; () banked
  1480  00106A  6F88               	movwf	lcd_display_value@hunds& (0+255),b
  1481                           
  1482                           ;lcdlib_2016.c: 260: lcd_print_ch ( '0' + hunds ) ;
  1483  00106C  0100               	movlb	0	; () banked
  1484  00106E  5188               	movf	lcd_display_value@hunds& (0+255),w,b
  1485  001070  0F30               	addlw	48
  1486  001072  EC23  F00B         	call	_lcd_print_ch
  1487                           
  1488                           ;lcdlib_2016.c: 261: lcd_print_ch ( '0' + tens ) ;
  1489  001076  0100               	movlb	0	; () banked
  1490  001078  5189               	movf	lcd_display_value@tens& (0+255),w,b
  1491  00107A  0F30               	addlw	48
  1492  00107C  EC23  F00B         	call	_lcd_print_ch
  1493                           
  1494                           ;lcdlib_2016.c: 262: lcd_print_ch ( '0' + units ) ;
  1495  001080  0100               	movlb	0	; () banked
  1496  001082  518A               	movf	lcd_display_value@units& (0+255),w,b
  1497  001084  0F30               	addlw	48
  1498  001086  EC23  F00B         	call	_lcd_print_ch
  1499  00108A  0012               	return		;funcret
  1500  00108C                     __end_of_lcd_display_value:
  1501                           	opt stack 0
  1502                           tblptru	equ	0xFF8
  1503                           tblptrh	equ	0xFF7
  1504                           tblptrl	equ	0xFF6
  1505                           tablat	equ	0xFF5
  1506                           prodh	equ	0xFF4
  1507                           prodl	equ	0xFF3
  1508                           intcon	equ	0xFF2
  1509                           postinc0	equ	0xFEE
  1510                           wreg	equ	0xFE8
  1511                           postdec1	equ	0xFE5
  1512                           fsr1l	equ	0xFE1
  1513                           status	equ	0xFD8
  1514                           
  1515 ;; *************** function ___awmod *****************
  1516 ;; Defined at:
  1517 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  dividend        2    0[BANK0 ] int 
  1520 ;;  divisor         2    2[BANK0 ] int 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  sign            1    5[BANK0 ] unsigned char 
  1523 ;;  counter         1    4[BANK0 ] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  2    0[BANK0 ] int 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1533 ;;      Params:         0       4       0       0       0       0       0
  1534 ;;      Locals:         0       2       0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0       0       0
  1536 ;;      Totals:         0       6       0       0       0       0       0
  1537 ;;Total ram usage:        6 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    4
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_lcd_display_value
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text4
  1548  00113A                     __ptext4:
  1549                           	opt stack 0
  1550  00113A                     ___awmod:
  1551                           	opt stack 25
  1552                           
  1553                           ;incstack = 0
  1554  00113A  0E00               	movlw	0
  1555  00113C  0100               	movlb	0	; () banked
  1556  00113E  6F85               	movwf	___awmod@sign& (0+255),b
  1557                           
  1558                           ; BSR set to: 0
  1559  001140  0100               	movlb	0	; () banked
  1560  001142  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  1561  001144  D008               	goto	l1869
  1562                           
  1563                           ; BSR set to: 0
  1564  001146  0100               	movlb	0	; () banked
  1565  001148  6D80               	negf	___awmod@dividend& (0+255),b
  1566  00114A  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  1567  00114C  B0D8               	btfsc	status,0,c
  1568  00114E  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  1569                           
  1570                           ; BSR set to: 0
  1571  001150  0E01               	movlw	1
  1572  001152  0100               	movlb	0	; () banked
  1573  001154  6F85               	movwf	___awmod@sign& (0+255),b
  1574  001156                     l1869:
  1575                           
  1576                           ; BSR set to: 0
  1577  001156  0100               	movlb	0	; () banked
  1578  001158  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1579  00115A  D005               	goto	l1873
  1580                           
  1581                           ; BSR set to: 0
  1582  00115C  0100               	movlb	0	; () banked
  1583  00115E  6D82               	negf	___awmod@divisor& (0+255),b
  1584  001160  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  1585  001162  B0D8               	btfsc	status,0,c
  1586  001164  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  1587  001166                     l1873:
  1588                           
  1589                           ; BSR set to: 0
  1590  001166  0100               	movlb	0	; () banked
  1591  001168  5182               	movf	___awmod@divisor& (0+255),w,b
  1592  00116A  0100               	movlb	0	; () banked
  1593  00116C  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1594  00116E  B4D8               	btfsc	status,2,c
  1595  001170  D026               	goto	l1889
  1596                           
  1597                           ; BSR set to: 0
  1598  001172  0E01               	movlw	1
  1599  001174  0100               	movlb	0	; () banked
  1600  001176  6F84               	movwf	___awmod@counter& (0+255),b
  1601  001178  D006               	goto	l1879
  1602  00117A                     l1877:
  1603                           
  1604                           ; BSR set to: 0
  1605  00117A  0100               	movlb	0	; () banked
  1606  00117C  90D8               	bcf	status,0,c
  1607  00117E  3782               	rlcf	___awmod@divisor& (0+255),f,b
  1608  001180  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1609  001182  0100               	movlb	0	; () banked
  1610  001184  2B84               	incf	___awmod@counter& (0+255),f,b
  1611  001186                     l1879:
  1612                           
  1613                           ; BSR set to: 0
  1614  001186  0100               	movlb	0	; () banked
  1615  001188  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1616  00118A  D7F7               	goto	l1877
  1617  00118C                     l1881:
  1618                           
  1619                           ; BSR set to: 0
  1620  00118C  0100               	movlb	0	; () banked
  1621  00118E  5182               	movf	___awmod@divisor& (0+255),w,b
  1622  001190  0100               	movlb	0	; () banked
  1623  001192  5D80               	subwf	___awmod@dividend& (0+255),w,b
  1624  001194  0100               	movlb	0	; () banked
  1625  001196  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  1626  001198  0100               	movlb	0	; () banked
  1627  00119A  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1628  00119C  A0D8               	btfss	status,0,c
  1629  00119E  D008               	goto	l1885
  1630                           
  1631                           ; BSR set to: 0
  1632  0011A0  0100               	movlb	0	; () banked
  1633  0011A2  5182               	movf	___awmod@divisor& (0+255),w,b
  1634  0011A4  0100               	movlb	0	; () banked
  1635  0011A6  5F80               	subwf	___awmod@dividend& (0+255),f,b
  1636  0011A8  0100               	movlb	0	; () banked
  1637  0011AA  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  1638  0011AC  0100               	movlb	0	; () banked
  1639  0011AE  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1640  0011B0                     l1885:
  1641                           
  1642                           ; BSR set to: 0
  1643  0011B0  0100               	movlb	0	; () banked
  1644  0011B2  90D8               	bcf	status,0,c
  1645  0011B4  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1646  0011B6  3382               	rrcf	___awmod@divisor& (0+255),f,b
  1647                           
  1648                           ; BSR set to: 0
  1649  0011B8  0100               	movlb	0	; () banked
  1650  0011BA  2F84               	decfsz	___awmod@counter& (0+255),f,b
  1651  0011BC  D7E7               	goto	l1881
  1652  0011BE                     l1889:
  1653                           
  1654                           ; BSR set to: 0
  1655  0011BE  0100               	movlb	0	; () banked
  1656  0011C0  5185               	movf	___awmod@sign& (0+255),w,b
  1657  0011C2  0100               	movlb	0	; () banked
  1658  0011C4  B4D8               	btfsc	status,2,c
  1659  0011C6  D005               	goto	l1893
  1660                           
  1661                           ; BSR set to: 0
  1662  0011C8  0100               	movlb	0	; () banked
  1663  0011CA  6D80               	negf	___awmod@dividend& (0+255),b
  1664  0011CC  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  1665  0011CE  B0D8               	btfsc	status,0,c
  1666  0011D0  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  1667  0011D2                     l1893:
  1668                           
  1669                           ; BSR set to: 0
  1670  0011D2  C080  F080         	movff	___awmod@dividend,?___awmod
  1671  0011D6  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  1672  0011DA  0012               	return	
  1673  0011DC                     __end_of___awmod:
  1674                           	opt stack 0
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           prodh	equ	0xFF4
  1680                           prodl	equ	0xFF3
  1681                           intcon	equ	0xFF2
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           postdec1	equ	0xFE5
  1685                           fsr1l	equ	0xFE1
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function ___awdiv *****************
  1689 ;; Defined at:
  1690 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  dividend        2    0[BANK0 ] int 
  1693 ;;  divisor         2    2[BANK0 ] int 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  quotient        2    6[BANK0 ] int 
  1696 ;;  sign            1    5[BANK0 ] unsigned char 
  1697 ;;  counter         1    4[BANK0 ] unsigned char 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  2    0[BANK0 ] int 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1707 ;;      Params:         0       4       0       0       0       0       0
  1708 ;;      Locals:         0       4       0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0
  1710 ;;      Totals:         0       8       0       0       0       0       0
  1711 ;;Total ram usage:        8 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    4
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_lcd_display_value
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text5
  1722  000F14                     __ptext5:
  1723                           	opt stack 0
  1724  000F14                     ___awdiv:
  1725                           	opt stack 25
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;incstack = 0
  1729  000F14  0E00               	movlw	0
  1730  000F16  0100               	movlb	0	; () banked
  1731  000F18  6F85               	movwf	___awdiv@sign& (0+255),b
  1732                           
  1733                           ; BSR set to: 0
  1734  000F1A  0100               	movlb	0	; () banked
  1735  000F1C  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1736  000F1E  D008               	goto	l1825
  1737                           
  1738                           ; BSR set to: 0
  1739  000F20  0100               	movlb	0	; () banked
  1740  000F22  6D82               	negf	___awdiv@divisor& (0+255),b
  1741  000F24  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1742  000F26  B0D8               	btfsc	status,0,c
  1743  000F28  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1744                           
  1745                           ; BSR set to: 0
  1746  000F2A  0E01               	movlw	1
  1747  000F2C  0100               	movlb	0	; () banked
  1748  000F2E  6F85               	movwf	___awdiv@sign& (0+255),b
  1749  000F30                     l1825:
  1750                           
  1751                           ; BSR set to: 0
  1752  000F30  0100               	movlb	0	; () banked
  1753  000F32  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1754  000F34  D008               	goto	l1831
  1755                           
  1756                           ; BSR set to: 0
  1757  000F36  0100               	movlb	0	; () banked
  1758  000F38  6D80               	negf	___awdiv@dividend& (0+255),b
  1759  000F3A  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1760  000F3C  B0D8               	btfsc	status,0,c
  1761  000F3E  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1762                           
  1763                           ; BSR set to: 0
  1764  000F40  0E01               	movlw	1
  1765  000F42  0100               	movlb	0	; () banked
  1766  000F44  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  1767  000F46                     l1831:
  1768                           
  1769                           ; BSR set to: 0
  1770  000F46  0E00               	movlw	0
  1771  000F48  0100               	movlb	0	; () banked
  1772  000F4A  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  1773  000F4C  0E00               	movlw	0
  1774  000F4E  6F86               	movwf	___awdiv@quotient& (0+255),b
  1775                           
  1776                           ; BSR set to: 0
  1777  000F50  0100               	movlb	0	; () banked
  1778  000F52  5182               	movf	___awdiv@divisor& (0+255),w,b
  1779  000F54  0100               	movlb	0	; () banked
  1780  000F56  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1781  000F58  B4D8               	btfsc	status,2,c
  1782  000F5A  D02C               	goto	l1853
  1783                           
  1784                           ; BSR set to: 0
  1785  000F5C  0E01               	movlw	1
  1786  000F5E  0100               	movlb	0	; () banked
  1787  000F60  6F84               	movwf	___awdiv@counter& (0+255),b
  1788  000F62  D006               	goto	l1839
  1789  000F64                     l1837:
  1790                           
  1791                           ; BSR set to: 0
  1792  000F64  0100               	movlb	0	; () banked
  1793  000F66  90D8               	bcf	status,0,c
  1794  000F68  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  1795  000F6A  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1796  000F6C  0100               	movlb	0	; () banked
  1797  000F6E  2B84               	incf	___awdiv@counter& (0+255),f,b
  1798  000F70                     l1839:
  1799                           
  1800                           ; BSR set to: 0
  1801  000F70  0100               	movlb	0	; () banked
  1802  000F72  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1803  000F74  D7F7               	goto	l1837
  1804  000F76                     l1841:
  1805                           
  1806                           ; BSR set to: 0
  1807  000F76  0100               	movlb	0	; () banked
  1808  000F78  90D8               	bcf	status,0,c
  1809  000F7A  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  1810  000F7C  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1811                           
  1812                           ; BSR set to: 0
  1813  000F7E  0100               	movlb	0	; () banked
  1814  000F80  5182               	movf	___awdiv@divisor& (0+255),w,b
  1815  000F82  0100               	movlb	0	; () banked
  1816  000F84  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  1817  000F86  0100               	movlb	0	; () banked
  1818  000F88  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1819  000F8A  0100               	movlb	0	; () banked
  1820  000F8C  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1821  000F8E  A0D8               	btfss	status,0,c
  1822  000F90  D00A               	goto	l1849
  1823                           
  1824                           ; BSR set to: 0
  1825  000F92  0100               	movlb	0	; () banked
  1826  000F94  5182               	movf	___awdiv@divisor& (0+255),w,b
  1827  000F96  0100               	movlb	0	; () banked
  1828  000F98  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  1829  000F9A  0100               	movlb	0	; () banked
  1830  000F9C  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1831  000F9E  0100               	movlb	0	; () banked
  1832  000FA0  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1833                           
  1834                           ; BSR set to: 0
  1835  000FA2  0100               	movlb	0	; () banked
  1836  000FA4  8186               	bsf	___awdiv@quotient& (0+255),0,b
  1837  000FA6                     l1849:
  1838                           
  1839                           ; BSR set to: 0
  1840  000FA6  0100               	movlb	0	; () banked
  1841  000FA8  90D8               	bcf	status,0,c
  1842  000FAA  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1843  000FAC  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  1844                           
  1845                           ; BSR set to: 0
  1846  000FAE  0100               	movlb	0	; () banked
  1847  000FB0  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  1848  000FB2  D7E1               	goto	l1841
  1849  000FB4                     l1853:
  1850                           
  1851                           ; BSR set to: 0
  1852  000FB4  0100               	movlb	0	; () banked
  1853  000FB6  5185               	movf	___awdiv@sign& (0+255),w,b
  1854  000FB8  0100               	movlb	0	; () banked
  1855  000FBA  B4D8               	btfsc	status,2,c
  1856  000FBC  D005               	goto	l1857
  1857                           
  1858                           ; BSR set to: 0
  1859  000FBE  0100               	movlb	0	; () banked
  1860  000FC0  6D86               	negf	___awdiv@quotient& (0+255),b
  1861  000FC2  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1862  000FC4  B0D8               	btfsc	status,0,c
  1863  000FC6  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1864  000FC8                     l1857:
  1865                           
  1866                           ; BSR set to: 0
  1867  000FC8  C086  F080         	movff	___awdiv@quotient,?___awdiv
  1868  000FCC  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  1869  000FD0  0012               	return	
  1870  000FD2                     __end_of___awdiv:
  1871                           	opt stack 0
  1872                           tblptru	equ	0xFF8
  1873                           tblptrh	equ	0xFF7
  1874                           tblptrl	equ	0xFF6
  1875                           tablat	equ	0xFF5
  1876                           prodh	equ	0xFF4
  1877                           prodl	equ	0xFF3
  1878                           intcon	equ	0xFF2
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           postdec1	equ	0xFE5
  1882                           fsr1l	equ	0xFE1
  1883                           status	equ	0xFD8
  1884                           
  1885 ;; *************** function _delay_s *****************
  1886 ;; Defined at:
  1887 ;;		line 322 in file "menu_proj.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  secs            1    wreg     unsigned char 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  secs            1    1[BANK0 ] unsigned char 
  1892 ;;  i               1    3[BANK0 ] unsigned char 
  1893 ;;  j               1    2[BANK0 ] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;		None               void
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1903 ;;      Params:         0       0       0       0       0       0       0
  1904 ;;      Locals:         0       3       0       0       0       0       0
  1905 ;;      Temps:          0       1       0       0       0       0       0
  1906 ;;      Totals:         0       4       0       0       0       0       0
  1907 ;;Total ram usage:        4 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    4
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text6
  1918  001508                     __ptext6:
  1919                           	opt stack 0
  1920  001508                     _delay_s:
  1921                           	opt stack 26
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;incstack = 0
  1925                           ;delay_s@secs stored from wreg
  1926  001508  0100               	movlb	0	; () banked
  1927  00150A  6F81               	movwf	delay_s@secs& (0+255),b
  1928                           
  1929                           ;menu_proj.c: 324: unsigned char i,j;
  1930                           ;menu_proj.c: 325: for(j=0;j<secs;j++)
  1931  00150C  0E00               	movlw	0
  1932  00150E  0100               	movlb	0	; () banked
  1933  001510  6F82               	movwf	delay_s@j& (0+255),b
  1934  001512  D016               	goto	l2101
  1935  001514                     l2089:
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;menu_proj.c: 326: {
  1939                           ;menu_proj.c: 327: for (i=0;i<25;i++)
  1940  001514  0E00               	movlw	0
  1941  001516  0100               	movlb	0	; () banked
  1942  001518  6F83               	movwf	delay_s@i& (0+255),b
  1943  00151A                     l2091:
  1944                           
  1945                           ; BSR set to: 0
  1946  00151A  0E18               	movlw	24
  1947  00151C  0100               	movlb	0	; () banked
  1948  00151E  6583               	cpfsgt	delay_s@i& (0+255),b
  1949  001520  D001               	goto	l2095
  1950  001522  D00C               	goto	l2099
  1951  001524                     l2095:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;menu_proj.c: 328: _delay((unsigned long)((40)*(8000000/4000.0)));
  1955  001524  0E68               	movlw	104
  1956  001526  0100               	movlb	0	; () banked
  1957  001528  6F80               	movwf	??_delay_s& (0+255),b
  1958  00152A  0EE4               	movlw	228
  1959  00152C                     u1867:
  1960  00152C  2EE8               	decfsz	wreg,f,c
  1961  00152E  D7FE               	goto	u1867
  1962  001530  2F80               	decfsz	??_delay_s& (0+255),f,b
  1963  001532  D7FC               	goto	u1867
  1964  001534  D000               	nop2	
  1965  001536  0100               	movlb	0	; () banked
  1966  001538  2B83               	incf	delay_s@i& (0+255),f,b
  1967  00153A  D7EF               	goto	l2091
  1968  00153C                     l2099:
  1969                           
  1970                           ; BSR set to: 0
  1971  00153C  0100               	movlb	0	; () banked
  1972  00153E  2B82               	incf	delay_s@j& (0+255),f,b
  1973  001540                     l2101:
  1974                           
  1975                           ; BSR set to: 0
  1976  001540  0100               	movlb	0	; () banked
  1977  001542  5181               	movf	delay_s@secs& (0+255),w,b
  1978  001544  0100               	movlb	0	; () banked
  1979  001546  5D82               	subwf	delay_s@j& (0+255),w,b
  1980  001548  B0D8               	btfsc	status,0,c
  1981  00154A  0012               	return	
  1982  00154C  D7E3               	goto	l2089
  1983  00154E                     __end_of_delay_s:
  1984                           	opt stack 0
  1985                           tblptru	equ	0xFF8
  1986                           tblptrh	equ	0xFF7
  1987                           tblptrl	equ	0xFF6
  1988                           tablat	equ	0xFF5
  1989                           prodh	equ	0xFF4
  1990                           prodl	equ	0xFF3
  1991                           intcon	equ	0xFF2
  1992                           postinc0	equ	0xFEE
  1993                           wreg	equ	0xFE8
  1994                           postdec1	equ	0xFE5
  1995                           fsr1l	equ	0xFE1
  1996                           status	equ	0xFD8
  1997                           
  1998 ;; *************** function ___ltdiv *****************
  1999 ;; Defined at:
  2000 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ltdiv.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  dividend        3    0[BANK0 ] unsigned um
  2003 ;;  divisor         3    3[BANK0 ] unsigned um
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  quotient        3    6[BANK0 ] unsigned um
  2006 ;;  counter         1    9[BANK0 ] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  3    0[BANK0 ] unsigned um
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2016 ;;      Params:         0       6       0       0       0       0       0
  2017 ;;      Locals:         0       4       0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0
  2019 ;;      Totals:         0      10       0       0       0       0       0
  2020 ;;Total ram usage:       10 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    4
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text7
  2031  0011DC                     __ptext7:
  2032                           	opt stack 0
  2033  0011DC                     ___ltdiv:
  2034                           	opt stack 26
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;incstack = 0
  2038  0011DC  0E00               	movlw	0
  2039  0011DE  0100               	movlb	0	; () banked
  2040  0011E0  6F86               	movwf	___ltdiv@quotient& (0+255),b
  2041  0011E2  0E00               	movlw	0
  2042  0011E4  0100               	movlb	0	; () banked
  2043  0011E6  6F87               	movwf	(___ltdiv@quotient+1)& (0+255),b
  2044  0011E8  0E00               	movlw	0
  2045  0011EA  0100               	movlb	0	; () banked
  2046  0011EC  6F88               	movwf	(___ltdiv@quotient+2)& (0+255),b
  2047                           
  2048                           ; BSR set to: 0
  2049  0011EE  0100               	movlb	0	; () banked
  2050  0011F0  5183               	movf	___ltdiv@divisor& (0+255),w,b
  2051  0011F2  0100               	movlb	0	; () banked
  2052  0011F4  1184               	iorwf	(___ltdiv@divisor+1)& (0+255),w,b
  2053  0011F6  0100               	movlb	0	; () banked
  2054  0011F8  1185               	iorwf	(___ltdiv@divisor+2)& (0+255),w,b
  2055  0011FA  B4D8               	btfsc	status,2,c
  2056  0011FC  D037               	goto	l635
  2057                           
  2058                           ; BSR set to: 0
  2059  0011FE  0E01               	movlw	1
  2060  001200  0100               	movlb	0	; () banked
  2061  001202  6F89               	movwf	___ltdiv@counter& (0+255),b
  2062  001204  D007               	goto	l2117
  2063  001206                     l2115:
  2064                           
  2065                           ; BSR set to: 0
  2066  001206  0100               	movlb	0	; () banked
  2067  001208  90D8               	bcf	status,0,c
  2068  00120A  3783               	rlcf	___ltdiv@divisor& (0+255),f,b
  2069  00120C  3784               	rlcf	(___ltdiv@divisor+1)& (0+255),f,b
  2070  00120E  3785               	rlcf	(___ltdiv@divisor+2)& (0+255),f,b
  2071  001210  0100               	movlb	0	; () banked
  2072  001212  2B89               	incf	___ltdiv@counter& (0+255),f,b
  2073  001214                     l2117:
  2074                           
  2075                           ; BSR set to: 0
  2076  001214  0100               	movlb	0	; () banked
  2077  001216  AF85               	btfss	(___ltdiv@divisor+2)& (0+255),7,b
  2078  001218  D7F6               	goto	l2115
  2079  00121A                     l2119:
  2080                           
  2081                           ; BSR set to: 0
  2082  00121A  0100               	movlb	0	; () banked
  2083  00121C  90D8               	bcf	status,0,c
  2084  00121E  3786               	rlcf	___ltdiv@quotient& (0+255),f,b
  2085  001220  3787               	rlcf	(___ltdiv@quotient+1)& (0+255),f,b
  2086  001222  3788               	rlcf	(___ltdiv@quotient+2)& (0+255),f,b
  2087                           
  2088                           ; BSR set to: 0
  2089  001224  0100               	movlb	0	; () banked
  2090  001226  5183               	movf	___ltdiv@divisor& (0+255),w,b
  2091  001228  0100               	movlb	0	; () banked
  2092  00122A  5D80               	subwf	___ltdiv@dividend& (0+255),w,b
  2093  00122C  0100               	movlb	0	; () banked
  2094  00122E  5184               	movf	(___ltdiv@divisor+1)& (0+255),w,b
  2095  001230  0100               	movlb	0	; () banked
  2096  001232  5981               	subwfb	(___ltdiv@dividend+1)& (0+255),w,b
  2097  001234  0100               	movlb	0	; () banked
  2098  001236  5185               	movf	(___ltdiv@divisor+2)& (0+255),w,b
  2099  001238  0100               	movlb	0	; () banked
  2100  00123A  5982               	subwfb	(___ltdiv@dividend+2)& (0+255),w,b
  2101  00123C  A0D8               	btfss	status,0,c
  2102  00123E  D00E               	goto	l640
  2103                           
  2104                           ; BSR set to: 0
  2105  001240  0100               	movlb	0	; () banked
  2106  001242  5183               	movf	___ltdiv@divisor& (0+255),w,b
  2107  001244  0100               	movlb	0	; () banked
  2108  001246  5F80               	subwf	___ltdiv@dividend& (0+255),f,b
  2109  001248  0100               	movlb	0	; () banked
  2110  00124A  5184               	movf	(___ltdiv@divisor+1)& (0+255),w,b
  2111  00124C  0100               	movlb	0	; () banked
  2112  00124E  5B81               	subwfb	(___ltdiv@dividend+1)& (0+255),f,b
  2113  001250  0100               	movlb	0	; () banked
  2114  001252  5185               	movf	(___ltdiv@divisor+2)& (0+255),w,b
  2115  001254  0100               	movlb	0	; () banked
  2116  001256  5B82               	subwfb	(___ltdiv@dividend+2)& (0+255),f,b
  2117                           
  2118                           ; BSR set to: 0
  2119  001258  0100               	movlb	0	; () banked
  2120  00125A  8186               	bsf	___ltdiv@quotient& (0+255),0,b
  2121  00125C                     l640:
  2122                           
  2123                           ; BSR set to: 0
  2124  00125C  0100               	movlb	0	; () banked
  2125  00125E  90D8               	bcf	status,0,c
  2126  001260  3385               	rrcf	(___ltdiv@divisor+2)& (0+255),f,b
  2127  001262  3384               	rrcf	(___ltdiv@divisor+1)& (0+255),f,b
  2128  001264  3383               	rrcf	___ltdiv@divisor& (0+255),f,b
  2129                           
  2130                           ; BSR set to: 0
  2131  001266  0100               	movlb	0	; () banked
  2132  001268  2F89               	decfsz	___ltdiv@counter& (0+255),f,b
  2133  00126A  D7D7               	goto	l2119
  2134  00126C                     l635:
  2135                           
  2136                           ; BSR set to: 0
  2137  00126C  C086  F080         	movff	___ltdiv@quotient,?___ltdiv
  2138  001270  C087  F081         	movff	___ltdiv@quotient+1,?___ltdiv+1
  2139  001274  C088  F082         	movff	___ltdiv@quotient+2,?___ltdiv+2
  2140                           
  2141                           ; BSR set to: 0
  2142  001278  0012               	return		;funcret
  2143  00127A                     __end_of___ltdiv:
  2144                           	opt stack 0
  2145                           tblptru	equ	0xFF8
  2146                           tblptrh	equ	0xFF7
  2147                           tblptrl	equ	0xFF6
  2148                           tablat	equ	0xFF5
  2149                           prodh	equ	0xFF4
  2150                           prodl	equ	0xFF3
  2151                           intcon	equ	0xFF2
  2152                           postinc0	equ	0xFEE
  2153                           wreg	equ	0xFE8
  2154                           postdec1	equ	0xFE5
  2155                           fsr1l	equ	0xFE1
  2156                           status	equ	0xFD8
  2157                           
  2158 ;; *************** function _Window *****************
  2159 ;; Defined at:
  2160 ;;		line 312 in file "menu_proj.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  num             1    wreg     unsigned char 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  num             1   12[BANK0 ] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;		None               void
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2174 ;;      Params:         0       0       0       0       0       0       0
  2175 ;;      Locals:         0       1       0       0       0       0       0
  2176 ;;      Temps:          0       2       0       0       0       0       0
  2177 ;;      Totals:         0       3       0       0       0       0       0
  2178 ;;Total ram usage:        3 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    7
  2181 ;; This function calls:
  2182 ;;		_lcd_clear
  2183 ;;		_lcd_cursor
  2184 ;;		_lcd_print
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text8
  2191  00130E                     __ptext8:
  2192                           	opt stack 0
  2193  00130E                     _Window:
  2194                           	opt stack 23
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;incstack = 0
  2198                           ;Window@num stored from wreg
  2199  00130E  0100               	movlb	0	; () banked
  2200  001310  6F8C               	movwf	Window@num& (0+255),b
  2201                           
  2202                           ;menu_proj.c: 314: lcd_clear();
  2203  001312  ECA7  F00A         	call	_lcd_clear	;wreg free
  2204                           
  2205                           ;menu_proj.c: 315: lcd_cursor ( 0, 0 ) ;
  2206  001316  0E00               	movlw	0
  2207  001318  0100               	movlb	0	; () banked
  2208  00131A  6F85               	movwf	lcd_cursor@y& (0+255),b
  2209  00131C  0E00               	movlw	0
  2210  00131E  ECD9  F00A         	call	_lcd_cursor
  2211                           
  2212                           ;menu_proj.c: 316: lcd_print ( msg_ary[num*2]);
  2213  001322  0100               	movlb	0	; () banked
  2214  001324  518C               	movf	Window@num& (0+255),w,b
  2215  001326  0D20               	mullw	32
  2216  001328  0E06               	movlw	low _msg_ary
  2217  00132A  24F3               	addwf	prodl,w,c
  2218  00132C  0100               	movlb	0	; () banked
  2219  00132E  6F85               	movwf	lcd_print@mess& (0+255),b
  2220  001330  0E06               	movlw	high _msg_ary
  2221  001332  20F4               	addwfc	prodh,w,c
  2222  001334  0100               	movlb	0	; () banked
  2223  001336  6F86               	movwf	(lcd_print@mess+1)& (0+255),b
  2224  001338  EC09  F00A         	call	_lcd_print	;wreg free
  2225                           
  2226                           ;menu_proj.c: 317: lcd_cursor ( 0, 1 ) ;
  2227  00133C  0E01               	movlw	1
  2228  00133E  0100               	movlb	0	; () banked
  2229  001340  6F85               	movwf	lcd_cursor@y& (0+255),b
  2230  001342  0E00               	movlw	0
  2231  001344  ECD9  F00A         	call	_lcd_cursor
  2232                           
  2233                           ;menu_proj.c: 318: lcd_print ( msg_ary[(num*2)+1]);
  2234  001348  0100               	movlb	0	; () banked
  2235  00134A  518C               	movf	Window@num& (0+255),w,b
  2236  00134C  0100               	movlb	0	; () banked
  2237  00134E  6F8A               	movwf	??_Window& (0+255),b
  2238  001350  6B8B               	clrf	(??_Window+1)& (0+255),b
  2239  001352  90D8               	bcf	status,0,c
  2240  001354  0100               	movlb	0	; () banked
  2241  001356  378A               	rlcf	??_Window& (0+255),f,b
  2242  001358  378B               	rlcf	(??_Window+1)& (0+255),f,b
  2243  00135A  0100               	movlb	0	; () banked
  2244  00135C  3B8A               	swapf	??_Window& (0+255),f,b
  2245  00135E  3B8B               	swapf	(??_Window+1)& (0+255),f,b
  2246  001360  0EF0               	movlw	240
  2247  001362  178B               	andwf	(??_Window+1)& (0+255),f,b
  2248  001364  518A               	movf	??_Window& (0+255),w,b
  2249  001366  0B0F               	andlw	15
  2250  001368  138B               	iorwf	(??_Window+1)& (0+255),f,b
  2251  00136A  0EF0               	movlw	240
  2252  00136C  178A               	andwf	??_Window& (0+255),f,b
  2253  00136E  0E10               	movlw	16
  2254  001370  0100               	movlb	0	; () banked
  2255  001372  278A               	addwf	??_Window& (0+255),f,b
  2256  001374  0E00               	movlw	0
  2257  001376  238B               	addwfc	(??_Window+1)& (0+255),f,b
  2258  001378  0E06               	movlw	low _msg_ary
  2259  00137A  0100               	movlb	0	; () banked
  2260  00137C  258A               	addwf	??_Window& (0+255),w,b
  2261  00137E  0100               	movlb	0	; () banked
  2262  001380  6F85               	movwf	lcd_print@mess& (0+255),b
  2263  001382  0E06               	movlw	high _msg_ary
  2264  001384  0100               	movlb	0	; () banked
  2265  001386  218B               	addwfc	(??_Window+1)& (0+255),w,b
  2266  001388  0100               	movlb	0	; () banked
  2267  00138A  6F86               	movwf	(lcd_print@mess+1)& (0+255),b
  2268  00138C  EC09  F00A         	call	_lcd_print	;wreg free
  2269  001390  0012               	return		;funcret
  2270  001392                     __end_of_Window:
  2271                           	opt stack 0
  2272                           tblptru	equ	0xFF8
  2273                           tblptrh	equ	0xFF7
  2274                           tblptrl	equ	0xFF6
  2275                           tablat	equ	0xFF5
  2276                           prodh	equ	0xFF4
  2277                           prodl	equ	0xFF3
  2278                           intcon	equ	0xFF2
  2279                           postinc0	equ	0xFEE
  2280                           wreg	equ	0xFE8
  2281                           postdec1	equ	0xFE5
  2282                           fsr1l	equ	0xFE1
  2283                           status	equ	0xFD8
  2284                           
  2285 ;; *************** function _lcd_print *****************
  2286 ;; Defined at:
  2287 ;;		line 215 in file "../LCD_library/lcdlib_2016.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  mess            2    5[BANK0 ] PTR const unsigned char 
  2290 ;;		 -> msg_ary(160), STR_2(12), STR_1(8), 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  i               1    9[BANK0 ] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      unsigned char 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2302 ;;      Params:         0       2       0       0       0       0       0
  2303 ;;      Locals:         0       1       0       0       0       0       0
  2304 ;;      Temps:          0       2       0       0       0       0       0
  2305 ;;      Totals:         0       5       0       0       0       0       0
  2306 ;;Total ram usage:        5 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    6
  2309 ;; This function calls:
  2310 ;;		_lcd_print_ch
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;;		_Window
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text9
  2318  001412                     __ptext9:
  2319                           	opt stack 0
  2320  001412                     _lcd_print:
  2321                           	opt stack 24
  2322                           
  2323                           ;lcdlib_2016.c: 217: unsigned char i = 0 ;
  2324                           
  2325                           ;incstack = 0
  2326  001412  0E00               	movlw	0
  2327  001414  0100               	movlb	0	; () banked
  2328  001416  6F89               	movwf	lcd_print@i& (0+255),b
  2329                           
  2330                           ;lcdlib_2016.c: 224: while ( mess [i] != 0 )
  2331  001418  D017               	goto	l1671
  2332  00141A                     l1667:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;lcdlib_2016.c: 225: {
  2336                           ;lcdlib_2016.c: 226: lcd_print_ch ( mess[i] ) ;
  2337  00141A  0100               	movlb	0	; () banked
  2338  00141C  5189               	movf	lcd_print@i& (0+255),w,b
  2339  00141E  0D01               	mullw	1
  2340  001420  C085  F087         	movff	lcd_print@mess,??_lcd_print
  2341  001424  C086  F088         	movff	lcd_print@mess+1,??_lcd_print+1
  2342  001428  50F3               	movf	prodl,w,c
  2343  00142A  0100               	movlb	0	; () banked
  2344  00142C  2787               	addwf	??_lcd_print& (0+255),f,b
  2345  00142E  50F4               	movf	prodh,w,c
  2346  001430  0100               	movlb	0	; () banked
  2347  001432  2388               	addwfc	(??_lcd_print+1)& (0+255),f,b
  2348  001434  C087  FFF6         	movff	??_lcd_print,tblptrl
  2349  001438  C088  FFF7         	movff	??_lcd_print+1,tblptrh
  2350  00143C                     	if	0	;tblptru may be non-zero
  2351  00143C                     	endif
  2352  00143C                     	if	0	;tblptru may be non-zero
  2353  00143C                     	endif
  2354  00143C  0008               	tblrd		*
  2355  00143E  50F5               	movf	tablat,w,c
  2356  001440  EC23  F00B         	call	_lcd_print_ch
  2357                           
  2358                           ;lcdlib_2016.c: 227: i++ ;
  2359  001444  0100               	movlb	0	; () banked
  2360  001446  2B89               	incf	lcd_print@i& (0+255),f,b
  2361  001448                     l1671:
  2362                           
  2363                           ; BSR set to: 0
  2364  001448  0100               	movlb	0	; () banked
  2365  00144A  5189               	movf	lcd_print@i& (0+255),w,b
  2366  00144C  0D01               	mullw	1
  2367  00144E  C085  F087         	movff	lcd_print@mess,??_lcd_print
  2368  001452  C086  F088         	movff	lcd_print@mess+1,??_lcd_print+1
  2369  001456  50F3               	movf	prodl,w,c
  2370  001458  0100               	movlb	0	; () banked
  2371  00145A  2787               	addwf	??_lcd_print& (0+255),f,b
  2372  00145C  50F4               	movf	prodh,w,c
  2373  00145E  0100               	movlb	0	; () banked
  2374  001460  2388               	addwfc	(??_lcd_print+1)& (0+255),f,b
  2375  001462  C087  FFF6         	movff	??_lcd_print,tblptrl
  2376  001466  C088  FFF7         	movff	??_lcd_print+1,tblptrh
  2377  00146A                     	if	0	;tblptru may be non-zero
  2378  00146A                     	endif
  2379  00146A                     	if	0	;tblptru may be non-zero
  2380  00146A                     	endif
  2381  00146A  0008               	tblrd		*
  2382  00146C  50F5               	movf	tablat,w,c
  2383  00146E  0900               	iorlw	0
  2384  001470  B4D8               	btfsc	status,2,c
  2385  001472  0012               	return	
  2386  001474  D7D2               	goto	l1667
  2387  001476                     __end_of_lcd_print:
  2388                           	opt stack 0
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           prodh	equ	0xFF4
  2394                           prodl	equ	0xFF3
  2395                           intcon	equ	0xFF2
  2396                           postinc0	equ	0xFEE
  2397                           wreg	equ	0xFE8
  2398                           postdec1	equ	0xFE5
  2399                           fsr1l	equ	0xFE1
  2400                           status	equ	0xFD8
  2401                           
  2402 ;; *************** function _lcd_print_ch *****************
  2403 ;; Defined at:
  2404 ;;		line 115 in file "../LCD_library/lcdlib_2016.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  in              1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  in              1    4[BANK0 ] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      unsigned char 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2418 ;;      Params:         0       0       0       0       0       0       0
  2419 ;;      Locals:         0       1       0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0
  2421 ;;      Totals:         0       1       0       0       0       0       0
  2422 ;;Total ram usage:        1 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    5
  2425 ;; This function calls:
  2426 ;;		_lcd_raw_send
  2427 ;; This function is called by:
  2428 ;;		_lcd_print
  2429 ;;		_lcd_display_value
  2430 ;;		_lcd_display_int_value
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text10
  2435  001646                     __ptext10:
  2436                           	opt stack 0
  2437  001646                     _lcd_print_ch:
  2438                           	opt stack 24
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;incstack = 0
  2442                           ;lcd_print_ch@in stored from wreg
  2443  001646  0100               	movlb	0	; () banked
  2444  001648  6F84               	movwf	lcd_print_ch@in& (0+255),b
  2445                           
  2446                           ;lcdlib_2016.c: 118: lcd_raw_send ( in, 0x01 ) ;
  2447  00164A  0E01               	movlw	1
  2448  00164C  0100               	movlb	0	; () banked
  2449  00164E  6F80               	movwf	lcd_raw_send@RS& (0+255),b
  2450  001650  0100               	movlb	0	; () banked
  2451  001652  5184               	movf	lcd_print_ch@in& (0+255),w,b
  2452  001654  EC17  F005         	call	_lcd_raw_send
  2453  001658  0012               	return	
  2454  00165A                     __end_of_lcd_print_ch:
  2455                           	opt stack 0
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           prodh	equ	0xFF4
  2461                           prodl	equ	0xFF3
  2462                           intcon	equ	0xFF2
  2463                           postinc0	equ	0xFEE
  2464                           wreg	equ	0xFE8
  2465                           postdec1	equ	0xFE5
  2466                           fsr1l	equ	0xFE1
  2467                           status	equ	0xFD8
  2468                           
  2469 ;; *************** function _lcd_cursor *****************
  2470 ;; Defined at:
  2471 ;;		line 144 in file "../LCD_library/lcdlib_2016.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  x               1    wreg     unsigned char 
  2474 ;;  y               1    5[BANK0 ] unsigned char 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  x               1    6[BANK0 ] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      unsigned char 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2486 ;;      Params:         0       1       0       0       0       0       0
  2487 ;;      Locals:         0       1       0       0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0       0       0
  2489 ;;      Totals:         0       2       0       0       0       0       0
  2490 ;;Total ram usage:        2 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    6
  2493 ;; This function calls:
  2494 ;;		_lcd_command
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;;		_Window
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text11
  2502  0015B2                     __ptext11:
  2503                           	opt stack 0
  2504  0015B2                     _lcd_cursor:
  2505                           	opt stack 24
  2506                           
  2507                           ;incstack = 0
  2508                           ;lcd_cursor@x stored from wreg
  2509  0015B2  0100               	movlb	0	; () banked
  2510  0015B4  6F86               	movwf	lcd_cursor@x& (0+255),b
  2511                           
  2512                           ;lcdlib_2016.c: 153: if ( y==0 )
  2513  0015B6  0100               	movlb	0	; () banked
  2514  0015B8  5185               	movf	lcd_cursor@y& (0+255),w,b
  2515  0015BA  0100               	movlb	0	; () banked
  2516  0015BC  A4D8               	btfss	status,2,c
  2517  0015BE  D002               	goto	l1659
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;lcdlib_2016.c: 154: {
  2521                           ;lcdlib_2016.c: 156: y=0x80 ;
  2522  0015C0  0E80               	movlw	128
  2523  0015C2  D001               	goto	L1
  2524  0015C4                     l1659:
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;lcdlib_2016.c: 158: else
  2528                           ;lcdlib_2016.c: 159: {
  2529                           ;lcdlib_2016.c: 161: y=0xc0 ;
  2530  0015C4  0EC0               	movlw	192
  2531  0015C6                     L1:
  2532  0015C6  0100               	movlb	0	; () banked
  2533  0015C8  6F85               	movwf	lcd_cursor@y& (0+255),b
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;lcdlib_2016.c: 162: }
  2537                           ;lcdlib_2016.c: 164: lcd_command ( y+x ) ;
  2538                           
  2539                           ; BSR set to: 0
  2540  0015CA  0100               	movlb	0	; () banked
  2541  0015CC  5185               	movf	lcd_cursor@y& (0+255),w,b
  2542  0015CE  0100               	movlb	0	; () banked
  2543  0015D0  2586               	addwf	lcd_cursor@x& (0+255),w,b
  2544  0015D2  EC2D  F00B         	call	_lcd_command
  2545  0015D6  0012               	return	
  2546  0015D8                     __end_of_lcd_cursor:
  2547                           	opt stack 0
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           prodh	equ	0xFF4
  2553                           prodl	equ	0xFF3
  2554                           intcon	equ	0xFF2
  2555                           postinc0	equ	0xFEE
  2556                           wreg	equ	0xFE8
  2557                           postdec1	equ	0xFE5
  2558                           fsr1l	equ	0xFE1
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function _lcd_clear *****************
  2562 ;; Defined at:
  2563 ;;		line 131 in file "../LCD_library/lcdlib_2016.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      unsigned char 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2577 ;;      Params:         0       0       0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0
  2579 ;;      Temps:          0       1       0       0       0       0       0
  2580 ;;      Totals:         0       1       0       0       0       0       0
  2581 ;;Total ram usage:        1 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    6
  2584 ;; This function calls:
  2585 ;;		_lcd_command
  2586 ;; This function is called by:
  2587 ;;		_lcd_start
  2588 ;;		_main
  2589 ;;		_Window
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text12
  2594  00154E                     __ptext12:
  2595                           	opt stack 0
  2596  00154E                     _lcd_clear:
  2597                           	opt stack 23
  2598                           
  2599                           ;lcdlib_2016.c: 134: lcd_command ( 0x01 ) ;
  2600                           
  2601                           ;incstack = 0
  2602  00154E  0E01               	movlw	1
  2603  001550  EC2D  F00B         	call	_lcd_command
  2604                           
  2605                           ;lcdlib_2016.c: 135: _delay((unsigned long)((2)*(19660800/4000.0)));
  2606  001554  0E0D               	movlw	13
  2607  001556  0100               	movlb	0	; () banked
  2608  001558  6F85               	movwf	??_lcd_clear& (0+255),b
  2609  00155A  0EC3               	movlw	195
  2610  00155C                     u1877:
  2611  00155C  2EE8               	decfsz	wreg,f,c
  2612  00155E  D7FE               	goto	u1877
  2613  001560  2F85               	decfsz	??_lcd_clear& (0+255),f,b
  2614  001562  D7FC               	goto	u1877
  2615  001564  F000               	nop	
  2616                           
  2617                           ;lcdlib_2016.c: 138: lcd_command ( 0x02 ) ;
  2618  001566  0E02               	movlw	2
  2619  001568  EC2D  F00B         	call	_lcd_command
  2620                           
  2621                           ;lcdlib_2016.c: 139: _delay((unsigned long)((2)*(19660800/4000.0)));
  2622  00156C  0E0D               	movlw	13
  2623  00156E  0100               	movlb	0	; () banked
  2624  001570  6F85               	movwf	??_lcd_clear& (0+255),b
  2625  001572  0EC3               	movlw	195
  2626  001574                     u1887:
  2627  001574  2EE8               	decfsz	wreg,f,c
  2628  001576  D7FE               	goto	u1887
  2629  001578  2F85               	decfsz	??_lcd_clear& (0+255),f,b
  2630  00157A  D7FC               	goto	u1887
  2631  00157C  F000               	nop	
  2632  00157E  0012               	return	
  2633  001580                     __end_of_lcd_clear:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           prodh	equ	0xFF4
  2640                           prodl	equ	0xFF3
  2641                           intcon	equ	0xFF2
  2642                           postinc0	equ	0xFEE
  2643                           wreg	equ	0xFE8
  2644                           postdec1	equ	0xFE5
  2645                           fsr1l	equ	0xFE1
  2646                           status	equ	0xFD8
  2647                           
  2648 ;; *************** function _lcd_command *****************
  2649 ;; Defined at:
  2650 ;;		line 123 in file "../LCD_library/lcdlib_2016.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  in              1    wreg     unsigned char 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  in              1    4[BANK0 ] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;		None               void
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2664 ;;      Params:         0       0       0       0       0       0       0
  2665 ;;      Locals:         0       1       0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0
  2667 ;;      Totals:         0       1       0       0       0       0       0
  2668 ;;Total ram usage:        1 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    5
  2671 ;; This function calls:
  2672 ;;		_lcd_raw_send
  2673 ;; This function is called by:
  2674 ;;		_lcd_clear
  2675 ;;		_lcd_cursor
  2676 ;;		_lcd_start
  2677 ;;		_lcd_cursor_on
  2678 ;;		_lcd_cursor_off
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text13
  2683  00165A                     __ptext13:
  2684                           	opt stack 0
  2685  00165A                     _lcd_command:
  2686                           	opt stack 24
  2687                           
  2688                           ;incstack = 0
  2689                           ;lcd_command@in stored from wreg
  2690  00165A  0100               	movlb	0	; () banked
  2691  00165C  6F84               	movwf	lcd_command@in& (0+255),b
  2692                           
  2693                           ;lcdlib_2016.c: 125: lcd_raw_send ( in, 0x00 ) ;
  2694  00165E  0E00               	movlw	0
  2695  001660  0100               	movlb	0	; () banked
  2696  001662  6F80               	movwf	lcd_raw_send@RS& (0+255),b
  2697  001664  0100               	movlb	0	; () banked
  2698  001666  5184               	movf	lcd_command@in& (0+255),w,b
  2699  001668  EC17  F005         	call	_lcd_raw_send
  2700  00166C  0012               	return		;funcret
  2701  00166E                     __end_of_lcd_command:
  2702                           	opt stack 0
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           prodh	equ	0xFF4
  2708                           prodl	equ	0xFF3
  2709                           intcon	equ	0xFF2
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           postdec1	equ	0xFE5
  2713                           fsr1l	equ	0xFE1
  2714                           status	equ	0xFD8
  2715                           
  2716 ;; *************** function _lcd_raw_send *****************
  2717 ;; Defined at:
  2718 ;;		line 74 in file "../LCD_library/lcdlib_2016.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  in              1    wreg     unsigned char 
  2721 ;;  RS              1    0[BANK0 ] unsigned char 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  in              1    3[BANK0 ] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;		None               void
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2733 ;;      Params:         0       1       0       0       0       0       0
  2734 ;;      Locals:         0       1       0       0       0       0       0
  2735 ;;      Temps:          0       2       0       0       0       0       0
  2736 ;;      Totals:         0       4       0       0       0       0       0
  2737 ;;Total ram usage:        4 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    4
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_lcd_print_ch
  2744 ;;		_lcd_command
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text14
  2749  000A2E                     __ptext14:
  2750                           	opt stack 0
  2751  000A2E                     _lcd_raw_send:
  2752                           	opt stack 24
  2753                           
  2754                           ;incstack = 0
  2755                           ;lcd_raw_send@in stored from wreg
  2756  000A2E  0100               	movlb	0	; () banked
  2757  000A30  6F83               	movwf	lcd_raw_send@in& (0+255),b
  2758                           
  2759                           ;lcdlib_2016.c: 78: LATDbits.LD0 = in >> 4;
  2760  000A32  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2761  000A36  0100               	movlb	0	; () banked
  2762  000A38  3B81               	swapf	??_lcd_raw_send& (0+255),f,b
  2763  000A3A  0E0F               	movlw	15
  2764  000A3C  1781               	andwf	??_lcd_raw_send& (0+255),f,b
  2765  000A3E  508C               	movf	3980,w,c	;volatile
  2766  000A40  0100               	movlb	0	; () banked
  2767  000A42  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2768  000A44  0BFE               	andlw	-2
  2769  000A46  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2770  000A48  6E8C               	movwf	3980,c	;volatile
  2771                           
  2772                           ;lcdlib_2016.c: 79: LATDbits.LD1 = in >> 5;
  2773  000A4A  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2774  000A4E  0E05               	movlw	5
  2775  000A50  0100               	movlb	0	; () banked
  2776  000A52  6F82               	movwf	(??_lcd_raw_send+1)& (0+255),b
  2777  000A54                     u935:
  2778  000A54  0100               	movlb	0	; () banked
  2779  000A56  90D8               	bcf	status,0,c
  2780  000A58  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2781  000A5A  0100               	movlb	0	; () banked
  2782  000A5C  2F82               	decfsz	(??_lcd_raw_send+1)& (0+255),f,b
  2783  000A5E  D7FA               	goto	u935
  2784  000A60  0100               	movlb	0	; () banked
  2785  000A62  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2786  000A64  508C               	movf	3980,w,c	;volatile
  2787  000A66  0100               	movlb	0	; () banked
  2788  000A68  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2789  000A6A  0BFD               	andlw	-3
  2790  000A6C  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2791  000A6E  6E8C               	movwf	3980,c	;volatile
  2792                           
  2793                           ;lcdlib_2016.c: 80: LATDbits.LD2 = in >> 6;
  2794  000A70  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2795  000A74  0E06               	movlw	6
  2796  000A76  0100               	movlb	0	; () banked
  2797  000A78  6F82               	movwf	(??_lcd_raw_send+1)& (0+255),b
  2798  000A7A                     u945:
  2799  000A7A  0100               	movlb	0	; () banked
  2800  000A7C  90D8               	bcf	status,0,c
  2801  000A7E  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2802  000A80  0100               	movlb	0	; () banked
  2803  000A82  2F82               	decfsz	(??_lcd_raw_send+1)& (0+255),f,b
  2804  000A84  D7FA               	goto	u945
  2805  000A86  0100               	movlb	0	; () banked
  2806  000A88  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2807  000A8A  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2808  000A8C  508C               	movf	3980,w,c	;volatile
  2809  000A8E  0100               	movlb	0	; () banked
  2810  000A90  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2811  000A92  0BFB               	andlw	-5
  2812  000A94  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2813  000A96  6E8C               	movwf	3980,c	;volatile
  2814                           
  2815                           ;lcdlib_2016.c: 81: LATDbits.LD3 = in >> 7;
  2816  000A98  0100               	movlb	0	; () banked
  2817  000A9A  6B81               	clrf	??_lcd_raw_send& (0+255),b
  2818  000A9C  AF83               	btfss	lcd_raw_send@in& (0+255),7,b
  2819  000A9E  D002               	bra	u955
  2820  000AA0  0100               	movlb	0	; () banked
  2821  000AA2  2B81               	incf	??_lcd_raw_send& (0+255),f,b
  2822  000AA4                     u955:
  2823  000AA4  0100               	movlb	0	; () banked
  2824  000AA6  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2825  000AA8  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2826  000AAA  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2827  000AAC  508C               	movf	3980,w,c	;volatile
  2828  000AAE  0100               	movlb	0	; () banked
  2829  000AB0  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2830  000AB2  0BF7               	andlw	-9
  2831  000AB4  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2832  000AB6  6E8C               	movwf	3980,c	;volatile
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;lcdlib_2016.c: 82: LATDbits.LD4 = RS;
  2836  000AB8  0100               	movlb	0	; () banked
  2837  000ABA  B180               	btfsc	lcd_raw_send@RS& (0+255),0,b
  2838  000ABC  D002               	bra	u965
  2839  000ABE  988C               	bcf	3980,4,c	;volatile
  2840  000AC0  D001               	bra	u966
  2841  000AC2                     u965:
  2842  000AC2  888C               	bsf	3980,4,c	;volatile
  2843  000AC4                     u966:
  2844                           
  2845                           ;lcdlib_2016.c: 84: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2846  000AC4  0E03               	movlw	3
  2847  000AC6                     u1897:
  2848  000AC6  2EE8               	decfsz	wreg,f,c
  2849  000AC8  D7FE               	goto	u1897
  2850                           
  2851                           ;lcdlib_2016.c: 89: LATDbits.LD5 = 1;
  2852  000ACA  8A8C               	bsf	3980,5,c	;volatile
  2853                           
  2854                           ;lcdlib_2016.c: 91: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2855  000ACC  0E03               	movlw	3
  2856  000ACE                     u1907:
  2857  000ACE  2EE8               	decfsz	wreg,f,c
  2858  000AD0  D7FE               	goto	u1907
  2859                           
  2860                           ;lcdlib_2016.c: 93: LATDbits.LD5 = 0;
  2861  000AD2  9A8C               	bcf	3980,5,c	;volatile
  2862                           
  2863                           ;lcdlib_2016.c: 95: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2864  000AD4  0E51               	movlw	81
  2865  000AD6                     u1917:
  2866  000AD6  2EE8               	decfsz	wreg,f,c
  2867  000AD8  D7FE               	goto	u1917
  2868  000ADA  D000               	nop2		;nop
  2869                           
  2870                           ;lcdlib_2016.c: 98: LATDbits.LD0 = in;
  2871  000ADC  0100               	movlb	0	; () banked
  2872  000ADE  B183               	btfsc	lcd_raw_send@in& (0+255),0,b
  2873  000AE0  D002               	bra	u975
  2874  000AE2  908C               	bcf	3980,0,c	;volatile
  2875  000AE4  D001               	bra	u976
  2876  000AE6                     u975:
  2877  000AE6  808C               	bsf	3980,0,c	;volatile
  2878  000AE8                     u976:
  2879                           
  2880                           ;lcdlib_2016.c: 99: LATDbits.LD1 = in >> 1;
  2881  000AE8  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2882  000AEC  0100               	movlb	0	; () banked
  2883  000AEE  90D8               	bcf	status,0,c
  2884  000AF0  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2885  000AF2  0100               	movlb	0	; () banked
  2886  000AF4  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2887  000AF6  508C               	movf	3980,w,c	;volatile
  2888  000AF8  0100               	movlb	0	; () banked
  2889  000AFA  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2890  000AFC  0BFD               	andlw	-3
  2891  000AFE  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2892  000B00  6E8C               	movwf	3980,c	;volatile
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;lcdlib_2016.c: 100: LATDbits.LD2 = in >> 2;
  2896  000B02  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2897  000B06  0100               	movlb	0	; () banked
  2898  000B08  90D8               	bcf	status,0,c
  2899  000B0A  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2900  000B0C  0100               	movlb	0	; () banked
  2901  000B0E  90D8               	bcf	status,0,c
  2902  000B10  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2903  000B12  0100               	movlb	0	; () banked
  2904  000B14  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2905  000B16  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2906  000B18  508C               	movf	3980,w,c	;volatile
  2907  000B1A  0100               	movlb	0	; () banked
  2908  000B1C  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2909  000B1E  0BFB               	andlw	-5
  2910  000B20  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2911  000B22  6E8C               	movwf	3980,c	;volatile
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;lcdlib_2016.c: 101: LATDbits.LD3 = in >> 3;
  2915  000B24  C083  F081         	movff	lcd_raw_send@in,??_lcd_raw_send
  2916  000B28  0100               	movlb	0	; () banked
  2917  000B2A  90D8               	bcf	status,0,c
  2918  000B2C  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2919  000B2E  0100               	movlb	0	; () banked
  2920  000B30  90D8               	bcf	status,0,c
  2921  000B32  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2922  000B34  0100               	movlb	0	; () banked
  2923  000B36  90D8               	bcf	status,0,c
  2924  000B38  3381               	rrcf	??_lcd_raw_send& (0+255),f,b
  2925  000B3A  0100               	movlb	0	; () banked
  2926  000B3C  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2927  000B3E  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2928  000B40  4781               	rlncf	??_lcd_raw_send& (0+255),f,b
  2929  000B42  508C               	movf	3980,w,c	;volatile
  2930  000B44  0100               	movlb	0	; () banked
  2931  000B46  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2932  000B48  0BF7               	andlw	-9
  2933  000B4A  1981               	xorwf	??_lcd_raw_send& (0+255),w,b
  2934  000B4C  6E8C               	movwf	3980,c	;volatile
  2935                           
  2936                           ;lcdlib_2016.c: 103: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2937  000B4E  0E03               	movlw	3
  2938  000B50                     u1927:
  2939  000B50  2EE8               	decfsz	wreg,f,c
  2940  000B52  D7FE               	goto	u1927
  2941                           
  2942                           ;lcdlib_2016.c: 105: LATDbits.LD5 = 1;
  2943  000B54  8A8C               	bsf	3980,5,c	;volatile
  2944                           
  2945                           ;lcdlib_2016.c: 107: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2946  000B56  0E03               	movlw	3
  2947  000B58                     u1937:
  2948  000B58  2EE8               	decfsz	wreg,f,c
  2949  000B5A  D7FE               	goto	u1937
  2950                           
  2951                           ;lcdlib_2016.c: 109: LATDbits.LD5 = 0;
  2952  000B5C  9A8C               	bcf	3980,5,c	;volatile
  2953                           
  2954                           ;lcdlib_2016.c: 111: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2955  000B5E  0E51               	movlw	81
  2956  000B60                     u1947:
  2957  000B60  2EE8               	decfsz	wreg,f,c
  2958  000B62  D7FE               	goto	u1947
  2959  000B64  D000               	nop2		;nop
  2960  000B66  0012               	return		;funcret
  2961  000B68                     __end_of_lcd_raw_send:
  2962                           	opt stack 0
  2963                           tblptru	equ	0xFF8
  2964                           tblptrh	equ	0xFF7
  2965                           tblptrl	equ	0xFF6
  2966                           tablat	equ	0xFF5
  2967                           prodh	equ	0xFF4
  2968                           prodl	equ	0xFF3
  2969                           intcon	equ	0xFF2
  2970                           postinc0	equ	0xFEE
  2971                           wreg	equ	0xFE8
  2972                           postdec1	equ	0xFE5
  2973                           fsr1l	equ	0xFE1
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function _Initial *****************
  2977 ;; Defined at:
  2978 ;;		line 242 in file "menu_proj.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;		None               void
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2992 ;;      Params:         0       0       0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0
  2995 ;;      Totals:         0       0       0       0       0       0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    5
  2999 ;; This function calls:
  3000 ;;		_OpenTimer0
  3001 ;;		_WriteTimer0
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text15
  3008  00127A                     __ptext15:
  3009                           	opt stack 0
  3010  00127A                     _Initial:
  3011                           	opt stack 25
  3012                           
  3013                           ;menu_proj.c: 245: TRISB = 0xFF;
  3014                           
  3015                           ;incstack = 0
  3016  00127A  6893               	setf	3987,c	;volatile
  3017                           
  3018                           ;menu_proj.c: 246: TRISE = 0x00;
  3019  00127C  0E00               	movlw	0
  3020  00127E  6E96               	movwf	3990,c	;volatile
  3021                           
  3022                           ;menu_proj.c: 247: TRISCbits.RC1 = 0;
  3023  001280  9294               	bcf	3988,1,c	;volatile
  3024                           
  3025                           ;menu_proj.c: 250: OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11111111);
  3026  001282  0E9F               	movlw	159
  3027  001284  ECEC  F00A         	call	_OpenTimer0
  3028                           
  3029                           ;menu_proj.c: 251: WriteTimer0(45536);
  3030  001288  0EB1               	movlw	177
  3031  00128A  0100               	movlb	0	; () banked
  3032  00128C  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  3033  00128E  0EE0               	movlw	224
  3034  001290  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  3035  001292  EC37  F00B         	call	_WriteTimer0	;wreg free
  3036                           
  3037                           ;menu_proj.c: 253: ADCON0 =0x00;
  3038  001296  0E00               	movlw	0
  3039  001298  6EC2               	movwf	4034,c	;volatile
  3040                           
  3041                           ;menu_proj.c: 254: ADCON1 = 0x0E;
  3042  00129A  0E0E               	movlw	14
  3043  00129C  6EC1               	movwf	4033,c	;volatile
  3044                           
  3045                           ;menu_proj.c: 255: ADCON2 = 0x13;
  3046  00129E  0E13               	movlw	19
  3047  0012A0  6EC0               	movwf	4032,c	;volatile
  3048                           
  3049                           ;menu_proj.c: 256: PIR1bits.ADIF=0;
  3050  0012A2  9C9E               	bcf	3998,6,c	;volatile
  3051                           
  3052                           ;menu_proj.c: 257: ADCON0bits.ADON=0;
  3053  0012A4  90C2               	bcf	4034,0,c	;volatile
  3054                           
  3055                           ;menu_proj.c: 258: TRISA = 0x01;
  3056  0012A6  0E01               	movlw	1
  3057  0012A8  6E92               	movwf	3986,c	;volatile
  3058                           
  3059                           ;menu_proj.c: 261: T1CONbits.TMR1ON =1;
  3060  0012AA  80CD               	bsf	4045,0,c	;volatile
  3061                           
  3062                           ;menu_proj.c: 262: T1CONbits.RD16 = 1;
  3063  0012AC  8ECD               	bsf	4045,7,c	;volatile
  3064                           
  3065                           ;menu_proj.c: 263: T1CONbits.TMR1CS = 0;
  3066  0012AE  92CD               	bcf	4045,1,c	;volatile
  3067                           
  3068                           ;menu_proj.c: 264: T1CONbits.T1CKPS0 = 1;
  3069  0012B0  88CD               	bsf	4045,4,c	;volatile
  3070                           
  3071                           ;menu_proj.c: 265: T1CONbits.T1CKPS1 = 1;
  3072  0012B2  8ACD               	bsf	4045,5,c	;volatile
  3073                           
  3074                           ;menu_proj.c: 267: CCP1CONbits.CCP1M0 = 1;
  3075  0012B4  80BD               	bsf	4029,0,c	;volatile
  3076                           
  3077                           ;menu_proj.c: 268: CCP1CONbits.CCP1M1 = 0;
  3078  0012B6  92BD               	bcf	4029,1,c	;volatile
  3079                           
  3080                           ;menu_proj.c: 269: CCP1CONbits.CCP1M2 = 1;
  3081  0012B8  84BD               	bsf	4029,2,c	;volatile
  3082                           
  3083                           ;menu_proj.c: 270: CCP1CONbits.CCP1M3 = 0;
  3084  0012BA  96BD               	bcf	4029,3,c	;volatile
  3085                           
  3086                           ;menu_proj.c: 273: T2CONbits.TMR2ON =1;
  3087  0012BC  84CA               	bsf	4042,2,c	;volatile
  3088                           
  3089                           ;menu_proj.c: 274: CCP2CONbits.CCP2M3 = 1;
  3090  0012BE  86BA               	bsf	4026,3,c	;volatile
  3091                           
  3092                           ;menu_proj.c: 275: CCP2CONbits.CCP2M2 = 1;
  3093  0012C0  84BA               	bsf	4026,2,c	;volatile
  3094                           
  3095                           ;menu_proj.c: 276: PR2 = 100;
  3096  0012C2  0E64               	movlw	100
  3097  0012C4  6ECB               	movwf	4043,c	;volatile
  3098                           
  3099                           ;menu_proj.c: 279: RCONbits.IPEN = 0;
  3100  0012C6  9ED0               	bcf	4048,7,c	;volatile
  3101                           
  3102                           ;menu_proj.c: 280: INTCONbits.GIE = 1;
  3103  0012C8  8EF2               	bsf	intcon,7,c	;volatile
  3104                           
  3105                           ;menu_proj.c: 283: INTCONbits.PEIE = 1;
  3106  0012CA  8CF2               	bsf	intcon,6,c	;volatile
  3107                           
  3108                           ;menu_proj.c: 291: control1.kp = 0.4;
  3109  0012CC  0ECD               	movlw	205
  3110  0012CE  6E4E               	movwf	_control1,c
  3111  0012D0  0ECC               	movlw	204
  3112  0012D2  6E4F               	movwf	_control1+1,c
  3113  0012D4  0E3E               	movlw	62
  3114  0012D6  6E50               	movwf	_control1+2,c
  3115                           
  3116                           ;menu_proj.c: 292: control1.ki = 0.3;
  3117  0012D8  0E9A               	movlw	154
  3118  0012DA  6E51               	movwf	_control1+3,c
  3119  0012DC  0E99               	movlw	153
  3120  0012DE  6E52               	movwf	_control1+4,c
  3121  0012E0  0E3E               	movlw	62
  3122  0012E2  6E53               	movwf	_control1+5,c
  3123                           
  3124                           ;menu_proj.c: 293: control1.kpki = 0.7;
  3125  0012E4  0E33               	movlw	51
  3126  0012E6  6E54               	movwf	_control1+6,c
  3127  0012E8  0E33               	movlw	51
  3128  0012EA  6E55               	movwf	_control1+7,c
  3129  0012EC  0E3F               	movlw	63
  3130  0012EE  6E56               	movwf	_control1+8,c
  3131                           
  3132                           ;menu_proj.c: 294: control1.ek = 0;
  3133  0012F0  0E00               	movlw	0
  3134  0012F2  6E57               	movwf	_control1+9,c
  3135                           
  3136                           ;menu_proj.c: 295: control1.ek1 = 0;
  3137  0012F4  0E00               	movlw	0
  3138  0012F6  6E58               	movwf	_control1+10,c
  3139                           
  3140                           ;menu_proj.c: 296: control1.uk = 30;
  3141  0012F8  0E1E               	movlw	30
  3142  0012FA  6E59               	movwf	_control1+11,c
  3143                           
  3144                           ;menu_proj.c: 297: control1.uk1 = 30;
  3145  0012FC  0E1E               	movlw	30
  3146  0012FE  6E5A               	movwf	_control1+12,c
  3147                           
  3148                           ;menu_proj.c: 298: Motor1.Desired=20;
  3149  001300  0E14               	movlw	20
  3150  001302  0100               	movlb	0	; () banked
  3151  001304  6F92               	movwf	_Motor1& (0+255),b
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;menu_proj.c: 299: Motor1.Actual=0;
  3155  001306  0E00               	movlw	0
  3156  001308  0100               	movlb	0	; () banked
  3157  00130A  6F93               	movwf	(_Motor1+1)& (0+255),b
  3158                           
  3159                           ; BSR set to: 0
  3160  00130C  0012               	return		;funcret
  3161  00130E                     __end_of_Initial:
  3162                           	opt stack 0
  3163                           tblptru	equ	0xFF8
  3164                           tblptrh	equ	0xFF7
  3165                           tblptrl	equ	0xFF6
  3166                           tablat	equ	0xFF5
  3167                           prodh	equ	0xFF4
  3168                           prodl	equ	0xFF3
  3169                           intcon	equ	0xFF2
  3170                           postinc0	equ	0xFEE
  3171                           wreg	equ	0xFE8
  3172                           postdec1	equ	0xFE5
  3173                           fsr1l	equ	0xFE1
  3174                           status	equ	0xFD8
  3175                           
  3176 ;; *************** function _WriteTimer0 *****************
  3177 ;; Defined at:
  3178 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  timer0          2    0[BANK0 ] unsigned int 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  timer           2    2[BANK0 ] struct Timers
  3183 ;; Return value:  Size  Location     Type
  3184 ;;		None               void
  3185 ;; Registers used:
  3186 ;;		None
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3192 ;;      Params:         0       2       0       0       0       0       0
  3193 ;;      Locals:         0       2       0       0       0       0       0
  3194 ;;      Temps:          0       0       0       0       0       0       0
  3195 ;;      Totals:         0       4       0       0       0       0       0
  3196 ;;Total ram usage:        4 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:    4
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_Initial
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text16
  3207  00166E                     __ptext16:
  3208                           	opt stack 0
  3209  00166E                     _WriteTimer0:
  3210                           	opt stack 25
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;incstack = 0
  3214  00166E  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  3215  001672  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  3216  001676  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  3217  00167A  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  3218  00167E  0012               	return		;funcret
  3219  001680                     __end_of_WriteTimer0:
  3220                           	opt stack 0
  3221                           tblptru	equ	0xFF8
  3222                           tblptrh	equ	0xFF7
  3223                           tblptrl	equ	0xFF6
  3224                           tablat	equ	0xFF5
  3225                           prodh	equ	0xFF4
  3226                           prodl	equ	0xFF3
  3227                           intcon	equ	0xFF2
  3228                           postinc0	equ	0xFEE
  3229                           wreg	equ	0xFE8
  3230                           postdec1	equ	0xFE5
  3231                           fsr1l	equ	0xFE1
  3232                           status	equ	0xFD8
  3233                           
  3234 ;; *************** function _OpenTimer0 *****************
  3235 ;; Defined at:
  3236 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0open.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  config          1    wreg     unsigned char 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  config          1    0[BANK0 ] unsigned char 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;		None               void
  3243 ;; Registers used:
  3244 ;;		wreg, status,2, status,0
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3250 ;;      Params:         0       0       0       0       0       0       0
  3251 ;;      Locals:         0       1       0       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0
  3253 ;;      Totals:         0       1       0       0       0       0       0
  3254 ;;Total ram usage:        1 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    4
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_Initial
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text17
  3265  0015D8                     __ptext17:
  3266                           	opt stack 0
  3267  0015D8                     _OpenTimer0:
  3268                           	opt stack 25
  3269                           
  3270                           ;incstack = 0
  3271                           ;OpenTimer0@config stored from wreg
  3272  0015D8  0100               	movlb	0	; () banked
  3273  0015DA  6F80               	movwf	OpenTimer0@config& (0+255),b
  3274  0015DC  0100               	movlb	0	; () banked
  3275  0015DE  5180               	movf	OpenTimer0@config& (0+255),w,b
  3276  0015E0  0B7F               	andlw	127
  3277  0015E2  6ED5               	movwf	4053,c	;volatile
  3278                           
  3279                           ; BSR set to: 0
  3280  0015E4  0E00               	movlw	0
  3281  0015E6  6ED7               	movwf	4055,c	;volatile
  3282                           
  3283                           ; BSR set to: 0
  3284  0015E8  0E00               	movlw	0
  3285  0015EA  6ED6               	movwf	4054,c	;volatile
  3286                           
  3287                           ; BSR set to: 0
  3288  0015EC  94F2               	bcf	intcon,2,c	;volatile
  3289                           
  3290                           ; BSR set to: 0
  3291  0015EE  0100               	movlb	0	; () banked
  3292  0015F0  AF80               	btfss	OpenTimer0@config& (0+255),7,b
  3293  0015F2  D002               	goto	l248
  3294                           
  3295                           ; BSR set to: 0
  3296  0015F4  8AF2               	bsf	intcon,5,c	;volatile
  3297  0015F6  D001               	goto	l249
  3298  0015F8                     l248:
  3299                           
  3300                           ; BSR set to: 0
  3301  0015F8  9AF2               	bcf	intcon,5,c	;volatile
  3302  0015FA                     l249:
  3303                           
  3304                           ; BSR set to: 0
  3305  0015FA  8ED5               	bsf	4053,7,c	;volatile
  3306                           
  3307                           ; BSR set to: 0
  3308  0015FC  0012               	return		;funcret
  3309  0015FE                     __end_of_OpenTimer0:
  3310                           	opt stack 0
  3311                           tblptru	equ	0xFF8
  3312                           tblptrh	equ	0xFF7
  3313                           tblptrl	equ	0xFF6
  3314                           tablat	equ	0xFF5
  3315                           prodh	equ	0xFF4
  3316                           prodl	equ	0xFF3
  3317                           intcon	equ	0xFF2
  3318                           postinc0	equ	0xFEE
  3319                           wreg	equ	0xFE8
  3320                           postdec1	equ	0xFE5
  3321                           fsr1l	equ	0xFE1
  3322                           status	equ	0xFD8
  3323                           
  3324 ;; *************** function _myIsr *****************
  3325 ;; Defined at:
  3326 ;;		line 78 in file "menu_proj.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;		None               void
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3340 ;;      Params:         0       0       0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0       0       0
  3342 ;;      Temps:         16       0       0       0       0       0       0
  3343 ;;      Totals:        16       0       0       0       0       0       0
  3344 ;;Total ram usage:       16 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    3
  3347 ;; This function calls:
  3348 ;;		_Find_Button_Press
  3349 ;;		_controller_funct
  3350 ;;		i2_WriteTimer0
  3351 ;; This function is called by:
  3352 ;;		Interrupt level 2
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	intcode
  3357  000008                     __pintcode:
  3358                           	opt stack 0
  3359  000008                     _myIsr:
  3360                           	opt stack 23
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;incstack = 0
  3364  000008  8264               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3365  00000A  CFFA F040          	movff	pclath,??_myIsr+2
  3366  00000E  CFFB F041          	movff	pclatu,??_myIsr+3
  3367  000012  EDA8  F006         	call	int_func,f	;refresh shadow registers
  3368                           pclatu	equ	0xFFB
  3369                           pclath	equ	0xFFA
  3370                           tblptru	equ	0xFF8
  3371                           tblptrh	equ	0xFF7
  3372                           tblptrl	equ	0xFF6
  3373                           tablat	equ	0xFF5
  3374                           prodh	equ	0xFF4
  3375                           prodl	equ	0xFF3
  3376                           intcon	equ	0xFF2
  3377                           postinc0	equ	0xFEE
  3378                           wreg	equ	0xFE8
  3379                           postdec1	equ	0xFE5
  3380                           fsr1l	equ	0xFE1
  3381                           status	equ	0xFD8
  3382                           
  3383                           	psect	intcode_body
  3384  000D50                     __pintcode_body:
  3385                           	opt stack 23
  3386  000D50                     int_func:
  3387                           	opt stack 23
  3388  000D50  0006               	pop		; remove dummy address from shadow register refresh
  3389  000D52  CFE9 F042          	movff	fsr0l,??_myIsr+4
  3390  000D56  CFEA F043          	movff	fsr0h,??_myIsr+5
  3391  000D5A  CFE1 F044          	movff	fsr1l,??_myIsr+6
  3392  000D5E  CFE2 F045          	movff	fsr1h,??_myIsr+7
  3393  000D62  CFD9 F046          	movff	fsr2l,??_myIsr+8
  3394  000D66  CFDA F047          	movff	fsr2h,??_myIsr+9
  3395  000D6A  CFF3 F048          	movff	prodl,??_myIsr+10
  3396  000D6E  CFF4 F049          	movff	prodh,??_myIsr+11
  3397  000D72  CFF6 F04A          	movff	tblptrl,??_myIsr+12
  3398  000D76  CFF7 F04B          	movff	tblptrh,??_myIsr+13
  3399  000D7A  CFF8 F04C          	movff	tblptru,??_myIsr+14
  3400  000D7E  CFF5 F04D          	movff	tablat,??_myIsr+15
  3401                           
  3402                           ;menu_proj.c: 82: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
  3403  000D82  BAF2               	btfsc	intcon,5,c	;volatile
  3404  000D84  A4F2               	btfss	intcon,2,c	;volatile
  3405  000D86  D02B               	goto	i2l2179
  3406                           
  3407                           ;menu_proj.c: 83: {
  3408                           ;menu_proj.c: 84: WriteTimer0(45536);
  3409  000D88  0EB1               	movlw	177
  3410  000D8A  6E02               	movwf	i2WriteTimer0@timer0+1,c
  3411  000D8C  0EE0               	movlw	224
  3412  000D8E  6E01               	movwf	i2WriteTimer0@timer0,c
  3413  000D90  EC40  F00B         	call	i2_WriteTimer0	;wreg free
  3414                           
  3415                           ;menu_proj.c: 85: INTCONbits.TMR0IF = 0;
  3416  000D94  94F2               	bcf	intcon,2,c	;volatile
  3417                           
  3418                           ;menu_proj.c: 86: Find_Button_Press();
  3419  000D96  ECC9  F009         	call	_Find_Button_Press	;wreg free
  3420                           
  3421                           ;menu_proj.c: 88: sample_time++;
  3422  000D9A  2A63               	incf	_sample_time,f,c
  3423                           
  3424                           ;menu_proj.c: 89: if (sample_time > 9)
  3425  000D9C  0E09               	movlw	9
  3426  000D9E  6463               	cpfsgt	_sample_time,c
  3427  000DA0  D009               	goto	i2l2171
  3428                           
  3429                           ;menu_proj.c: 90: {
  3430                           ;menu_proj.c: 91: TICK_E = 1;
  3431  000DA2  0E01               	movlw	1
  3432  000DA4  0100               	movlb	0	; () banked
  3433  000DA6  6F98               	movwf	_TICK_E& (0+255),b
  3434                           
  3435                           ;menu_proj.c: 92: sample_time =0;
  3436  000DA8  0E00               	movlw	0
  3437  000DAA  6E63               	movwf	_sample_time,c
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;menu_proj.c: 93: controller_funct();
  3441  000DAC  EC20  F007         	call	_controller_funct	;wreg free
  3442                           
  3443                           ;menu_proj.c: 94: CCPR2L = control1.uk;
  3444  000DB0  C059  FFBB         	movff	_control1+11,4027	;volatile
  3445  000DB4                     i2l2171:
  3446                           
  3447                           ;menu_proj.c: 96: }
  3448                           ;menu_proj.c: 99: count_test++;
  3449  000DB4  2A60               	incf	_count_test,f,c
  3450                           
  3451                           ;menu_proj.c: 100: if(count_test == 100){
  3452  000DB6  0E64               	movlw	100
  3453  000DB8  1860               	xorwf	_count_test,w,c
  3454  000DBA  A4D8               	btfss	status,2,c
  3455  000DBC  D010               	goto	i2l2179
  3456                           
  3457                           ;menu_proj.c: 101: PORTEbits.AN7 = ~PORTEbits.AN7;
  3458  000DBE  A484               	btfss	3972,2,c	;volatile
  3459  000DC0  D002               	goto	i2u174_40
  3460  000DC2  0E01               	movlw	1
  3461  000DC4  D001               	goto	i2u174_46
  3462  000DC6                     i2u174_40:
  3463  000DC6  0E00               	movlw	0
  3464  000DC8                     i2u174_46:
  3465  000DC8  0AFF               	xorlw	255
  3466  000DCA  6E3E               	movwf	??_myIsr& (0+255),c
  3467  000DCC  463E               	rlncf	??_myIsr,f,c
  3468  000DCE  463E               	rlncf	??_myIsr,f,c
  3469  000DD0  5084               	movf	3972,w,c	;volatile
  3470  000DD2  183E               	xorwf	??_myIsr,w,c
  3471  000DD4  0BFB               	andlw	-5
  3472  000DD6  183E               	xorwf	??_myIsr,w,c
  3473  000DD8  6E84               	movwf	3972,c	;volatile
  3474                           
  3475                           ;menu_proj.c: 102: count_test = 0;
  3476  000DDA  0E00               	movlw	0
  3477  000DDC  6E60               	movwf	_count_test,c
  3478  000DDE                     i2l2179:
  3479                           
  3480                           ;menu_proj.c: 105: }
  3481                           ;menu_proj.c: 106: }
  3482                           ;menu_proj.c: 107: if (PIE1bits.CCP1IE && PIR1bits.CCP1IF)
  3483  000DDE  B49D               	btfsc	3997,2,c	;volatile
  3484  000DE0  A49E               	btfss	3998,2,c	;volatile
  3485  000DE2  D010               	goto	i2l161
  3486                           
  3487                           ;menu_proj.c: 108: {
  3488                           ;menu_proj.c: 109: PIR1bits.CCP1IF = 0;
  3489  000DE4  949E               	bcf	3998,2,c	;volatile
  3490                           
  3491                           ;menu_proj.c: 110: capture = CCPR1L + (CCPR1H * 256);
  3492  000DE6  50BF               	movf	4031,w,c	;volatile
  3493  000DE8  6E3F               	movwf	(??_myIsr+1)& (0+255),c
  3494  000DEA  6A3E               	clrf	??_myIsr& (0+255),c
  3495  000DEC  50BE               	movf	4030,w,c	;volatile
  3496  000DEE  243E               	addwf	??_myIsr,w,c
  3497  000DF0  0100               	movlb	0	; () banked
  3498  000DF2  6F95               	movwf	_capture& (0+255),b
  3499  000DF4  0E00               	movlw	0
  3500  000DF6  203F               	addwfc	??_myIsr+1,w,c
  3501  000DF8  0100               	movlb	0	; () banked
  3502  000DFA  6F96               	movwf	(_capture+1)& (0+255),b
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;menu_proj.c: 112: TMR1H = 0;
  3506  000DFC  0E00               	movlw	0
  3507  000DFE  6ECF               	movwf	4047,c	;volatile
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;menu_proj.c: 113: TMR1L = 0;
  3511  000E00  0E00               	movlw	0
  3512  000E02  6ECE               	movwf	4046,c	;volatile
  3513  000E04                     i2l161:
  3514  000E04  C04D  FFF5         	movff	??_myIsr+15,tablat
  3515  000E08  C04C  FFF8         	movff	??_myIsr+14,tblptru
  3516  000E0C  C04B  FFF7         	movff	??_myIsr+13,tblptrh
  3517  000E10  C04A  FFF6         	movff	??_myIsr+12,tblptrl
  3518  000E14  C049  FFF4         	movff	??_myIsr+11,prodh
  3519  000E18  C048  FFF3         	movff	??_myIsr+10,prodl
  3520  000E1C  C047  FFDA         	movff	??_myIsr+9,fsr2h
  3521  000E20  C046  FFD9         	movff	??_myIsr+8,fsr2l
  3522  000E24  C045  FFE2         	movff	??_myIsr+7,fsr1h
  3523  000E28  C044  FFE1         	movff	??_myIsr+6,fsr1l
  3524  000E2C  C043  FFEA         	movff	??_myIsr+5,fsr0h
  3525  000E30  C042  FFE9         	movff	??_myIsr+4,fsr0l
  3526  000E34  C041  FFFB         	movff	??_myIsr+3,pclatu
  3527  000E38  C040  FFFA         	movff	??_myIsr+2,pclath
  3528  000E3C  9264               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3529  000E3E  0011               	retfie		f
  3530  000E40                     __end_of_myIsr:
  3531                           	opt stack 0
  3532                           pclatu	equ	0xFFB
  3533                           pclath	equ	0xFFA
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           prodh	equ	0xFF4
  3539                           prodl	equ	0xFF3
  3540                           intcon	equ	0xFF2
  3541                           postinc0	equ	0xFEE
  3542                           fsr0h	equ	0xFEA
  3543                           fsr0l	equ	0xFE9
  3544                           wreg	equ	0xFE8
  3545                           postdec1	equ	0xFE5
  3546                           fsr1h	equ	0xFE2
  3547                           fsr1l	equ	0xFE1
  3548                           fsr2h	equ	0xFDA
  3549                           fsr2l	equ	0xFD9
  3550                           status	equ	0xFD8
  3551                           
  3552 ;; *************** function i2_WriteTimer0 *****************
  3553 ;; Defined at:
  3554 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  timer0          2    0[COMRAM] unsigned int 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  3559 ;; Return value:  Size  Location     Type
  3560 ;;		None               void
  3561 ;; Registers used:
  3562 ;;		None
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3568 ;;      Params:         2       0       0       0       0       0       0
  3569 ;;      Locals:         2       0       0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0
  3571 ;;      Totals:         4       0       0       0       0       0       0
  3572 ;;Total ram usage:        4 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_myIsr
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text19
  3582  001680                     __ptext19:
  3583                           	opt stack 0
  3584  001680                     i2_WriteTimer0:
  3585                           	opt stack 25
  3586                           
  3587                           ;incstack = 0
  3588  001680  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  3589  001684  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  3590  001688  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  3591  00168C  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  3592  001690  0012               	return		;funcret
  3593  001692                     __end_ofi2_WriteTimer0:
  3594                           	opt stack 0
  3595                           pclatu	equ	0xFFB
  3596                           pclath	equ	0xFFA
  3597                           tblptru	equ	0xFF8
  3598                           tblptrh	equ	0xFF7
  3599                           tblptrl	equ	0xFF6
  3600                           tablat	equ	0xFF5
  3601                           prodh	equ	0xFF4
  3602                           prodl	equ	0xFF3
  3603                           intcon	equ	0xFF2
  3604                           postinc0	equ	0xFEE
  3605                           fsr0h	equ	0xFEA
  3606                           fsr0l	equ	0xFE9
  3607                           wreg	equ	0xFE8
  3608                           postdec1	equ	0xFE5
  3609                           fsr1h	equ	0xFE2
  3610                           fsr1l	equ	0xFE1
  3611                           fsr2h	equ	0xFDA
  3612                           fsr2l	equ	0xFD9
  3613                           status	equ	0xFD8
  3614                           
  3615 ;; *************** function _controller_funct *****************
  3616 ;; Defined at:
  3617 ;;		line 332 in file "menu_proj.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  temp            3   58[COMRAM] float 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;		None               void
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3631 ;;      Params:         0       0       0       0       0       0       0
  3632 ;;      Locals:         3       0       0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0
  3634 ;;      Totals:         3       0       0       0       0       0       0
  3635 ;;Total ram usage:        3 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    2
  3638 ;; This function calls:
  3639 ;;		___abtoft
  3640 ;;		___ftadd
  3641 ;;		___ftmul
  3642 ;;		___ftneg
  3643 ;;		___fttol
  3644 ;;		___lbtoft
  3645 ;; This function is called by:
  3646 ;;		_myIsr
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text20
  3651  000E40                     __ptext20:
  3652                           	opt stack 0
  3653  000E40                     _controller_funct:
  3654                           	opt stack 23
  3655                           
  3656                           ;menu_proj.c: 334: float temp = 0;
  3657                           
  3658                           ;incstack = 0
  3659  000E40  0E00               	movlw	0
  3660  000E42  6E3B               	movwf	controller_funct@temp,c
  3661  000E44  0E00               	movlw	0
  3662  000E46  6E3C               	movwf	controller_funct@temp+1,c
  3663  000E48  0E00               	movlw	0
  3664  000E4A  6E3D               	movwf	controller_funct@temp+2,c
  3665                           
  3666                           ;menu_proj.c: 335: control1.ek1 = control1.ek;
  3667  000E4C  C057  F058         	movff	_control1+9,_control1+10
  3668                           
  3669                           ;menu_proj.c: 336: control1.ek = Motor1.Desired - Motor1.Actual;
  3670  000E50  0100               	movlb	0	; () banked
  3671  000E52  5193               	movf	(_Motor1+1)& (0+255),w,b
  3672  000E54  0800               	sublw	0
  3673  000E56  0100               	movlb	0	; () banked
  3674  000E58  2592               	addwf	_Motor1& (0+255),w,b
  3675  000E5A  6E57               	movwf	_control1+9,c
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;menu_proj.c: 337: control1.uk1 = control1.uk;
  3679  000E5C  C059  F05A         	movff	_control1+11,_control1+12
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;menu_proj.c: 338: temp = ((control1.kpki * control1.ek )- (control1.kp * control1.ek1))
      +                          ;
  3683  000E60  C054  F011         	movff	_control1+6,___ftmul@f2
  3684  000E64  C055  F012         	movff	_control1+7,___ftmul@f2+1
  3685  000E68  C056  F013         	movff	_control1+8,___ftmul@f2+2
  3686  000E6C  5057               	movf	_control1+9,w,c
  3687  000E6E  ECC0  F00A         	call	___abtoft
  3688  000E72  C009  F00E         	movff	?___abtoft,___ftmul@f1
  3689  000E76  C00A  F00F         	movff	?___abtoft+1,___ftmul@f1+1
  3690  000E7A  C00B  F010         	movff	?___abtoft+2,___ftmul@f1+2
  3691  000E7E  EC2E  F006         	call	___ftmul	;wreg free
  3692  000E82  C00E  F020         	movff	?___ftmul,___ftadd@f1
  3693  000E86  C00F  F021         	movff	?___ftmul+1,___ftadd@f1+1
  3694  000E8A  C010  F022         	movff	?___ftmul+2,___ftadd@f1+2
  3695  000E8E  C04E  F011         	movff	_control1,___ftmul@f2
  3696  000E92  C04F  F012         	movff	_control1+1,___ftmul@f2+1
  3697  000E96  C050  F013         	movff	_control1+2,___ftmul@f2+2
  3698  000E9A  5058               	movf	_control1+10,w,c
  3699  000E9C  ECC0  F00A         	call	___abtoft
  3700  000EA0  C009  F00E         	movff	?___abtoft,___ftmul@f1
  3701  000EA4  C00A  F00F         	movff	?___abtoft+1,___ftmul@f1+1
  3702  000EA8  C00B  F010         	movff	?___abtoft+2,___ftmul@f1+2
  3703  000EAC  EC2E  F006         	call	___ftmul	;wreg free
  3704  000EB0  C00E  F01D         	movff	?___ftmul,___ftneg@f1
  3705  000EB4  C00F  F01E         	movff	?___ftmul+1,___ftneg@f1+1
  3706  000EB8  C010  F01F         	movff	?___ftmul+2,___ftneg@f1+2
  3707  000EBC  EC11  F00B         	call	___ftneg	;wreg free
  3708  000EC0  C01D  F023         	movff	?___ftneg,___ftadd@f2
  3709  000EC4  C01E  F024         	movff	?___ftneg+1,___ftadd@f2+1
  3710  000EC8  C01F  F025         	movff	?___ftneg+2,___ftadd@f2+2
  3711  000ECC  EC41  F004         	call	___ftadd	;wreg free
  3712  000ED0  C020  F03B         	movff	?___ftadd,controller_funct@temp
  3713  000ED4  C021  F03C         	movff	?___ftadd+1,controller_funct@temp+1
  3714  000ED8  C022  F03D         	movff	?___ftadd+2,controller_funct@temp+2
  3715                           
  3716                           ;menu_proj.c: 339: control1.uk = control1.uk1 + temp;
  3717  000EDC  C03B  F023         	movff	controller_funct@temp,___ftadd@f2
  3718  000EE0  C03C  F024         	movff	controller_funct@temp+1,___ftadd@f2+1
  3719  000EE4  C03D  F025         	movff	controller_funct@temp+2,___ftadd@f2+2
  3720  000EE8  505A               	movf	_control1+12,w,c
  3721  000EEA  ECFF  F00A         	call	___lbtoft
  3722  000EEE  C009  F020         	movff	?___lbtoft,___ftadd@f1
  3723  000EF2  C00A  F021         	movff	?___lbtoft+1,___ftadd@f1+1
  3724  000EF6  C00B  F022         	movff	?___lbtoft+2,___ftadd@f1+2
  3725  000EFA  EC41  F004         	call	___ftadd	;wreg free
  3726  000EFE  C020  F02C         	movff	?___ftadd,___fttol@f1
  3727  000F02  C021  F02D         	movff	?___ftadd+1,___fttol@f1+1
  3728  000F06  C022  F02E         	movff	?___ftadd+2,___fttol@f1+2
  3729  000F0A  ECB4  F005         	call	___fttol	;wreg free
  3730  000F0E  502C               	movf	?___fttol,w,c
  3731  000F10  6E59               	movwf	_control1+11,c
  3732  000F12  0012               	return		;funcret
  3733  000F14                     __end_of_controller_funct:
  3734                           	opt stack 0
  3735                           pclatu	equ	0xFFB
  3736                           pclath	equ	0xFFA
  3737                           tblptru	equ	0xFF8
  3738                           tblptrh	equ	0xFF7
  3739                           tblptrl	equ	0xFF6
  3740                           tablat	equ	0xFF5
  3741                           prodh	equ	0xFF4
  3742                           prodl	equ	0xFF3
  3743                           intcon	equ	0xFF2
  3744                           postinc0	equ	0xFEE
  3745                           fsr0h	equ	0xFEA
  3746                           fsr0l	equ	0xFE9
  3747                           wreg	equ	0xFE8
  3748                           postdec1	equ	0xFE5
  3749                           fsr1h	equ	0xFE2
  3750                           fsr1l	equ	0xFE1
  3751                           fsr2h	equ	0xFDA
  3752                           fsr2l	equ	0xFD9
  3753                           status	equ	0xFD8
  3754                           
  3755 ;; *************** function ___lbtoft *****************
  3756 ;; Defined at:
  3757 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbtoft.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  c               1    wreg     unsigned char 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  c               1   11[COMRAM] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  3    8[COMRAM] float 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3771 ;;      Params:         3       0       0       0       0       0       0
  3772 ;;      Locals:         1       0       0       0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0
  3774 ;;      Totals:         4       0       0       0       0       0       0
  3775 ;;Total ram usage:        4 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    1
  3778 ;; This function calls:
  3779 ;;		___ftpack
  3780 ;; This function is called by:
  3781 ;;		_controller_funct
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text21
  3786  0015FE                     __ptext21:
  3787                           	opt stack 0
  3788  0015FE                     ___lbtoft:
  3789                           	opt stack 23
  3790                           
  3791                           ;incstack = 0
  3792                           ;___lbtoft@c stored from wreg
  3793  0015FE  6E0C               	movwf	___lbtoft@c,c
  3794  001600  500C               	movf	___lbtoft@c,w,c
  3795  001602  6E01               	movwf	___ftpack@arg,c
  3796  001604  6A02               	clrf	___ftpack@arg+1,c
  3797  001606  6A03               	clrf	___ftpack@arg+2,c
  3798  001608  0E8E               	movlw	142
  3799  00160A  6E04               	movwf	___ftpack@exp,c
  3800  00160C  0E00               	movlw	0
  3801  00160E  6E05               	movwf	___ftpack@sign,c
  3802  001610  EC46  F008         	call	___ftpack	;wreg free
  3803  001614  C001  F009         	movff	?___ftpack,?___lbtoft
  3804  001618  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  3805  00161C  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  3806  001620  0012               	return	
  3807  001622                     __end_of___lbtoft:
  3808                           	opt stack 0
  3809                           pclatu	equ	0xFFB
  3810                           pclath	equ	0xFFA
  3811                           tblptru	equ	0xFF8
  3812                           tblptrh	equ	0xFF7
  3813                           tblptrl	equ	0xFF6
  3814                           tablat	equ	0xFF5
  3815                           prodh	equ	0xFF4
  3816                           prodl	equ	0xFF3
  3817                           intcon	equ	0xFF2
  3818                           postinc0	equ	0xFEE
  3819                           fsr0h	equ	0xFEA
  3820                           fsr0l	equ	0xFE9
  3821                           wreg	equ	0xFE8
  3822                           postdec1	equ	0xFE5
  3823                           fsr1h	equ	0xFE2
  3824                           fsr1l	equ	0xFE1
  3825                           fsr2h	equ	0xFDA
  3826                           fsr2l	equ	0xFD9
  3827                           status	equ	0xFD8
  3828                           
  3829 ;; *************** function ___fttol *****************
  3830 ;; Defined at:
  3831 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  f1              3   43[COMRAM] float 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  lval            4   53[COMRAM] unsigned long 
  3836 ;;  exp1            1   57[COMRAM] unsigned char 
  3837 ;;  sign1           1   52[COMRAM] unsigned char 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  4   43[COMRAM] long 
  3840 ;; Registers used:
  3841 ;;		wreg, status,2, status,0
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3847 ;;      Params:         4       0       0       0       0       0       0
  3848 ;;      Locals:         6       0       0       0       0       0       0
  3849 ;;      Temps:          5       0       0       0       0       0       0
  3850 ;;      Totals:        15       0       0       0       0       0       0
  3851 ;;Total ram usage:       15 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_controller_funct
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text22
  3861  000B68                     __ptext22:
  3862                           	opt stack 0
  3863  000B68                     ___fttol:
  3864                           	opt stack 24
  3865                           
  3866                           ;incstack = 0
  3867  000B68  C02E  F030         	movff	___fttol@f1+2,??___fttol
  3868  000B6C  6A31               	clrf	(??___fttol+1)& (0+255),c
  3869  000B6E  6A32               	clrf	(??___fttol+2)& (0+255),c
  3870  000B70  342D               	rlcf	___fttol@f1+1,w,c
  3871  000B72  3630               	rlcf	??___fttol& (0+255),f,c
  3872  000B74  E301               	bnc	u150_41
  3873  000B76  8031               	bsf	(??___fttol+1)& (0+255),0,c
  3874  000B78                     u150_41:
  3875  000B78  5030               	movf	??___fttol,w,c
  3876  000B7A  6E3A               	movwf	___fttol@exp1,c
  3877  000B7C  503A               	movf	___fttol@exp1,w,c
  3878  000B7E  A4D8               	btfss	status,2,c
  3879  000B80  D009               	goto	i2l1907
  3880  000B82  0E00               	movlw	0
  3881  000B84  6E2C               	movwf	?___fttol,c
  3882  000B86  0E00               	movlw	0
  3883  000B88  6E2D               	movwf	?___fttol+1,c
  3884  000B8A  0E00               	movlw	0
  3885  000B8C  6E2E               	movwf	?___fttol+2,c
  3886  000B8E  0E00               	movlw	0
  3887  000B90  6E2F               	movwf	?___fttol+3,c
  3888  000B92  0012               	return	
  3889  000B94                     i2l1907:
  3890  000B94  0E17               	movlw	23
  3891  000B96  6E30               	movwf	??___fttol& (0+255),c
  3892  000B98  C02C  F031         	movff	___fttol@f1,??___fttol+1
  3893  000B9C  C02D  F032         	movff	___fttol@f1+1,??___fttol+2
  3894  000BA0  C02E  F033         	movff	___fttol@f1+2,??___fttol+3
  3895  000BA4  2830               	incf	??___fttol,w,c
  3896  000BA6  6E34               	movwf	(??___fttol+4)& (0+255),c
  3897  000BA8  D004               	goto	i2u152_40
  3898  000BAA                     i2u152_45:
  3899  000BAA  90D8               	bcf	status,0,c
  3900  000BAC  3233               	rrcf	??___fttol+3,f,c
  3901  000BAE  3232               	rrcf	??___fttol+2,f,c
  3902  000BB0  3231               	rrcf	??___fttol+1,f,c
  3903  000BB2                     i2u152_40:
  3904  000BB2  2E34               	decfsz	(??___fttol+4)& (0+255),f,c
  3905  000BB4  D7FA               	goto	i2u152_45
  3906  000BB6  5031               	movf	??___fttol+1,w,c
  3907  000BB8  6E35               	movwf	___fttol@sign1,c
  3908  000BBA  8E2D               	bsf	___fttol@f1+1,7,c
  3909  000BBC  0EFF               	movlw	255
  3910  000BBE  162C               	andwf	___fttol@f1,f,c
  3911  000BC0  0EFF               	movlw	255
  3912  000BC2  162D               	andwf	___fttol@f1+1,f,c
  3913  000BC4  0E00               	movlw	0
  3914  000BC6  162E               	andwf	___fttol@f1+2,f,c
  3915  000BC8  502C               	movf	___fttol@f1,w,c
  3916  000BCA  6E36               	movwf	___fttol@lval,c
  3917  000BCC  502D               	movf	___fttol@f1+1,w,c
  3918  000BCE  6E37               	movwf	___fttol@lval+1,c
  3919  000BD0  502E               	movf	___fttol@f1+2,w,c
  3920  000BD2  6E38               	movwf	___fttol@lval+2,c
  3921  000BD4  6A39               	clrf	___fttol@lval+3,c
  3922  000BD6  0E8E               	movlw	142
  3923  000BD8  5E3A               	subwf	___fttol@exp1,f,c
  3924  000BDA  AE3A               	btfss	___fttol@exp1,7,c
  3925  000BDC  D016               	goto	i2l1929
  3926  000BDE  503A               	movf	___fttol@exp1,w,c
  3927  000BE0  0A80               	xorlw	128
  3928  000BE2  0F8F               	addlw	143
  3929  000BE4  B0D8               	btfsc	status,0,c
  3930  000BE6  D009               	goto	i2l1925
  3931  000BE8  0E00               	movlw	0
  3932  000BEA  6E2C               	movwf	?___fttol,c
  3933  000BEC  0E00               	movlw	0
  3934  000BEE  6E2D               	movwf	?___fttol+1,c
  3935  000BF0  0E00               	movlw	0
  3936  000BF2  6E2E               	movwf	?___fttol+2,c
  3937  000BF4  0E00               	movlw	0
  3938  000BF6  6E2F               	movwf	?___fttol+3,c
  3939  000BF8  0012               	return	
  3940  000BFA                     i2l1925:
  3941  000BFA  90D8               	bcf	status,0,c
  3942  000BFC  3239               	rrcf	___fttol@lval+3,f,c
  3943  000BFE  3238               	rrcf	___fttol@lval+2,f,c
  3944  000C00  3237               	rrcf	___fttol@lval+1,f,c
  3945  000C02  3236               	rrcf	___fttol@lval,f,c
  3946  000C04  3E3A               	incfsz	___fttol@exp1,f,c
  3947  000C06  D7F9               	goto	i2l1925
  3948  000C08  D015               	goto	i2l1939
  3949  000C0A                     i2l1929:
  3950  000C0A  0E17               	movlw	23
  3951  000C0C  643A               	cpfsgt	___fttol@exp1,c
  3952  000C0E  D00F               	goto	i2l1937
  3953  000C10  0E00               	movlw	0
  3954  000C12  6E2C               	movwf	?___fttol,c
  3955  000C14  0E00               	movlw	0
  3956  000C16  6E2D               	movwf	?___fttol+1,c
  3957  000C18  0E00               	movlw	0
  3958  000C1A  6E2E               	movwf	?___fttol+2,c
  3959  000C1C  0E00               	movlw	0
  3960  000C1E  6E2F               	movwf	?___fttol+3,c
  3961  000C20  0012               	return	
  3962  000C22                     i2l1935:
  3963  000C22  90D8               	bcf	status,0,c
  3964  000C24  3636               	rlcf	___fttol@lval,f,c
  3965  000C26  3637               	rlcf	___fttol@lval+1,f,c
  3966  000C28  3638               	rlcf	___fttol@lval+2,f,c
  3967  000C2A  3639               	rlcf	___fttol@lval+3,f,c
  3968  000C2C  063A               	decf	___fttol@exp1,f,c
  3969  000C2E                     i2l1937:
  3970  000C2E  503A               	movf	___fttol@exp1,w,c
  3971  000C30  A4D8               	btfss	status,2,c
  3972  000C32  D7F7               	goto	i2l1935
  3973  000C34                     i2l1939:
  3974  000C34  5035               	movf	___fttol@sign1,w,c
  3975  000C36  B4D8               	btfsc	status,2,c
  3976  000C38  D008               	goto	i2l1943
  3977  000C3A  1E39               	comf	___fttol@lval+3,f,c
  3978  000C3C  1E38               	comf	___fttol@lval+2,f,c
  3979  000C3E  1E37               	comf	___fttol@lval+1,f,c
  3980  000C40  6C36               	negf	___fttol@lval,c
  3981  000C42  0E00               	movlw	0
  3982  000C44  2237               	addwfc	___fttol@lval+1,f,c
  3983  000C46  2238               	addwfc	___fttol@lval+2,f,c
  3984  000C48  2239               	addwfc	___fttol@lval+3,f,c
  3985  000C4A                     i2l1943:
  3986  000C4A  C036  F02C         	movff	___fttol@lval,?___fttol
  3987  000C4E  C037  F02D         	movff	___fttol@lval+1,?___fttol+1
  3988  000C52  C038  F02E         	movff	___fttol@lval+2,?___fttol+2
  3989  000C56  C039  F02F         	movff	___fttol@lval+3,?___fttol+3
  3990  000C5A  0012               	return	
  3991  000C5C                     __end_of___fttol:
  3992                           	opt stack 0
  3993                           pclatu	equ	0xFFB
  3994                           pclath	equ	0xFFA
  3995                           tblptru	equ	0xFF8
  3996                           tblptrh	equ	0xFF7
  3997                           tblptrl	equ	0xFF6
  3998                           tablat	equ	0xFF5
  3999                           prodh	equ	0xFF4
  4000                           prodl	equ	0xFF3
  4001                           intcon	equ	0xFF2
  4002                           postinc0	equ	0xFEE
  4003                           fsr0h	equ	0xFEA
  4004                           fsr0l	equ	0xFE9
  4005                           wreg	equ	0xFE8
  4006                           postdec1	equ	0xFE5
  4007                           fsr1h	equ	0xFE2
  4008                           fsr1l	equ	0xFE1
  4009                           fsr2h	equ	0xFDA
  4010                           fsr2l	equ	0xFD9
  4011                           status	equ	0xFD8
  4012                           
  4013 ;; *************** function ___ftneg *****************
  4014 ;; Defined at:
  4015 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  f1              3   28[COMRAM] float 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  3   28[COMRAM] float 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2, status,0
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4029 ;;      Params:         3       0       0       0       0       0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0
  4032 ;;      Totals:         3       0       0       0       0       0       0
  4033 ;;Total ram usage:        3 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_controller_funct
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text23
  4043  001622                     __ptext23:
  4044                           	opt stack 0
  4045  001622                     ___ftneg:
  4046                           	opt stack 24
  4047                           
  4048                           ;incstack = 0
  4049  001622  501D               	movf	___ftneg@f1,w,c
  4050  001624  101E               	iorwf	___ftneg@f1+1,w,c
  4051  001626  101F               	iorwf	___ftneg@f1+2,w,c
  4052  001628  B4D8               	btfsc	status,2,c
  4053  00162A  D006               	goto	i2l562
  4054  00162C  0E00               	movlw	0
  4055  00162E  1A1D               	xorwf	___ftneg@f1,f,c
  4056  001630  0E00               	movlw	0
  4057  001632  1A1E               	xorwf	___ftneg@f1+1,f,c
  4058  001634  0E80               	movlw	128
  4059  001636  1A1F               	xorwf	___ftneg@f1+2,f,c
  4060  001638                     i2l562:
  4061  001638  C01D  F01D         	movff	___ftneg@f1,?___ftneg
  4062  00163C  C01E  F01E         	movff	___ftneg@f1+1,?___ftneg+1
  4063  001640  C01F  F01F         	movff	___ftneg@f1+2,?___ftneg+2
  4064  001644  0012               	return		;funcret
  4065  001646                     __end_of___ftneg:
  4066                           	opt stack 0
  4067                           pclatu	equ	0xFFB
  4068                           pclath	equ	0xFFA
  4069                           tblptru	equ	0xFF8
  4070                           tblptrh	equ	0xFF7
  4071                           tblptrl	equ	0xFF6
  4072                           tablat	equ	0xFF5
  4073                           prodh	equ	0xFF4
  4074                           prodl	equ	0xFF3
  4075                           intcon	equ	0xFF2
  4076                           postinc0	equ	0xFEE
  4077                           fsr0h	equ	0xFEA
  4078                           fsr0l	equ	0xFE9
  4079                           wreg	equ	0xFE8
  4080                           postdec1	equ	0xFE5
  4081                           fsr1h	equ	0xFE2
  4082                           fsr1l	equ	0xFE1
  4083                           fsr2h	equ	0xFDA
  4084                           fsr2l	equ	0xFD9
  4085                           status	equ	0xFD8
  4086                           
  4087 ;; *************** function ___ftmul *****************
  4088 ;; Defined at:
  4089 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  f1              3   13[COMRAM] float 
  4092 ;;  f2              3   16[COMRAM] float 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  f3_as_produc    3   23[COMRAM] unsigned um
  4095 ;;  sign            1   27[COMRAM] unsigned char 
  4096 ;;  cntr            1   26[COMRAM] unsigned char 
  4097 ;;  exp             1   22[COMRAM] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  3   13[COMRAM] float 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4107 ;;      Params:         6       0       0       0       0       0       0
  4108 ;;      Locals:         6       0       0       0       0       0       0
  4109 ;;      Temps:          3       0       0       0       0       0       0
  4110 ;;      Totals:        15       0       0       0       0       0       0
  4111 ;;Total ram usage:       15 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    1
  4114 ;; This function calls:
  4115 ;;		___ftpack
  4116 ;; This function is called by:
  4117 ;;		_controller_funct
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text24
  4122  000C5C                     __ptext24:
  4123                           	opt stack 0
  4124  000C5C                     ___ftmul:
  4125                           	opt stack 23
  4126                           
  4127                           ;incstack = 0
  4128  000C5C  C010  F014         	movff	___ftmul@f1+2,??___ftmul
  4129  000C60  6A15               	clrf	(??___ftmul+1)& (0+255),c
  4130  000C62  6A16               	clrf	(??___ftmul+2)& (0+255),c
  4131  000C64  340F               	rlcf	___ftmul@f1+1,w,c
  4132  000C66  3614               	rlcf	??___ftmul& (0+255),f,c
  4133  000C68  E301               	bnc	u131_41
  4134  000C6A  8015               	bsf	(??___ftmul+1)& (0+255),0,c
  4135  000C6C                     u131_41:
  4136  000C6C  5014               	movf	??___ftmul,w,c
  4137  000C6E  6E17               	movwf	___ftmul@exp,c
  4138  000C70  5017               	movf	___ftmul@exp,w,c
  4139  000C72  A4D8               	btfss	status,2,c
  4140  000C74  D007               	goto	i2l1775
  4141  000C76  0E00               	movlw	0
  4142  000C78  6E0E               	movwf	?___ftmul,c
  4143  000C7A  0E00               	movlw	0
  4144  000C7C  6E0F               	movwf	?___ftmul+1,c
  4145  000C7E  0E00               	movlw	0
  4146  000C80  6E10               	movwf	?___ftmul+2,c
  4147  000C82  0012               	return	
  4148  000C84                     i2l1775:
  4149  000C84  C013  F014         	movff	___ftmul@f2+2,??___ftmul
  4150  000C88  6A15               	clrf	(??___ftmul+1)& (0+255),c
  4151  000C8A  6A16               	clrf	(??___ftmul+2)& (0+255),c
  4152  000C8C  3412               	rlcf	___ftmul@f2+1,w,c
  4153  000C8E  3614               	rlcf	??___ftmul& (0+255),f,c
  4154  000C90  E301               	bnc	u133_41
  4155  000C92  8015               	bsf	(??___ftmul+1)& (0+255),0,c
  4156  000C94                     u133_41:
  4157  000C94  5014               	movf	??___ftmul,w,c
  4158  000C96  6E1C               	movwf	___ftmul@sign,c
  4159  000C98  501C               	movf	___ftmul@sign,w,c
  4160  000C9A  A4D8               	btfss	status,2,c
  4161  000C9C  D007               	goto	i2l1781
  4162  000C9E  0E00               	movlw	0
  4163  000CA0  6E0E               	movwf	?___ftmul,c
  4164  000CA2  0E00               	movlw	0
  4165  000CA4  6E0F               	movwf	?___ftmul+1,c
  4166  000CA6  0E00               	movlw	0
  4167  000CA8  6E10               	movwf	?___ftmul+2,c
  4168  000CAA  0012               	return	
  4169  000CAC                     i2l1781:
  4170  000CAC  501C               	movf	___ftmul@sign,w,c
  4171  000CAE  0F7B               	addlw	123
  4172  000CB0  2617               	addwf	___ftmul@exp,f,c
  4173  000CB2  C010  F01C         	movff	___ftmul@f1+2,___ftmul@sign
  4174  000CB6  5013               	movf	___ftmul@f2+2,w,c
  4175  000CB8  1A1C               	xorwf	___ftmul@sign,f,c
  4176  000CBA  0E80               	movlw	128
  4177  000CBC  161C               	andwf	___ftmul@sign,f,c
  4178  000CBE  8E0F               	bsf	___ftmul@f1+1,7,c
  4179  000CC0  8E12               	bsf	___ftmul@f2+1,7,c
  4180  000CC2  0EFF               	movlw	255
  4181  000CC4  1611               	andwf	___ftmul@f2,f,c
  4182  000CC6  0EFF               	movlw	255
  4183  000CC8  1612               	andwf	___ftmul@f2+1,f,c
  4184  000CCA  0E00               	movlw	0
  4185  000CCC  1613               	andwf	___ftmul@f2+2,f,c
  4186  000CCE  0E00               	movlw	0
  4187  000CD0  6E18               	movwf	___ftmul@f3_as_product,c
  4188  000CD2  0E00               	movlw	0
  4189  000CD4  6E19               	movwf	___ftmul@f3_as_product+1,c
  4190  000CD6  0E00               	movlw	0
  4191  000CD8  6E1A               	movwf	___ftmul@f3_as_product+2,c
  4192  000CDA  0E07               	movlw	7
  4193  000CDC  6E1B               	movwf	___ftmul@cntr,c
  4194  000CDE                     i2l1795:
  4195  000CDE  A00E               	btfss	___ftmul@f1,0,c
  4196  000CE0  D006               	goto	i2l1799
  4197  000CE2  5011               	movf	___ftmul@f2,w,c
  4198  000CE4  2618               	addwf	___ftmul@f3_as_product,f,c
  4199  000CE6  5012               	movf	___ftmul@f2+1,w,c
  4200  000CE8  2219               	addwfc	___ftmul@f3_as_product+1,f,c
  4201  000CEA  5013               	movf	___ftmul@f2+2,w,c
  4202  000CEC  221A               	addwfc	___ftmul@f3_as_product+2,f,c
  4203  000CEE                     i2l1799:
  4204  000CEE  90D8               	bcf	status,0,c
  4205  000CF0  3210               	rrcf	___ftmul@f1+2,f,c
  4206  000CF2  320F               	rrcf	___ftmul@f1+1,f,c
  4207  000CF4  320E               	rrcf	___ftmul@f1,f,c
  4208  000CF6  90D8               	bcf	status,0,c
  4209  000CF8  3611               	rlcf	___ftmul@f2,f,c
  4210  000CFA  3612               	rlcf	___ftmul@f2+1,f,c
  4211  000CFC  3613               	rlcf	___ftmul@f2+2,f,c
  4212  000CFE  2E1B               	decfsz	___ftmul@cntr,f,c
  4213  000D00  D7EE               	goto	i2l1795
  4214  000D02  0E09               	movlw	9
  4215  000D04  6E1B               	movwf	___ftmul@cntr,c
  4216  000D06                     i2l1805:
  4217  000D06  A00E               	btfss	___ftmul@f1,0,c
  4218  000D08  D006               	goto	i2l1809
  4219  000D0A  5011               	movf	___ftmul@f2,w,c
  4220  000D0C  2618               	addwf	___ftmul@f3_as_product,f,c
  4221  000D0E  5012               	movf	___ftmul@f2+1,w,c
  4222  000D10  2219               	addwfc	___ftmul@f3_as_product+1,f,c
  4223  000D12  5013               	movf	___ftmul@f2+2,w,c
  4224  000D14  221A               	addwfc	___ftmul@f3_as_product+2,f,c
  4225  000D16                     i2l1809:
  4226  000D16  90D8               	bcf	status,0,c
  4227  000D18  3210               	rrcf	___ftmul@f1+2,f,c
  4228  000D1A  320F               	rrcf	___ftmul@f1+1,f,c
  4229  000D1C  320E               	rrcf	___ftmul@f1,f,c
  4230  000D1E  90D8               	bcf	status,0,c
  4231  000D20  321A               	rrcf	___ftmul@f3_as_product+2,f,c
  4232  000D22  3219               	rrcf	___ftmul@f3_as_product+1,f,c
  4233  000D24  3218               	rrcf	___ftmul@f3_as_product,f,c
  4234  000D26  2E1B               	decfsz	___ftmul@cntr,f,c
  4235  000D28  D7EE               	goto	i2l1805
  4236  000D2A  C018  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4237  000D2E  C019  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4238  000D32  C01A  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4239  000D36  C017  F004         	movff	___ftmul@exp,___ftpack@exp
  4240  000D3A  C01C  F005         	movff	___ftmul@sign,___ftpack@sign
  4241  000D3E  EC46  F008         	call	___ftpack	;wreg free
  4242  000D42  C001  F00E         	movff	?___ftpack,?___ftmul
  4243  000D46  C002  F00F         	movff	?___ftpack+1,?___ftmul+1
  4244  000D4A  C003  F010         	movff	?___ftpack+2,?___ftmul+2
  4245  000D4E  0012               	return	
  4246  000D50                     __end_of___ftmul:
  4247                           	opt stack 0
  4248                           pclatu	equ	0xFFB
  4249                           pclath	equ	0xFFA
  4250                           tblptru	equ	0xFF8
  4251                           tblptrh	equ	0xFF7
  4252                           tblptrl	equ	0xFF6
  4253                           tablat	equ	0xFF5
  4254                           prodh	equ	0xFF4
  4255                           prodl	equ	0xFF3
  4256                           intcon	equ	0xFF2
  4257                           postinc0	equ	0xFEE
  4258                           fsr0h	equ	0xFEA
  4259                           fsr0l	equ	0xFE9
  4260                           wreg	equ	0xFE8
  4261                           postdec1	equ	0xFE5
  4262                           fsr1h	equ	0xFE2
  4263                           fsr1l	equ	0xFE1
  4264                           fsr2h	equ	0xFDA
  4265                           fsr2l	equ	0xFD9
  4266                           status	equ	0xFD8
  4267                           
  4268 ;; *************** function ___ftadd *****************
  4269 ;; Defined at:
  4270 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  f1              3   31[COMRAM] float 
  4273 ;;  f2              3   34[COMRAM] float 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  exp1            1   42[COMRAM] unsigned char 
  4276 ;;  exp2            1   41[COMRAM] unsigned char 
  4277 ;;  sign            1   40[COMRAM] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  3   31[COMRAM] float 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4287 ;;      Params:         6       0       0       0       0       0       0
  4288 ;;      Locals:         3       0       0       0       0       0       0
  4289 ;;      Temps:          3       0       0       0       0       0       0
  4290 ;;      Totals:        12       0       0       0       0       0       0
  4291 ;;Total ram usage:       12 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    1
  4294 ;; This function calls:
  4295 ;;		___ftpack
  4296 ;; This function is called by:
  4297 ;;		_controller_funct
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text25
  4302  000882                     __ptext25:
  4303                           	opt stack 0
  4304  000882                     ___ftadd:
  4305                           	opt stack 23
  4306                           
  4307                           ;incstack = 0
  4308  000882  C022  F026         	movff	___ftadd@f1+2,??___ftadd
  4309  000886  6A27               	clrf	(??___ftadd+1)& (0+255),c
  4310  000888  6A28               	clrf	(??___ftadd+2)& (0+255),c
  4311  00088A  3421               	rlcf	___ftadd@f1+1,w,c
  4312  00088C  3626               	rlcf	??___ftadd& (0+255),f,c
  4313  00088E  E301               	bnc	u110_41
  4314  000890  8027               	bsf	(??___ftadd+1)& (0+255),0,c
  4315  000892                     u110_41:
  4316  000892  5026               	movf	??___ftadd,w,c
  4317  000894  6E2B               	movwf	___ftadd@exp1,c
  4318  000896  C025  F026         	movff	___ftadd@f2+2,??___ftadd
  4319  00089A  6A27               	clrf	(??___ftadd+1)& (0+255),c
  4320  00089C  6A28               	clrf	(??___ftadd+2)& (0+255),c
  4321  00089E  3424               	rlcf	___ftadd@f2+1,w,c
  4322  0008A0  3626               	rlcf	??___ftadd& (0+255),f,c
  4323  0008A2  E301               	bnc	u111_41
  4324  0008A4  8027               	bsf	(??___ftadd+1)& (0+255),0,c
  4325  0008A6                     u111_41:
  4326  0008A6  5026               	movf	??___ftadd,w,c
  4327  0008A8  6E2A               	movwf	___ftadd@exp2,c
  4328  0008AA  502B               	movf	___ftadd@exp1,w,c
  4329  0008AC  B4D8               	btfsc	status,2,c
  4330  0008AE  D00B               	goto	i2l505
  4331  0008B0  502A               	movf	___ftadd@exp2,w,c
  4332  0008B2  5C2B               	subwf	___ftadd@exp1,w,c
  4333  0008B4  B0D8               	btfsc	status,0,c
  4334  0008B6  D00E               	goto	i2l1707
  4335  0008B8  502B               	movf	___ftadd@exp1,w,c
  4336  0008BA  0800               	sublw	0
  4337  0008BC  242A               	addwf	___ftadd@exp2,w,c
  4338  0008BE  6E26               	movwf	??___ftadd& (0+255),c
  4339  0008C0  0E18               	movlw	24
  4340  0008C2  6426               	cpfsgt	??___ftadd,c
  4341  0008C4  D007               	goto	i2l1707
  4342  0008C6                     i2l505:
  4343  0008C6  C023  F020         	movff	___ftadd@f2,?___ftadd
  4344  0008CA  C024  F021         	movff	___ftadd@f2+1,?___ftadd+1
  4345  0008CE  C025  F022         	movff	___ftadd@f2+2,?___ftadd+2
  4346  0008D2  0012               	return	
  4347  0008D4                     i2l1707:
  4348  0008D4  502A               	movf	___ftadd@exp2,w,c
  4349  0008D6  B4D8               	btfsc	status,2,c
  4350  0008D8  D00B               	goto	i2l509
  4351  0008DA  502B               	movf	___ftadd@exp1,w,c
  4352  0008DC  5C2A               	subwf	___ftadd@exp2,w,c
  4353  0008DE  B0D8               	btfsc	status,0,c
  4354  0008E0  D00E               	goto	i2l1713
  4355  0008E2  502A               	movf	___ftadd@exp2,w,c
  4356  0008E4  0800               	sublw	0
  4357  0008E6  242B               	addwf	___ftadd@exp1,w,c
  4358  0008E8  6E26               	movwf	??___ftadd& (0+255),c
  4359  0008EA  0E18               	movlw	24
  4360  0008EC  6426               	cpfsgt	??___ftadd,c
  4361  0008EE  D007               	goto	i2l1713
  4362  0008F0                     i2l509:
  4363  0008F0  C020  F020         	movff	___ftadd@f1,?___ftadd
  4364  0008F4  C021  F021         	movff	___ftadd@f1+1,?___ftadd+1
  4365  0008F8  C022  F022         	movff	___ftadd@f1+2,?___ftadd+2
  4366  0008FC  0012               	return	
  4367  0008FE                     i2l1713:
  4368  0008FE  0E06               	movlw	6
  4369  000900  6E29               	movwf	___ftadd@sign,c
  4370  000902  BE22               	btfsc	___ftadd@f1+2,7,c
  4371  000904  8E29               	bsf	___ftadd@sign,7,c
  4372  000906  BE25               	btfsc	___ftadd@f2+2,7,c
  4373  000908  8C29               	bsf	___ftadd@sign,6,c
  4374  00090A  8E21               	bsf	___ftadd@f1+1,7,c
  4375  00090C  0EFF               	movlw	255
  4376  00090E  1620               	andwf	___ftadd@f1,f,c
  4377  000910  0EFF               	movlw	255
  4378  000912  1621               	andwf	___ftadd@f1+1,f,c
  4379  000914  0E00               	movlw	0
  4380  000916  1622               	andwf	___ftadd@f1+2,f,c
  4381  000918  8E24               	bsf	___ftadd@f2+1,7,c
  4382  00091A  0EFF               	movlw	255
  4383  00091C  1623               	andwf	___ftadd@f2,f,c
  4384  00091E  0EFF               	movlw	255
  4385  000920  1624               	andwf	___ftadd@f2+1,f,c
  4386  000922  0E00               	movlw	0
  4387  000924  1625               	andwf	___ftadd@f2+2,f,c
  4388  000926  502A               	movf	___ftadd@exp2,w,c
  4389  000928  5C2B               	subwf	___ftadd@exp1,w,c
  4390  00092A  B0D8               	btfsc	status,0,c
  4391  00092C  D01B               	goto	i2l1739
  4392  00092E                     i2l1729:
  4393  00092E  90D8               	bcf	status,0,c
  4394  000930  3623               	rlcf	___ftadd@f2,f,c
  4395  000932  3624               	rlcf	___ftadd@f2+1,f,c
  4396  000934  3625               	rlcf	___ftadd@f2+2,f,c
  4397  000936  062A               	decf	___ftadd@exp2,f,c
  4398  000938  502B               	movf	___ftadd@exp1,w,c
  4399  00093A  182A               	xorwf	___ftadd@exp2,w,c
  4400  00093C  B4D8               	btfsc	status,2,c
  4401  00093E  D00D               	goto	i2l1737
  4402  000940  0629               	decf	___ftadd@sign,f,c
  4403  000942  C029  F026         	movff	___ftadd@sign,??___ftadd
  4404  000946  0E07               	movlw	7
  4405  000948  1626               	andwf	??___ftadd,f,c
  4406  00094A  B4D8               	btfsc	status,2,c
  4407  00094C  D006               	goto	i2l1737
  4408  00094E  D7EF               	goto	i2l1729
  4409  000950                     i2l1735:
  4410  000950  90D8               	bcf	status,0,c
  4411  000952  3222               	rrcf	___ftadd@f1+2,f,c
  4412  000954  3221               	rrcf	___ftadd@f1+1,f,c
  4413  000956  3220               	rrcf	___ftadd@f1,f,c
  4414  000958  2A2B               	incf	___ftadd@exp1,f,c
  4415  00095A                     i2l1737:
  4416  00095A  502A               	movf	___ftadd@exp2,w,c
  4417  00095C  182B               	xorwf	___ftadd@exp1,w,c
  4418  00095E  B4D8               	btfsc	status,2,c
  4419  000960  D01F               	goto	i2l520
  4420  000962  D7F6               	goto	i2l1735
  4421  000964                     i2l1739:
  4422  000964  502B               	movf	___ftadd@exp1,w,c
  4423  000966  5C2A               	subwf	___ftadd@exp2,w,c
  4424  000968  B0D8               	btfsc	status,0,c
  4425  00096A  D01A               	goto	i2l520
  4426  00096C                     i2l1741:
  4427  00096C  90D8               	bcf	status,0,c
  4428  00096E  3620               	rlcf	___ftadd@f1,f,c
  4429  000970  3621               	rlcf	___ftadd@f1+1,f,c
  4430  000972  3622               	rlcf	___ftadd@f1+2,f,c
  4431  000974  062B               	decf	___ftadd@exp1,f,c
  4432  000976  502B               	movf	___ftadd@exp1,w,c
  4433  000978  182A               	xorwf	___ftadd@exp2,w,c
  4434  00097A  B4D8               	btfsc	status,2,c
  4435  00097C  D00D               	goto	i2l1749
  4436  00097E  0629               	decf	___ftadd@sign,f,c
  4437  000980  C029  F026         	movff	___ftadd@sign,??___ftadd
  4438  000984  0E07               	movlw	7
  4439  000986  1626               	andwf	??___ftadd,f,c
  4440  000988  B4D8               	btfsc	status,2,c
  4441  00098A  D006               	goto	i2l1749
  4442  00098C  D7EF               	goto	i2l1741
  4443  00098E                     i2l1747:
  4444  00098E  90D8               	bcf	status,0,c
  4445  000990  3225               	rrcf	___ftadd@f2+2,f,c
  4446  000992  3224               	rrcf	___ftadd@f2+1,f,c
  4447  000994  3223               	rrcf	___ftadd@f2,f,c
  4448  000996  2A2A               	incf	___ftadd@exp2,f,c
  4449  000998                     i2l1749:
  4450  000998  502A               	movf	___ftadd@exp2,w,c
  4451  00099A  182B               	xorwf	___ftadd@exp1,w,c
  4452  00099C  A4D8               	btfss	status,2,c
  4453  00099E  D7F7               	goto	i2l1747
  4454  0009A0                     i2l520:
  4455  0009A0  AE29               	btfss	___ftadd@sign,7,c
  4456  0009A2  D00C               	goto	i2l529
  4457  0009A4  0EFF               	movlw	255
  4458  0009A6  1A20               	xorwf	___ftadd@f1,f,c
  4459  0009A8  0EFF               	movlw	255
  4460  0009AA  1A21               	xorwf	___ftadd@f1+1,f,c
  4461  0009AC  0EFF               	movlw	255
  4462  0009AE  1A22               	xorwf	___ftadd@f1+2,f,c
  4463  0009B0  0E01               	movlw	1
  4464  0009B2  2620               	addwf	___ftadd@f1,f,c
  4465  0009B4  0E00               	movlw	0
  4466  0009B6  2221               	addwfc	___ftadd@f1+1,f,c
  4467  0009B8  0E00               	movlw	0
  4468  0009BA  2222               	addwfc	___ftadd@f1+2,f,c
  4469  0009BC                     i2l529:
  4470  0009BC  AC29               	btfss	___ftadd@sign,6,c
  4471  0009BE  D00C               	goto	i2l1755
  4472  0009C0  0EFF               	movlw	255
  4473  0009C2  1A23               	xorwf	___ftadd@f2,f,c
  4474  0009C4  0EFF               	movlw	255
  4475  0009C6  1A24               	xorwf	___ftadd@f2+1,f,c
  4476  0009C8  0EFF               	movlw	255
  4477  0009CA  1A25               	xorwf	___ftadd@f2+2,f,c
  4478  0009CC  0E01               	movlw	1
  4479  0009CE  2623               	addwf	___ftadd@f2,f,c
  4480  0009D0  0E00               	movlw	0
  4481  0009D2  2224               	addwfc	___ftadd@f2+1,f,c
  4482  0009D4  0E00               	movlw	0
  4483  0009D6  2225               	addwfc	___ftadd@f2+2,f,c
  4484  0009D8                     i2l1755:
  4485  0009D8  0E00               	movlw	0
  4486  0009DA  6E29               	movwf	___ftadd@sign,c
  4487  0009DC  5020               	movf	___ftadd@f1,w,c
  4488  0009DE  2623               	addwf	___ftadd@f2,f,c
  4489  0009E0  5021               	movf	___ftadd@f1+1,w,c
  4490  0009E2  2224               	addwfc	___ftadd@f2+1,f,c
  4491  0009E4  5022               	movf	___ftadd@f1+2,w,c
  4492  0009E6  2225               	addwfc	___ftadd@f2+2,f,c
  4493  0009E8  AE25               	btfss	___ftadd@f2+2,7,c
  4494  0009EA  D00E               	goto	i2l1765
  4495  0009EC  0EFF               	movlw	255
  4496  0009EE  1A23               	xorwf	___ftadd@f2,f,c
  4497  0009F0  0EFF               	movlw	255
  4498  0009F2  1A24               	xorwf	___ftadd@f2+1,f,c
  4499  0009F4  0EFF               	movlw	255
  4500  0009F6  1A25               	xorwf	___ftadd@f2+2,f,c
  4501  0009F8  0E01               	movlw	1
  4502  0009FA  2623               	addwf	___ftadd@f2,f,c
  4503  0009FC  0E00               	movlw	0
  4504  0009FE  2224               	addwfc	___ftadd@f2+1,f,c
  4505  000A00  0E00               	movlw	0
  4506  000A02  2225               	addwfc	___ftadd@f2+2,f,c
  4507  000A04  0E01               	movlw	1
  4508  000A06  6E29               	movwf	___ftadd@sign,c
  4509  000A08                     i2l1765:
  4510  000A08  C023  F001         	movff	___ftadd@f2,___ftpack@arg
  4511  000A0C  C024  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4512  000A10  C025  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4513  000A14  C02B  F004         	movff	___ftadd@exp1,___ftpack@exp
  4514  000A18  C029  F005         	movff	___ftadd@sign,___ftpack@sign
  4515  000A1C  EC46  F008         	call	___ftpack	;wreg free
  4516  000A20  C001  F020         	movff	?___ftpack,?___ftadd
  4517  000A24  C002  F021         	movff	?___ftpack+1,?___ftadd+1
  4518  000A28  C003  F022         	movff	?___ftpack+2,?___ftadd+2
  4519  000A2C  0012               	return	
  4520  000A2E                     __end_of___ftadd:
  4521                           	opt stack 0
  4522                           pclatu	equ	0xFFB
  4523                           pclath	equ	0xFFA
  4524                           tblptru	equ	0xFF8
  4525                           tblptrh	equ	0xFF7
  4526                           tblptrl	equ	0xFF6
  4527                           tablat	equ	0xFF5
  4528                           prodh	equ	0xFF4
  4529                           prodl	equ	0xFF3
  4530                           intcon	equ	0xFF2
  4531                           postinc0	equ	0xFEE
  4532                           fsr0h	equ	0xFEA
  4533                           fsr0l	equ	0xFE9
  4534                           wreg	equ	0xFE8
  4535                           postdec1	equ	0xFE5
  4536                           fsr1h	equ	0xFE2
  4537                           fsr1l	equ	0xFE1
  4538                           fsr2h	equ	0xFDA
  4539                           fsr2l	equ	0xFD9
  4540                           status	equ	0xFD8
  4541                           
  4542 ;; *************** function ___abtoft *****************
  4543 ;; Defined at:
  4544 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abtoft.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  c               1    wreg     char 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  c               1   12[COMRAM] char 
  4549 ;;  f1              3    0        float 
  4550 ;;  sign            1   11[COMRAM] unsigned char 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  3    8[COMRAM] float 
  4553 ;; Registers used:
  4554 ;;		wreg, status,2, status,0, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4560 ;;      Params:         3       0       0       0       0       0       0
  4561 ;;      Locals:         2       0       0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0
  4563 ;;      Totals:         5       0       0       0       0       0       0
  4564 ;;Total ram usage:        5 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    1
  4567 ;; This function calls:
  4568 ;;		___ftpack
  4569 ;; This function is called by:
  4570 ;;		_controller_funct
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text26
  4575  001580                     __ptext26:
  4576                           	opt stack 0
  4577  001580                     ___abtoft:
  4578                           	opt stack 23
  4579                           
  4580                           ;incstack = 0
  4581                           ;___abtoft@c stored from wreg
  4582  001580  6E0D               	movwf	___abtoft@c,c
  4583  001582  0E00               	movlw	0
  4584  001584  6E0C               	movwf	___abtoft@sign,c
  4585  001586  AE0D               	btfss	___abtoft@c,7,c
  4586  001588  D003               	goto	i2l1695
  4587  00158A  6C0D               	negf	___abtoft@c,c
  4588  00158C  0E01               	movlw	1
  4589  00158E  6E0C               	movwf	___abtoft@sign,c
  4590  001590                     i2l1695:
  4591  001590  500D               	movf	___abtoft@c,w,c
  4592  001592  6E01               	movwf	___ftpack@arg,c
  4593  001594  6A02               	clrf	___ftpack@arg+1,c
  4594  001596  6A03               	clrf	___ftpack@arg+2,c
  4595  001598  0E8E               	movlw	142
  4596  00159A  6E04               	movwf	___ftpack@exp,c
  4597  00159C  C00C  F005         	movff	___abtoft@sign,___ftpack@sign
  4598  0015A0  EC46  F008         	call	___ftpack	;wreg free
  4599  0015A4  C001  F009         	movff	?___ftpack,?___abtoft
  4600  0015A8  C002  F00A         	movff	?___ftpack+1,?___abtoft+1
  4601  0015AC  C003  F00B         	movff	?___ftpack+2,?___abtoft+2
  4602  0015B0  0012               	return	
  4603  0015B2                     __end_of___abtoft:
  4604                           	opt stack 0
  4605                           pclatu	equ	0xFFB
  4606                           pclath	equ	0xFFA
  4607                           tblptru	equ	0xFF8
  4608                           tblptrh	equ	0xFF7
  4609                           tblptrl	equ	0xFF6
  4610                           tablat	equ	0xFF5
  4611                           prodh	equ	0xFF4
  4612                           prodl	equ	0xFF3
  4613                           intcon	equ	0xFF2
  4614                           postinc0	equ	0xFEE
  4615                           fsr0h	equ	0xFEA
  4616                           fsr0l	equ	0xFE9
  4617                           wreg	equ	0xFE8
  4618                           postdec1	equ	0xFE5
  4619                           fsr1h	equ	0xFE2
  4620                           fsr1l	equ	0xFE1
  4621                           fsr2h	equ	0xFDA
  4622                           fsr2l	equ	0xFD9
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function ___ftpack *****************
  4626 ;; Defined at:
  4627 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  arg             3    0[COMRAM] unsigned um
  4630 ;;  exp             1    3[COMRAM] unsigned char 
  4631 ;;  sign            1    4[COMRAM] unsigned char 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;		None
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  3    0[COMRAM] float 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4643 ;;      Params:         5       0       0       0       0       0       0
  4644 ;;      Locals:         0       0       0       0       0       0       0
  4645 ;;      Temps:          3       0       0       0       0       0       0
  4646 ;;      Totals:         8       0       0       0       0       0       0
  4647 ;;Total ram usage:        8 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		___abtoft
  4653 ;;		___ftadd
  4654 ;;		___ftmul
  4655 ;;		___lbtoft
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text27
  4660  00108C                     __ptext27:
  4661                           	opt stack 0
  4662  00108C                     ___ftpack:
  4663                           	opt stack 23
  4664                           
  4665                           ;incstack = 0
  4666  00108C  5004               	movf	___ftpack@exp,w,c
  4667  00108E  B4D8               	btfsc	status,2,c
  4668  001090  D005               	goto	i2l1615
  4669  001092  5001               	movf	___ftpack@arg,w,c
  4670  001094  1002               	iorwf	___ftpack@arg+1,w,c
  4671  001096  1003               	iorwf	___ftpack@arg+2,w,c
  4672  001098  A4D8               	btfss	status,2,c
  4673  00109A  D00C               	goto	i2l1621
  4674  00109C                     i2l1615:
  4675  00109C  0E00               	movlw	0
  4676  00109E  6E01               	movwf	?___ftpack,c
  4677  0010A0  0E00               	movlw	0
  4678  0010A2  6E02               	movwf	?___ftpack+1,c
  4679  0010A4  0E00               	movlw	0
  4680  0010A6  6E03               	movwf	?___ftpack+2,c
  4681  0010A8  0012               	return	
  4682  0010AA                     i2l1619:
  4683  0010AA  2A04               	incf	___ftpack@exp,f,c
  4684  0010AC  90D8               	bcf	status,0,c
  4685  0010AE  3203               	rrcf	___ftpack@arg+2,f,c
  4686  0010B0  3202               	rrcf	___ftpack@arg+1,f,c
  4687  0010B2  3201               	rrcf	___ftpack@arg,f,c
  4688  0010B4                     i2l1621:
  4689  0010B4  0E00               	movlw	0
  4690  0010B6  1401               	andwf	___ftpack@arg,w,c
  4691  0010B8  6E06               	movwf	??___ftpack& (0+255),c
  4692  0010BA  0E00               	movlw	0
  4693  0010BC  1402               	andwf	___ftpack@arg+1,w,c
  4694  0010BE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4695  0010C0  0EFE               	movlw	254
  4696  0010C2  1403               	andwf	___ftpack@arg+2,w,c
  4697  0010C4  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4698  0010C6  5006               	movf	??___ftpack,w,c
  4699  0010C8  1007               	iorwf	??___ftpack+1,w,c
  4700  0010CA  1008               	iorwf	??___ftpack+2,w,c
  4701  0010CC  B4D8               	btfsc	status,2,c
  4702  0010CE  D00C               	goto	i2l1627
  4703  0010D0  D7EC               	goto	i2l1619
  4704  0010D2                     i2l1623:
  4705  0010D2  2A04               	incf	___ftpack@exp,f,c
  4706  0010D4  0E01               	movlw	1
  4707  0010D6  2601               	addwf	___ftpack@arg,f,c
  4708  0010D8  0E00               	movlw	0
  4709  0010DA  2202               	addwfc	___ftpack@arg+1,f,c
  4710  0010DC  0E00               	movlw	0
  4711  0010DE  2203               	addwfc	___ftpack@arg+2,f,c
  4712  0010E0  90D8               	bcf	status,0,c
  4713  0010E2  3203               	rrcf	___ftpack@arg+2,f,c
  4714  0010E4  3202               	rrcf	___ftpack@arg+1,f,c
  4715  0010E6  3201               	rrcf	___ftpack@arg,f,c
  4716  0010E8                     i2l1627:
  4717  0010E8  0E00               	movlw	0
  4718  0010EA  1401               	andwf	___ftpack@arg,w,c
  4719  0010EC  6E06               	movwf	??___ftpack& (0+255),c
  4720  0010EE  0E00               	movlw	0
  4721  0010F0  1402               	andwf	___ftpack@arg+1,w,c
  4722  0010F2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4723  0010F4  0EFF               	movlw	255
  4724  0010F6  1403               	andwf	___ftpack@arg+2,w,c
  4725  0010F8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4726  0010FA  5006               	movf	??___ftpack,w,c
  4727  0010FC  1007               	iorwf	??___ftpack+1,w,c
  4728  0010FE  1008               	iorwf	??___ftpack+2,w,c
  4729  001100  B4D8               	btfsc	status,2,c
  4730  001102  D006               	goto	i2l1631
  4731  001104  D7E6               	goto	i2l1623
  4732  001106                     i2l1629:
  4733  001106  0604               	decf	___ftpack@exp,f,c
  4734  001108  90D8               	bcf	status,0,c
  4735  00110A  3601               	rlcf	___ftpack@arg,f,c
  4736  00110C  3602               	rlcf	___ftpack@arg+1,f,c
  4737  00110E  3603               	rlcf	___ftpack@arg+2,f,c
  4738  001110                     i2l1631:
  4739  001110  BE02               	btfsc	___ftpack@arg+1,7,c
  4740  001112  D003               	goto	i2l482
  4741  001114  0E02               	movlw	2
  4742  001116  6004               	cpfslt	___ftpack@exp,c
  4743  001118  D7F6               	goto	i2l1629
  4744  00111A                     i2l482:
  4745  00111A  A004               	btfss	___ftpack@exp,0,c
  4746  00111C  9E02               	bcf	___ftpack@arg+1,7,c
  4747  00111E  90D8               	bcf	status,0,c
  4748  001120  3204               	rrcf	___ftpack@exp,f,c
  4749  001122  5004               	movf	___ftpack@exp,w,c
  4750  001124  1203               	iorwf	___ftpack@arg+2,f,c
  4751  001126  5005               	movf	___ftpack@sign,w,c
  4752  001128  A4D8               	btfss	status,2,c
  4753  00112A  8E03               	bsf	___ftpack@arg+2,7,c
  4754  00112C  C001  F001         	movff	___ftpack@arg,?___ftpack
  4755  001130  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4756  001134  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4757  001138  0012               	return	
  4758  00113A                     __end_of___ftpack:
  4759                           	opt stack 0
  4760                           pclatu	equ	0xFFB
  4761                           pclath	equ	0xFFA
  4762                           tblptru	equ	0xFF8
  4763                           tblptrh	equ	0xFF7
  4764                           tblptrl	equ	0xFF6
  4765                           tablat	equ	0xFF5
  4766                           prodh	equ	0xFF4
  4767                           prodl	equ	0xFF3
  4768                           intcon	equ	0xFF2
  4769                           postinc0	equ	0xFEE
  4770                           fsr0h	equ	0xFEA
  4771                           fsr0l	equ	0xFE9
  4772                           wreg	equ	0xFE8
  4773                           postdec1	equ	0xFE5
  4774                           fsr1h	equ	0xFE2
  4775                           fsr1l	equ	0xFE1
  4776                           fsr2h	equ	0xFDA
  4777                           fsr2l	equ	0xFD9
  4778                           status	equ	0xFD8
  4779                           
  4780 ;; *************** function _Find_Button_Press *****************
  4781 ;; Defined at:
  4782 ;;		line 36 in file "../Buttons_Debounce_State_Mch/Buttons_Debounce.X/Buttons_Debounce.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;		None
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;		None               void
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4796 ;;      Params:         0       0       0       0       0       0       0
  4797 ;;      Locals:         0       0       0       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0
  4799 ;;      Totals:         0       0       0       0       0       0       0
  4800 ;;Total ram usage:        0 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_myIsr
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text28
  4810  001392                     __ptext28:
  4811                           	opt stack 0
  4812  001392                     _Find_Button_Press:
  4813                           	opt stack 25
  4814                           
  4815                           ;Buttons_Debounce.c: 38: static states Button_State=Waiting;
  4816                           ;Buttons_Debounce.c: 39: static unsigned char Button_Count=0;
  4817                           ;Buttons_Debounce.c: 40: static Bit_Mask Temp_Press;
  4818                           ;Buttons_Debounce.c: 44: switch (Button_State){
  4819                           
  4820                           ;incstack = 0
  4821  001392  D031               	goto	i2l1999
  4822  001394                     i2l1975:
  4823                           
  4824                           ;Buttons_Debounce.c: 46: if(PORTB)
  4825  001394  5081               	movf	3969,w,c	;volatile
  4826  001396  B4D8               	btfsc	status,2,c
  4827  001398  0012               	return	
  4828                           
  4829                           ;Buttons_Debounce.c: 47: {
  4830                           ;Buttons_Debounce.c: 48: Button_State = Detected;
  4831  00139A  0E01               	movlw	1
  4832  00139C  6E5C               	movwf	Find_Button_Press@Button_State,c
  4833                           
  4834                           ;Buttons_Debounce.c: 49: Button_Count = 0;
  4835  00139E  0E00               	movlw	0
  4836  0013A0  6E5B               	movwf	Find_Button_Press@Button_Count,c
  4837                           
  4838                           ;Buttons_Debounce.c: 51: Temp_Press.Full=PORTB;
  4839  0013A2  CF81 F05D          	movff	3969,Find_Button_Press@Temp_Press	;volatile
  4840                           
  4841                           ;Buttons_Debounce.c: 52: }
  4842                           ;Buttons_Debounce.c: 53: break;
  4843  0013A6  0012               	return	
  4844  0013A8                     i2l1981:
  4845                           
  4846                           ;Buttons_Debounce.c: 55: if (Temp_Press.Full == PORTB)
  4847  0013A8  5081               	movf	3969,w,c	;volatile
  4848  0013AA  185D               	xorwf	Find_Button_Press@Temp_Press,w,c
  4849  0013AC  A4D8               	btfss	status,2,c
  4850  0013AE  D007               	goto	i2l1989
  4851                           
  4852                           ;Buttons_Debounce.c: 56: {
  4853                           ;Buttons_Debounce.c: 57: ++Button_Count;
  4854  0013B0  2A5B               	incf	Find_Button_Press@Button_Count,f,c
  4855                           
  4856                           ;Buttons_Debounce.c: 58: if (Button_Count > 10)
  4857  0013B2  0E0A               	movlw	10
  4858  0013B4  645B               	cpfsgt	Find_Button_Press@Button_Count,c
  4859  0013B6  0012               	return	
  4860                           
  4861                           ;Buttons_Debounce.c: 59: {
  4862                           ;Buttons_Debounce.c: 60: Button_State = WaitForRelease;
  4863  0013B8  0E02               	movlw	2
  4864  0013BA  6E5C               	movwf	Find_Button_Press@Button_State,c
  4865                           
  4866                           ;Buttons_Debounce.c: 61: }
  4867                           ;Buttons_Debounce.c: 62: }
  4868  0013BC  0012               	return	
  4869  0013BE                     i2l1989:
  4870                           
  4871                           ;Buttons_Debounce.c: 63: else
  4872                           ;Buttons_Debounce.c: 64: {
  4873                           ;Buttons_Debounce.c: 65: Button_State = Waiting;
  4874  0013BE  0E00               	movlw	0
  4875  0013C0  6E5C               	movwf	Find_Button_Press@Button_State,c
  4876                           
  4877                           ;Buttons_Debounce.c: 66: }
  4878                           ;Buttons_Debounce.c: 67: break;
  4879  0013C2  0012               	return	
  4880  0013C4                     i2l1991:
  4881                           
  4882                           ;Buttons_Debounce.c: 69: if (!PORTB)
  4883  0013C4  5081               	movf	3969,w,c	;volatile
  4884  0013C6  A4D8               	btfss	status,2,c
  4885  0013C8  0012               	return	
  4886                           
  4887                           ;Buttons_Debounce.c: 70: {
  4888                           ;Buttons_Debounce.c: 71: Button_State = Update;
  4889  0013CA  0E03               	movlw	3
  4890  0013CC  6E5C               	movwf	Find_Button_Press@Button_State,c
  4891                           
  4892                           ;Buttons_Debounce.c: 72: }
  4893                           ;Buttons_Debounce.c: 73: break;
  4894  0013CE  0012               	return	
  4895  0013D0                     i2l233:
  4896                           
  4897                           ;Buttons_Debounce.c: 75: {
  4898                           ;Buttons_Debounce.c: 76: Button_Press = Temp_Press;
  4899  0013D0  C05D  F097         	movff	Find_Button_Press@Temp_Press,_Button_Press
  4900                           
  4901                           ;Buttons_Debounce.c: 77: Button_State = Waiting;
  4902  0013D4  0E00               	movlw	0
  4903  0013D6  6E5C               	movwf	Find_Button_Press@Button_State,c
  4904                           
  4905                           ;Buttons_Debounce.c: 78: Button_Count = 0;
  4906  0013D8  0E00               	movlw	0
  4907  0013DA  6E5B               	movwf	Find_Button_Press@Button_Count,c
  4908                           
  4909                           ;Buttons_Debounce.c: 79: Temp_Press.Full=0;
  4910  0013DC  0E00               	movlw	0
  4911  0013DE  6E5D               	movwf	Find_Button_Press@Temp_Press,c
  4912                           
  4913                           ;Buttons_Debounce.c: 80: }
  4914                           ;Buttons_Debounce.c: 81: break;
  4915  0013E0  0012               	return	
  4916  0013E2                     i2l1997:
  4917                           
  4918                           ;Buttons_Debounce.c: 83: {
  4919                           ;Buttons_Debounce.c: 84: Button_State = Waiting;
  4920  0013E2  0E00               	movlw	0
  4921  0013E4  6E5C               	movwf	Find_Button_Press@Button_State,c
  4922                           
  4923                           ;Buttons_Debounce.c: 85: Button_Count = 0;
  4924  0013E6  0E00               	movlw	0
  4925  0013E8  6E5B               	movwf	Find_Button_Press@Button_Count,c
  4926                           
  4927                           ;Buttons_Debounce.c: 86: Temp_Press.Full=0;
  4928  0013EA  0E00               	movlw	0
  4929  0013EC  6E5D               	movwf	Find_Button_Press@Temp_Press,c
  4930                           
  4931                           ;Buttons_Debounce.c: 87: Button_Press.Full=0;
  4932  0013EE  0E00               	movlw	0
  4933  0013F0  0100               	movlb	0	; () banked
  4934  0013F2  6F97               	movwf	_Button_Press& (0+255),b
  4935                           
  4936                           ;Buttons_Debounce.c: 88: }
  4937                           ;Buttons_Debounce.c: 89: }
  4938  0013F4  0012               	return	
  4939  0013F6                     i2l1999:
  4940  0013F6  505C               	movf	Find_Button_Press@Button_State,w,c
  4941                           
  4942                           ; Switch size 1, requested type "space"
  4943                           ; Number of cases is 4, Range of values is 0 to 3
  4944                           ; switch strategies available:
  4945                           ; Name         Instructions Cycles
  4946                           ; simple_byte           13     7 (average)
  4947                           ;	Chosen strategy is simple_byte
  4948  0013F8  0A00               	xorlw	0	; case 0
  4949  0013FA  B4D8               	btfsc	status,2,c
  4950  0013FC  D7CB               	goto	i2l1975
  4951  0013FE  0A01               	xorlw	1	; case 1
  4952  001400  B4D8               	btfsc	status,2,c
  4953  001402  D7D2               	goto	i2l1981
  4954  001404  0A03               	xorlw	3	; case 2
  4955  001406  B4D8               	btfsc	status,2,c
  4956  001408  D7DD               	goto	i2l1991
  4957  00140A  0A01               	xorlw	1	; case 3
  4958  00140C  B4D8               	btfsc	status,2,c
  4959  00140E  D7E0               	goto	i2l233
  4960  001410  D7E8               	goto	i2l1997
  4961  001412                     __end_of_Find_Button_Press:
  4962                           	opt stack 0
  4963                           pclatu	equ	0xFFB
  4964                           pclath	equ	0xFFA
  4965                           tblptru	equ	0xFF8
  4966                           tblptrh	equ	0xFF7
  4967                           tblptrl	equ	0xFF6
  4968                           tablat	equ	0xFF5
  4969                           prodh	equ	0xFF4
  4970                           prodl	equ	0xFF3
  4971                           intcon	equ	0xFF2
  4972                           postinc0	equ	0xFEE
  4973                           fsr0h	equ	0xFEA
  4974                           fsr0l	equ	0xFE9
  4975                           wreg	equ	0xFE8
  4976                           postdec1	equ	0xFE5
  4977                           fsr1h	equ	0xFE2
  4978                           fsr1l	equ	0xFE1
  4979                           fsr2h	equ	0xFDA
  4980                           fsr2l	equ	0xFD9
  4981                           status	equ	0xFD8
  4982                           pclatu	equ	0xFFB
  4983                           pclath	equ	0xFFA
  4984                           tblptru	equ	0xFF8
  4985                           tblptrh	equ	0xFF7
  4986                           tblptrl	equ	0xFF6
  4987                           tablat	equ	0xFF5
  4988                           prodh	equ	0xFF4
  4989                           prodl	equ	0xFF3
  4990                           intcon	equ	0xFF2
  4991                           postinc0	equ	0xFEE
  4992                           fsr0h	equ	0xFEA
  4993                           fsr0l	equ	0xFE9
  4994                           wreg	equ	0xFE8
  4995                           postdec1	equ	0xFE5
  4996                           fsr1h	equ	0xFE2
  4997                           fsr1l	equ	0xFE1
  4998                           fsr2h	equ	0xFDA
  4999                           fsr2l	equ	0xFD9
  5000                           status	equ	0xFD8
  5001                           
  5002                           	psect	rparam
  5003  0000                     pclatu	equ	0xFFB
  5004                           pclath	equ	0xFFA
  5005                           tblptru	equ	0xFF8
  5006                           tblptrh	equ	0xFF7
  5007                           tblptrl	equ	0xFF6
  5008                           tablat	equ	0xFF5
  5009                           prodh	equ	0xFF4
  5010                           prodl	equ	0xFF3
  5011                           intcon	equ	0xFF2
  5012                           postinc0	equ	0xFEE
  5013                           fsr0h	equ	0xFEA
  5014                           fsr0l	equ	0xFE9
  5015                           wreg	equ	0xFE8
  5016                           postdec1	equ	0xFE5
  5017                           fsr1h	equ	0xFE2
  5018                           fsr1l	equ	0xFE1
  5019                           fsr2h	equ	0xFDA
  5020                           fsr2l	equ	0xFD9
  5021                           status	equ	0xFD8
  5022                           
  5023                           	psect	temp
  5024  000064                     btemp:
  5025                           	opt stack 0
  5026  000064                     	ds	1
  5027  0000                     int$flags	set	btemp
  5028                           pclatu	equ	0xFFB
  5029                           pclath	equ	0xFFA
  5030                           tblptru	equ	0xFF8
  5031                           tblptrh	equ	0xFF7
  5032                           tblptrl	equ	0xFF6
  5033                           tablat	equ	0xFF5
  5034                           prodh	equ	0xFF4
  5035                           prodl	equ	0xFF3
  5036                           intcon	equ	0xFF2
  5037                           postinc0	equ	0xFEE
  5038                           fsr0h	equ	0xFEA
  5039                           fsr0l	equ	0xFE9
  5040                           wreg	equ	0xFE8
  5041                           postdec1	equ	0xFE5
  5042                           fsr1h	equ	0xFE2
  5043                           fsr1l	equ	0xFE1
  5044                           fsr2h	equ	0xFDA
  5045                           fsr2l	equ	0xFD9
  5046                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    165
    Data        4
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     77      99
    BANK0           128     18      29
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    startup	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    problem	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    lcd_print@mess	PTR const unsigned char  size(2) Largest target is 160
		 -> msg_ary(CODE[160]), STR_2(CODE[12]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _myIsr in COMRAM

    _myIsr->_controller_funct
    _controller_funct->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___abtoft
    ___ftadd->___ftneg
    ___abtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_Window
    _lcd_start->_lcd_clear
    _lcd_display_value->___awdiv
    _Window->_lcd_print
    _lcd_print->_lcd_print_ch
    _lcd_print_ch->_lcd_raw_send
    _lcd_cursor->_lcd_command
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_raw_send
    _Initial->_WriteTimer0

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    8097
                                             13 BANK0      5     5      0
                            _Initial
                             _Window
                            ___ltdiv
                            _delay_s
                          _lcd_clear
                         _lcd_cursor
                  _lcd_display_value
                          _lcd_print
                          _lcd_start
                              _timer
 ---------------------------------------------------------------------------------
 (1) _timer                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            3     3      0     812
                                              6 BANK0      2     2      0
                          _lcd_clear
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_display_value                                    4     4      0    1909
                                              8 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              4     4      0      92
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___ltdiv                                             10     4      6     314
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _Window                                               3     3      0    2306
                                             10 BANK0      3     3      0
                          _lcd_clear
                         _lcd_cursor
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     766
                                              5 BANK0      5     3      2
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) _lcd_print_ch                                         1     1      0     372
                                              4 BANK0      1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     1      1    1124
                                              5 BANK0      2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     372
                                              5 BANK0      1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          1     1      0     372
                                              4 BANK0      1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (3) _lcd_raw_send                                         4     3      1     350
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0     239
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     195
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                               16    16      0   12695
                                             61 COMRAM    16    16      0
                  _Find_Button_Press
                   _controller_funct
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (6) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _controller_funct                                     3     3      0   12602
                                             58 COMRAM     3     3      0
                           ___abtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (7) ___lbtoft                                             4     1      3    2488
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             15    11      4     328
                                             43 COMRAM    15    11      4
                            ___ftadd (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftneg                                              3     0      3     121
                                             28 COMRAM     3     0      3
                           ___abtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             15     9      6    3222
                                             13 COMRAM    15     9      6
                           ___abtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             12     6      6    3862
                                             31 COMRAM    12     6      6
                           ___abtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___abtoft                                             8     5      3    2557
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    2466
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (6) _Find_Button_Press                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
     _OpenTimer0
     _WriteTimer0
   _Window
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_cursor
       _lcd_command
         _lcd_raw_send
     _lcd_print
       _lcd_print_ch
         _lcd_raw_send
   ___ltdiv
   _delay_s
   _lcd_clear
     _lcd_command
       _lcd_raw_send
   _lcd_cursor
     _lcd_command
       _lcd_raw_send
   _lcd_display_value
     ___awdiv
     ___awmod
     _lcd_print_ch
       _lcd_raw_send
   _lcd_print
     _lcd_print_ch
       _lcd_raw_send
   _lcd_start
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_command
       _lcd_raw_send
   _timer

 _myIsr (ROOT)
   _Find_Button_Press
   _controller_funct
     ___abtoft
       ___ftpack
     ___ftadd
       ___abtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___abtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftneg
       ___abtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     ___fttol
       ___ftadd (ARG)
         ___abtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___abtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___abtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     12      1D       5       22.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4D      63       1       78.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      15        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Mar 22 12:24:50 2017

                ?_lcd_raw_send 0080                   ___awdiv@sign 0085                    __CFG_BORV$3 000000  
                ?_lcd_print_ch 0001                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                    __CFG_OSC$HS 000000  
                 ___ftadd@exp1 002B                   ___ftadd@exp2 002A                   ___ftadd@sign 0029  
                          l173 0748                            l248 15F8                            l184 0802  
                          l176 0760                            l249 15FA                            l178 0776  
                          l640 125C                            l635 126C                   __CFG_CPB$OFF 000000  
                          _PR2 000FCB                   __CFG_CPD$OFF 000000                            u935 0A54  
                          u945 0A7A                            u955 0AA4                            u965 0AC2  
                          u966 0AC4                            u975 0AE6                            u976 0AE8  
         __size_of_WriteTimer0 0012                            _rev 0061                   ___awmod@sign 0085  
                          prod 000FF3                            wreg 000FE8                    lcd_cursor@x 0086  
                  lcd_cursor@y 0085                   __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000  
                         l2101 1540                           l2115 1206                           l2117 1214  
                         l2119 121A                           l2091 151A                           l2243 078A  
                         l2219 0736                           l2253 07F6                           l2245 079C  
                         l2095 1524                           l2263 082C                           l2089 1514  
                         l2099 153C                           l2275 0862                           l2269 0844  
                         l2277 0874                           l1671 1448                           l1831 0F46  
                         l1841 0F76                           l1825 0F30                           l1659 15C4  
                         l1667 141A                           l1837 0F64                           l1853 0FB4  
                         l1839 0F70                           l1857 0FC8                           l1849 0FA6  
                         l1881 118C                           l1873 1166                           l1961 149C  
                         l1893 11D2                           l1885 11B0                           l1877 117A  
                         l1869 1156                           l1957 1492                           l1879 1186  
                         l1967 14BC                           l1889 11BE                           STR_1 06B2  
                         STR_2 06A6                           u1907 0ACE                           u1917 0AD6  
                         u1927 0B50                           u1937 0B58                           u1857 1484  
                         u1947 0B60                           u1867 152C                           u1877 155C  
                         u1887 1574                           u1897 0AC6                           _main 06BC  
                         _rev1 0062                   ___ftpack@arg 0001                   ___ftpack@exp 0004  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0064         __size_ofi2_WriteTimer0 0012                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0016  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___ftmul@cntr 001B  
               ??_lcd_raw_send 0081                   ___param_bank 000010                   ___ftmul@sign 001C  
              __end_of_Initial 130E                   ___fttol@exp1 003A                   ___fttol@lval 0036  
               ??_lcd_print_ch 0084                  lcd_command@in 0084                          ?_main 0001  
              __end_of___awdiv 0FD2                __end_of___ftadd 0A2E                __end_of___awmod 11DC  
              __end_of___ftneg 1646                __end_of___ftmul 0D50                          _T0CON 000FD5  
              ___awdiv@divisor 0082                __end_of___fttol 0C5C                __end_of___ltdiv 127A  
                        i2l233 13D0                          i2l161 0E04                          i2l520 09A0  
                        i2l505 08C6                          i2l509 08F0                          i2l529 09BC  
                        i2l482 111A                          i2l562 1638                ___awdiv@counter 0084  
                        _TMR0H 000FD7                          _TMR1H 000FCF                          _TMR0L 000FD6  
                        _TMR1L 000FCE                          _PORTB 000F81                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISD 000F95                          _TRISE 000F96  
                __CFG_PWRT$OFF 000000                __end_of_delay_s 154E                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
                        _count 005F                          _myIsr 0008                  ___ftpack@sign 0005  
                        _timer 1692                __end_of_msg_ary 06A6                          tablat 000FF5  
                        status 000FD8                __initialization 14C2                   __end_of_main 0882  
     __end_of_controller_funct 0F14                         ??_main 008D                  ___fttol@sign1 0035  
                i2_WriteTimer0 1680                  __activetblptr 000002               __end_of___abtoft 15B2  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
                       _ADRESH 000FC4                         ?_myIsr 0001                         _CCPR1H 000FBF  
                       _CCPR1L 000FBE                         _CCPR2L 000FBB               ___awdiv@dividend 0080  
                       ?_timer 0001               __end_of___ftpack 113A               __end_of___lbtoft 1622  
                       u110_41 0892                         u111_41 08A6                         u131_41 0C6C  
                       i2l2171 0DB4                         i2l1621 10B4                         i2l1631 1110  
                       i2l1623 10D2                         i2l1615 109C                         i2l1713 08FE  
                   _OpenTimer0 15D8                         i2l1627 10E8                         i2l1619 10AA  
                       i2l1707 08D4                         i2l2179 0DDE                         i2l1629 1106  
                       i2l1741 096C                         i2l1805 0D06                         u133_41 0C94  
                       i2l1735 0950                         i2l1737 095A                         i2l1729 092E  
                       i2l1809 0D16                         i2l1755 09D8                         i2l1747 098E  
                       i2l1739 0964                         i2l1907 0B94                         i2l1765 0A08  
                       i2l1749 0998                         i2l1781 0CAC                         i2l1925 0BFA  
                       u150_41 0B78                         i2l1695 1590                         i2l1775 0C84  
                       i2l1943 0C4A                         i2l1935 0C22                         i2l1937 0C2E  
                       i2l1929 0C0A                         i2l1795 0CDE                         i2l1939 0C34  
                       i2l1981 13A8                         i2l1991 13C4                         i2l1975 1394  
                       i2l1799 0CEE                         i2l1997 13E2                         i2l1989 13BE  
                       i2l1999 13F6                         _TICK_E 0098                         _Actual 005E  
                    ??_Initial 0084                 __CFG_XINST$OFF 000000                  lcd_print@mess 0085  
                       _Motor1 0092               __end_of_lcd_init 0606           __size_of_lcd_command 0014  
                       _Window 130E                      ??___awdiv 0084                      ??___ftadd 0026  
               __CFG_STVREN$ON 000000                      ??___awmod 0084                      ??___ftneg 0020  
                    ??___ftmul 0014                      ??___fttol 0030                      ??___ltdiv 0086  
             OpenTimer0@config 0080                         clear_0 14C8                         clear_1 14D4  
             ___awdiv@quotient 0086                ___awmod@divisor 0082                      ??_delay_s 0080  
               ?i2_WriteTimer0 0001                ___awmod@counter 0084          ___ftmul@f3_as_product 0018  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8           __end_of_lcd_raw_send 0B68                     ___abtoft@c 000D  
         __end_of_lcd_print_ch 165A                     __accesstop 0080        __end_of__initialization 14FA  
              __CFG_PBADEN$OFF 000000                     ___ftadd@f1 0020                     ___ftadd@f2 0023  
                ___rparam_used 000001                     ___ftneg@f1 001D                     ___lbtoft@c 000C  
                   ___ftmul@f1 000E                     ___ftmul@f2 0011                     ___fttol@f1 002C  
               __pcstackCOMRAM 0001                   __pidataBANK0 169C                  __end_of_myIsr 0E40  
                __end_of_timer 169C             __size_of_lcd_clear 0032             __size_of_lcd_print 0064  
           __size_of_lcd_start 004C                        ??_myIsr 003E                        ??_timer 0080  
                   __pbssBANK0 0092                    ?_OpenTimer0 0001                 lcd_raw_send@RS 0080  
               lcd_raw_send@in 0083                        ?_Window 0001          lcd_display_value@tens 0089  
                    ?___abtoft 0009                ??i2_WriteTimer0 0003               WriteTimer0@timer 0082  
                ??_WriteTimer0 0082                      ?___ftpack 0001                      ?___lbtoft 0009  
                   _lcd_cursor 15B2            i2WriteTimer0@timer0 0001                        _Initial 127A  
                   _count_test 0060                        __Hparam 0000                        __Lparam 0000  
            __end_of_lcd_clear 1580    Find_Button_Press@Temp_Press 005D                __size_of_Window 0084  
            __end_of_lcd_print 1476              __end_of_lcd_start 14C2                 lcd_print_ch@in 0084  
                      ___awdiv 0F14                        ___ftadd 0882                        ___awmod 113A  
                      ___ftneg 1622                        ___ftmul 0C5C                        ___fttol 0B68  
                      ___ltdiv 11DC                     ??___abtoft 000C                   __psmallconst 0600  
            ?_controller_funct 0001                        __pcinit 14C2                     ??___ftpack 0006  
                   ??___lbtoft 000C                        _delay_s 1508                        __ramtop 0600  
                      _capture 0095            __size_of_OpenTimer0 0026                        __ptext0 06BC  
                      __ptext1 1692                        __ptext2 1476                        __ptext3 0FD2  
                      __ptext4 113A                        __ptext5 0F14                        __ptext6 1508  
                      __ptext7 11DC                        __ptext8 130E                        __ptext9 1412  
                    _T0CONbits 000FD5             ??_controller_funct 003B                      _T1CONbits 000FCD  
        __size_of_lcd_raw_send 013A                      _T2CONbits 000FCA               ___awmod@dividend 0080  
                      _msg_ary 0606            __end_of_WriteTimer0 1680          __size_of_lcd_print_ch 0014  
                      _problem 0099                        _startup 009B                 __pintcode_body 0D50  
         end_of_initialization 14FA                  __Lmediumconst 0000                        int_func 0D50  
            _Find_Button_Press 1392               ___ltdiv@dividend 0080             ?_Find_Button_Press 0001  
                      postdec1 000FE5                        postinc0 000FEE                   _lcd_raw_send 0A2E  
          ??_Find_Button_Press 0001                   _lcd_print_ch 1646                      _PORTEbits 000F84  
                    _TRISCbits 000F94                    ?_lcd_cursor 0085               ___ltdiv@quotient 0086  
    __end_of_Find_Button_Press 1412                    _CCP1CONbits 000FBD                    _CCP2CONbits 000FBA  
                ??_lcd_command 0084                     lcd_print@i 0089                     lcd_start@i 0087  
                  ___ftmul@exp 0017              _lcd_display_value 0FD2                 __end_of_Window 1392  
           ?_lcd_display_value 0001                    _WriteTimer0 166E            ??_lcd_display_value 0088  
          start_initialization 14C2                   _Button_Press 0097                   ??_OpenTimer0 0080  
    __end_of_lcd_display_value 108C                       ??_Window 008A            __size_of_lcd_cursor 0026  
          __end_of_lcd_command 166E                    __pdataBANK0 0099               __CFG_LPT1OSC$OFF 000000  
            __size_of___abtoft 0032             __end_of_OpenTimer0 15FE              __size_of___ftpack 00AE  
            __size_of___lbtoft 0024                    __pbssCOMRAM 004E                  __pcstackBANK0 0080  
                    Window@num 008C     __size_of_Find_Button_Press 0080                       ?_Initial 0001  
            __CFG_CCP2MX$PORTC 000000                      __pintcode 0008                       ?___awdiv 0080  
                     ?___ftadd 0020                       ?___awmod 0080                       ?___ftneg 001D  
                     ?___ftmul 000E                       ?___fttol 002C                       ?___ltdiv 0080  
                    _lcd_clear 154E                       ?_delay_s 0001          __end_ofi2_WriteTimer0 1692  
                    _lcd_print 1412         lcd_display_value@hunds 0088                      _lcd_start 1476  
       lcd_display_value@value 008B         lcd_display_value@units 008A                    __smallconst 0600  
            WriteTimer0@timer0 0080             i2WriteTimer0@timer 0003                 __size_of_myIsr 0E38  
               __size_of_timer 000A      __size_of_controller_funct 00D4           controller_funct@temp 003B  
                     _LATDbits 000F8C                       _LATEbits 000F8D                       _PIE1bits 000F9D  
                  _lcd_command 165A     __size_of_lcd_display_value 00BA                       i2u152_40 0BB2  
             main@my_mch_state 0090                       i2u152_45 0BAA                       i2u174_40 0DC6  
                     i2u174_46 0DC8                ___ltdiv@divisor 0083                       _PIR1bits 000F9E  
              ___ltdiv@counter 0089                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
                   ?_lcd_clear 0001                     ?_lcd_print 0085                     ?_lcd_start 0001  
                   _ADCON0bits 000FC2                 main@ADC_Result 0091                      main@t1clk 008D  
                 ??_lcd_cursor 0086                      copy_data0 14EE                       __Hrparam 0000  
             __size_of_Initial 0094                       __Lrparam 0000             __CFG_BOREN$SBORDIS 000000  
           __end_of_lcd_cursor 15D8                       ___abtoft 1580               __size_of___awdiv 00BE  
             __size_of___ftadd 01AC               __size_of___awmod 00A2               __size_of___ftneg 0024  
             __size_of___ftmul 00F4               __size_of___fttol 00F4               __size_of___ltdiv 009E  
                 ?_WriteTimer0 0080                       ___ftpack 108C                       ___lbtoft 15FE  
             __size_of_delay_s 0046                       __ptext10 1646                       __ptext11 15B2  
                     __ptext20 0E40                       __ptext12 154E                       __ptext21 15FE  
                     __ptext13 165A                       __ptext22 0B68                       __ptext14 0A2E  
                     __ptext23 1622                       __ptext15 127A                       __ptext24 0C5C  
                     __ptext16 166E                       __ptext25 0882                       __ptext17 15D8  
                     __ptext26 1580                       __ptext27 108C                       __ptext19 1680  
                     __ptext28 1392                       _lcd_init 0601                       _control1 004E  
                __size_of_main 01C6                       delay_s@i 0083                       delay_s@j 0082  
                     int$flags 0064                    ??_lcd_clear 0085                    delay_s@secs 0081  
                  ??_lcd_print 0087                    ??_lcd_start 0086                     _INTCONbits 000FF2  
                  _sample_time 0063               _controller_funct 0E40                       intlevel2 0000  
                ___abtoft@sign 000C                     _OSCCONbits 000FD3  Find_Button_Press@Button_Count 005B  
Find_Button_Press@Button_State 005C                   ?_lcd_command 0001  
